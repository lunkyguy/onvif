/* soapDoorControlBindingService.cpp
   Generated by gSOAP 2.8.17r from onvif.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapDoorControlBindingService.h"

DoorControlBindingService::DoorControlBindingService()
{	this->soap = soap_new();
	this->own = true;
	DoorControlBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

DoorControlBindingService::DoorControlBindingService(struct soap *_soap)
{	this->soap = _soap;
	this->own = false;
	DoorControlBindingService_init(_soap->imode, _soap->omode);
}

DoorControlBindingService::DoorControlBindingService(soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	DoorControlBindingService_init(iomode, iomode);
}

DoorControlBindingService::DoorControlBindingService(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->own = true;
	DoorControlBindingService_init(imode, omode);
}

DoorControlBindingService::~DoorControlBindingService()
{	if (this->own)
		soap_free(this->soap);
}

void DoorControlBindingService::DoorControlBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
	{"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
	{"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
	{"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
	{"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
	{"wsc", "http://schemas.xmlsoap.org/ws/2005/02/sc", NULL, NULL},
	{"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
	{"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
	{"ns2", "http://www.onvif.org/ver10/pacs", NULL, NULL},
	{"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
	{"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
	{"name", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
	{"name10", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
	{"name11", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
	{"name12", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
	{"name13", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
	{"name14", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
	{"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"name2", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
	{"name3", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
	{"name4", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
	{"ns5", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
	{"name5", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
	{"name6", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
	{"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
	{"name7", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
	{"name8", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
	{"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
	{"name9", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
	{"ns1", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
	{"ns10", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
	{"ns11", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
	{"ns12", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
	{"ns3", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
	{"ns4", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
	{"ns6", "http://www.onvif.org/ver10/authenticationbehavior/wsdl", NULL, NULL},
	{"ns7", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
	{"ns8", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
	{"ns9", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
	{"tad", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
	{"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
	{"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
	{"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
	{"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
	{"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
	{"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
	{"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
	{"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
	{"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
	{"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void DoorControlBindingService::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void DoorControlBindingService::reset()
{	destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	DoorControlBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
DoorControlBindingService *DoorControlBindingService::copy()
{	DoorControlBindingService *dup = SOAP_NEW_COPY(DoorControlBindingService);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}
#endif

int DoorControlBindingService::soap_close_socket()
{	return soap_closesock(this->soap);
}

int DoorControlBindingService::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

int DoorControlBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this->soap, string, detailXML);
}

int DoorControlBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

int DoorControlBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this->soap, string, detailXML);
}

int DoorControlBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

void DoorControlBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void DoorControlBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *DoorControlBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

void DoorControlBindingService::soap_noheader()
{	this->soap->header = NULL;
}

void DoorControlBindingService::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsse__Security = wsse__Security;
}

const SOAP_ENV__Header *DoorControlBindingService::soap_header()
{	return this->soap->header;
}

int DoorControlBindingService::run(int port)
{	if (soap_valid_socket(this->soap->master) || soap_valid_socket(bind(NULL, port, 100)))
	{	for (;;)
		{	if (!soap_valid_socket(accept()) || serve())
				return this->soap->error;
			soap_destroy(this->soap);
			soap_end(this->soap);
		}
	}
	else
		return this->soap->error;
	return SOAP_OK;
}

SOAP_SOCKET DoorControlBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this->soap, host, port, backlog);
}

SOAP_SOCKET DoorControlBindingService::accept()
{	return soap_accept(this->soap);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int DoorControlBindingService::ssl_accept()
{	return soap_ssl_accept(this->soap);
}
#endif

int DoorControlBindingService::serve()
{
#ifndef WITH_FASTCGI
	unsigned int k = this->soap->max_keep_alive;
#endif
	do
	{

#ifndef WITH_FASTCGI
		if (this->soap->max_keep_alive > 0 && !--k)
			this->soap->keep_alive = 0;
#endif

		if (soap_begin_serve(this->soap))
		{	if (this->soap->error >= SOAP_STOP)
				continue;
			return this->soap->error;
		}
		if (dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this->soap);
#else
			return soap_send_fault(this->soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(this->soap);
		soap_end(this->soap);
	} while (1);
#else
	} while (this->soap->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___ns8__GetServiceCapabilities(DoorControlBindingService*);
static int serve___ns8__GetDoorInfoList(DoorControlBindingService*);
static int serve___ns8__GetDoorInfo(DoorControlBindingService*);
static int serve___ns8__GetDoorList(DoorControlBindingService*);
static int serve___ns8__GetDoors(DoorControlBindingService*);
static int serve___ns8__CreateDoor(DoorControlBindingService*);
static int serve___ns8__SetDoor(DoorControlBindingService*);
static int serve___ns8__ModifyDoor(DoorControlBindingService*);
static int serve___ns8__DeleteDoor(DoorControlBindingService*);
static int serve___ns8__GetDoorState(DoorControlBindingService*);
static int serve___ns8__AccessDoor(DoorControlBindingService*);
static int serve___ns8__LockDoor(DoorControlBindingService*);
static int serve___ns8__UnlockDoor(DoorControlBindingService*);
static int serve___ns8__BlockDoor(DoorControlBindingService*);
static int serve___ns8__LockDownDoor(DoorControlBindingService*);
static int serve___ns8__LockDownReleaseDoor(DoorControlBindingService*);
static int serve___ns8__LockOpenDoor(DoorControlBindingService*);
static int serve___ns8__LockOpenReleaseDoor(DoorControlBindingService*);
static int serve___ns8__DoubleLockDoor(DoorControlBindingService*);

int DoorControlBindingService::dispatch()
{	DoorControlBindingService_init(this->soap->imode, this->soap->omode);
	soap_peek_element(this->soap);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns8:GetServiceCapabilities"))
		return serve___ns8__GetServiceCapabilities(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns8:GetDoorInfoList"))
		return serve___ns8__GetDoorInfoList(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns8:GetDoorInfo"))
		return serve___ns8__GetDoorInfo(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns8:GetDoorList"))
		return serve___ns8__GetDoorList(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns8:GetDoors"))
		return serve___ns8__GetDoors(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns8:CreateDoor"))
		return serve___ns8__CreateDoor(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns8:SetDoor"))
		return serve___ns8__SetDoor(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns8:ModifyDoor"))
		return serve___ns8__ModifyDoor(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns8:DeleteDoor"))
		return serve___ns8__DeleteDoor(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns8:GetDoorState"))
		return serve___ns8__GetDoorState(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns8:AccessDoor"))
		return serve___ns8__AccessDoor(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns8:LockDoor"))
		return serve___ns8__LockDoor(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns8:UnlockDoor"))
		return serve___ns8__UnlockDoor(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns8:BlockDoor"))
		return serve___ns8__BlockDoor(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns8:LockDownDoor"))
		return serve___ns8__LockDownDoor(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns8:LockDownReleaseDoor"))
		return serve___ns8__LockDownReleaseDoor(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns8:LockOpenDoor"))
		return serve___ns8__LockOpenDoor(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns8:LockOpenReleaseDoor"))
		return serve___ns8__LockOpenReleaseDoor(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns8:DoubleLockDoor"))
		return serve___ns8__DoubleLockDoor(this);
	return this->soap->error = SOAP_NO_METHOD;
}

static int serve___ns8__GetServiceCapabilities(DoorControlBindingService *service)
{	struct soap *soap = service->soap;
	struct __ns8__GetServiceCapabilities soap_tmp___ns8__GetServiceCapabilities;
	_ns8__GetServiceCapabilitiesResponse ns8__GetServiceCapabilitiesResponse;
	ns8__GetServiceCapabilitiesResponse.soap_default(soap);
	soap_default___ns8__GetServiceCapabilities(soap, &soap_tmp___ns8__GetServiceCapabilities);
	if (!soap_get___ns8__GetServiceCapabilities(soap, &soap_tmp___ns8__GetServiceCapabilities, "-ns8:GetServiceCapabilities", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetServiceCapabilities(soap_tmp___ns8__GetServiceCapabilities.ns8__GetServiceCapabilities, &ns8__GetServiceCapabilitiesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetServiceCapabilitiesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetServiceCapabilitiesResponse.soap_put(soap, "ns8:GetServiceCapabilitiesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetServiceCapabilitiesResponse.soap_put(soap, "ns8:GetServiceCapabilitiesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetDoorInfoList(DoorControlBindingService *service)
{	struct soap *soap = service->soap;
	struct __ns8__GetDoorInfoList soap_tmp___ns8__GetDoorInfoList;
	_ns8__GetDoorInfoListResponse ns8__GetDoorInfoListResponse;
	ns8__GetDoorInfoListResponse.soap_default(soap);
	soap_default___ns8__GetDoorInfoList(soap, &soap_tmp___ns8__GetDoorInfoList);
	if (!soap_get___ns8__GetDoorInfoList(soap, &soap_tmp___ns8__GetDoorInfoList, "-ns8:GetDoorInfoList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetDoorInfoList(soap_tmp___ns8__GetDoorInfoList.ns8__GetDoorInfoList, &ns8__GetDoorInfoListResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetDoorInfoListResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetDoorInfoListResponse.soap_put(soap, "ns8:GetDoorInfoListResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetDoorInfoListResponse.soap_put(soap, "ns8:GetDoorInfoListResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetDoorInfo(DoorControlBindingService *service)
{	struct soap *soap = service->soap;
	struct __ns8__GetDoorInfo soap_tmp___ns8__GetDoorInfo;
	_ns8__GetDoorInfoResponse ns8__GetDoorInfoResponse;
	ns8__GetDoorInfoResponse.soap_default(soap);
	soap_default___ns8__GetDoorInfo(soap, &soap_tmp___ns8__GetDoorInfo);
	if (!soap_get___ns8__GetDoorInfo(soap, &soap_tmp___ns8__GetDoorInfo, "-ns8:GetDoorInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetDoorInfo(soap_tmp___ns8__GetDoorInfo.ns8__GetDoorInfo, &ns8__GetDoorInfoResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetDoorInfoResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetDoorInfoResponse.soap_put(soap, "ns8:GetDoorInfoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetDoorInfoResponse.soap_put(soap, "ns8:GetDoorInfoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetDoorList(DoorControlBindingService *service)
{	struct soap *soap = service->soap;
	struct __ns8__GetDoorList soap_tmp___ns8__GetDoorList;
	_ns8__GetDoorListResponse ns8__GetDoorListResponse;
	ns8__GetDoorListResponse.soap_default(soap);
	soap_default___ns8__GetDoorList(soap, &soap_tmp___ns8__GetDoorList);
	if (!soap_get___ns8__GetDoorList(soap, &soap_tmp___ns8__GetDoorList, "-ns8:GetDoorList", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetDoorList(soap_tmp___ns8__GetDoorList.ns8__GetDoorList, &ns8__GetDoorListResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetDoorListResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetDoorListResponse.soap_put(soap, "ns8:GetDoorListResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetDoorListResponse.soap_put(soap, "ns8:GetDoorListResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetDoors(DoorControlBindingService *service)
{	struct soap *soap = service->soap;
	struct __ns8__GetDoors soap_tmp___ns8__GetDoors;
	_ns8__GetDoorsResponse ns8__GetDoorsResponse;
	ns8__GetDoorsResponse.soap_default(soap);
	soap_default___ns8__GetDoors(soap, &soap_tmp___ns8__GetDoors);
	if (!soap_get___ns8__GetDoors(soap, &soap_tmp___ns8__GetDoors, "-ns8:GetDoors", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetDoors(soap_tmp___ns8__GetDoors.ns8__GetDoors, &ns8__GetDoorsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetDoorsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetDoorsResponse.soap_put(soap, "ns8:GetDoorsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetDoorsResponse.soap_put(soap, "ns8:GetDoorsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__CreateDoor(DoorControlBindingService *service)
{	struct soap *soap = service->soap;
	struct __ns8__CreateDoor soap_tmp___ns8__CreateDoor;
	_ns8__CreateDoorResponse ns8__CreateDoorResponse;
	ns8__CreateDoorResponse.soap_default(soap);
	soap_default___ns8__CreateDoor(soap, &soap_tmp___ns8__CreateDoor);
	if (!soap_get___ns8__CreateDoor(soap, &soap_tmp___ns8__CreateDoor, "-ns8:CreateDoor", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateDoor(soap_tmp___ns8__CreateDoor.ns8__CreateDoor, &ns8__CreateDoorResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__CreateDoorResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__CreateDoorResponse.soap_put(soap, "ns8:CreateDoorResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__CreateDoorResponse.soap_put(soap, "ns8:CreateDoorResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__SetDoor(DoorControlBindingService *service)
{	struct soap *soap = service->soap;
	struct __ns8__SetDoor soap_tmp___ns8__SetDoor;
	_ns8__SetDoorResponse ns8__SetDoorResponse;
	ns8__SetDoorResponse.soap_default(soap);
	soap_default___ns8__SetDoor(soap, &soap_tmp___ns8__SetDoor);
	if (!soap_get___ns8__SetDoor(soap, &soap_tmp___ns8__SetDoor, "-ns8:SetDoor", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetDoor(soap_tmp___ns8__SetDoor.ns8__SetDoor, &ns8__SetDoorResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__SetDoorResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__SetDoorResponse.soap_put(soap, "ns8:SetDoorResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__SetDoorResponse.soap_put(soap, "ns8:SetDoorResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__ModifyDoor(DoorControlBindingService *service)
{	struct soap *soap = service->soap;
	struct __ns8__ModifyDoor soap_tmp___ns8__ModifyDoor;
	_ns8__ModifyDoorResponse ns8__ModifyDoorResponse;
	ns8__ModifyDoorResponse.soap_default(soap);
	soap_default___ns8__ModifyDoor(soap, &soap_tmp___ns8__ModifyDoor);
	if (!soap_get___ns8__ModifyDoor(soap, &soap_tmp___ns8__ModifyDoor, "-ns8:ModifyDoor", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->ModifyDoor(soap_tmp___ns8__ModifyDoor.ns8__ModifyDoor, &ns8__ModifyDoorResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__ModifyDoorResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__ModifyDoorResponse.soap_put(soap, "ns8:ModifyDoorResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__ModifyDoorResponse.soap_put(soap, "ns8:ModifyDoorResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__DeleteDoor(DoorControlBindingService *service)
{	struct soap *soap = service->soap;
	struct __ns8__DeleteDoor soap_tmp___ns8__DeleteDoor;
	_ns8__DeleteDoorResponse ns8__DeleteDoorResponse;
	ns8__DeleteDoorResponse.soap_default(soap);
	soap_default___ns8__DeleteDoor(soap, &soap_tmp___ns8__DeleteDoor);
	if (!soap_get___ns8__DeleteDoor(soap, &soap_tmp___ns8__DeleteDoor, "-ns8:DeleteDoor", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteDoor(soap_tmp___ns8__DeleteDoor.ns8__DeleteDoor, &ns8__DeleteDoorResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__DeleteDoorResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__DeleteDoorResponse.soap_put(soap, "ns8:DeleteDoorResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__DeleteDoorResponse.soap_put(soap, "ns8:DeleteDoorResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__GetDoorState(DoorControlBindingService *service)
{	struct soap *soap = service->soap;
	struct __ns8__GetDoorState soap_tmp___ns8__GetDoorState;
	_ns8__GetDoorStateResponse ns8__GetDoorStateResponse;
	ns8__GetDoorStateResponse.soap_default(soap);
	soap_default___ns8__GetDoorState(soap, &soap_tmp___ns8__GetDoorState);
	if (!soap_get___ns8__GetDoorState(soap, &soap_tmp___ns8__GetDoorState, "-ns8:GetDoorState", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetDoorState(soap_tmp___ns8__GetDoorState.ns8__GetDoorState, &ns8__GetDoorStateResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__GetDoorStateResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__GetDoorStateResponse.soap_put(soap, "ns8:GetDoorStateResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__GetDoorStateResponse.soap_put(soap, "ns8:GetDoorStateResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__AccessDoor(DoorControlBindingService *service)
{	struct soap *soap = service->soap;
	struct __ns8__AccessDoor soap_tmp___ns8__AccessDoor;
	_ns8__AccessDoorResponse ns8__AccessDoorResponse;
	ns8__AccessDoorResponse.soap_default(soap);
	soap_default___ns8__AccessDoor(soap, &soap_tmp___ns8__AccessDoor);
	if (!soap_get___ns8__AccessDoor(soap, &soap_tmp___ns8__AccessDoor, "-ns8:AccessDoor", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AccessDoor(soap_tmp___ns8__AccessDoor.ns8__AccessDoor, &ns8__AccessDoorResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__AccessDoorResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__AccessDoorResponse.soap_put(soap, "ns8:AccessDoorResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__AccessDoorResponse.soap_put(soap, "ns8:AccessDoorResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__LockDoor(DoorControlBindingService *service)
{	struct soap *soap = service->soap;
	struct __ns8__LockDoor soap_tmp___ns8__LockDoor;
	_ns8__LockDoorResponse ns8__LockDoorResponse;
	ns8__LockDoorResponse.soap_default(soap);
	soap_default___ns8__LockDoor(soap, &soap_tmp___ns8__LockDoor);
	if (!soap_get___ns8__LockDoor(soap, &soap_tmp___ns8__LockDoor, "-ns8:LockDoor", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->LockDoor(soap_tmp___ns8__LockDoor.ns8__LockDoor, &ns8__LockDoorResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__LockDoorResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__LockDoorResponse.soap_put(soap, "ns8:LockDoorResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__LockDoorResponse.soap_put(soap, "ns8:LockDoorResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__UnlockDoor(DoorControlBindingService *service)
{	struct soap *soap = service->soap;
	struct __ns8__UnlockDoor soap_tmp___ns8__UnlockDoor;
	_ns8__UnlockDoorResponse ns8__UnlockDoorResponse;
	ns8__UnlockDoorResponse.soap_default(soap);
	soap_default___ns8__UnlockDoor(soap, &soap_tmp___ns8__UnlockDoor);
	if (!soap_get___ns8__UnlockDoor(soap, &soap_tmp___ns8__UnlockDoor, "-ns8:UnlockDoor", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->UnlockDoor(soap_tmp___ns8__UnlockDoor.ns8__UnlockDoor, &ns8__UnlockDoorResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__UnlockDoorResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__UnlockDoorResponse.soap_put(soap, "ns8:UnlockDoorResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__UnlockDoorResponse.soap_put(soap, "ns8:UnlockDoorResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__BlockDoor(DoorControlBindingService *service)
{	struct soap *soap = service->soap;
	struct __ns8__BlockDoor soap_tmp___ns8__BlockDoor;
	_ns8__BlockDoorResponse ns8__BlockDoorResponse;
	ns8__BlockDoorResponse.soap_default(soap);
	soap_default___ns8__BlockDoor(soap, &soap_tmp___ns8__BlockDoor);
	if (!soap_get___ns8__BlockDoor(soap, &soap_tmp___ns8__BlockDoor, "-ns8:BlockDoor", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->BlockDoor(soap_tmp___ns8__BlockDoor.ns8__BlockDoor, &ns8__BlockDoorResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__BlockDoorResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__BlockDoorResponse.soap_put(soap, "ns8:BlockDoorResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__BlockDoorResponse.soap_put(soap, "ns8:BlockDoorResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__LockDownDoor(DoorControlBindingService *service)
{	struct soap *soap = service->soap;
	struct __ns8__LockDownDoor soap_tmp___ns8__LockDownDoor;
	_ns8__LockDownDoorResponse ns8__LockDownDoorResponse;
	ns8__LockDownDoorResponse.soap_default(soap);
	soap_default___ns8__LockDownDoor(soap, &soap_tmp___ns8__LockDownDoor);
	if (!soap_get___ns8__LockDownDoor(soap, &soap_tmp___ns8__LockDownDoor, "-ns8:LockDownDoor", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->LockDownDoor(soap_tmp___ns8__LockDownDoor.ns8__LockDownDoor, &ns8__LockDownDoorResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__LockDownDoorResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__LockDownDoorResponse.soap_put(soap, "ns8:LockDownDoorResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__LockDownDoorResponse.soap_put(soap, "ns8:LockDownDoorResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__LockDownReleaseDoor(DoorControlBindingService *service)
{	struct soap *soap = service->soap;
	struct __ns8__LockDownReleaseDoor soap_tmp___ns8__LockDownReleaseDoor;
	_ns8__LockDownReleaseDoorResponse ns8__LockDownReleaseDoorResponse;
	ns8__LockDownReleaseDoorResponse.soap_default(soap);
	soap_default___ns8__LockDownReleaseDoor(soap, &soap_tmp___ns8__LockDownReleaseDoor);
	if (!soap_get___ns8__LockDownReleaseDoor(soap, &soap_tmp___ns8__LockDownReleaseDoor, "-ns8:LockDownReleaseDoor", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->LockDownReleaseDoor(soap_tmp___ns8__LockDownReleaseDoor.ns8__LockDownReleaseDoor, &ns8__LockDownReleaseDoorResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__LockDownReleaseDoorResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__LockDownReleaseDoorResponse.soap_put(soap, "ns8:LockDownReleaseDoorResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__LockDownReleaseDoorResponse.soap_put(soap, "ns8:LockDownReleaseDoorResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__LockOpenDoor(DoorControlBindingService *service)
{	struct soap *soap = service->soap;
	struct __ns8__LockOpenDoor soap_tmp___ns8__LockOpenDoor;
	_ns8__LockOpenDoorResponse ns8__LockOpenDoorResponse;
	ns8__LockOpenDoorResponse.soap_default(soap);
	soap_default___ns8__LockOpenDoor(soap, &soap_tmp___ns8__LockOpenDoor);
	if (!soap_get___ns8__LockOpenDoor(soap, &soap_tmp___ns8__LockOpenDoor, "-ns8:LockOpenDoor", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->LockOpenDoor(soap_tmp___ns8__LockOpenDoor.ns8__LockOpenDoor, &ns8__LockOpenDoorResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__LockOpenDoorResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__LockOpenDoorResponse.soap_put(soap, "ns8:LockOpenDoorResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__LockOpenDoorResponse.soap_put(soap, "ns8:LockOpenDoorResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__LockOpenReleaseDoor(DoorControlBindingService *service)
{	struct soap *soap = service->soap;
	struct __ns8__LockOpenReleaseDoor soap_tmp___ns8__LockOpenReleaseDoor;
	_ns8__LockOpenReleaseDoorResponse ns8__LockOpenReleaseDoorResponse;
	ns8__LockOpenReleaseDoorResponse.soap_default(soap);
	soap_default___ns8__LockOpenReleaseDoor(soap, &soap_tmp___ns8__LockOpenReleaseDoor);
	if (!soap_get___ns8__LockOpenReleaseDoor(soap, &soap_tmp___ns8__LockOpenReleaseDoor, "-ns8:LockOpenReleaseDoor", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->LockOpenReleaseDoor(soap_tmp___ns8__LockOpenReleaseDoor.ns8__LockOpenReleaseDoor, &ns8__LockOpenReleaseDoorResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__LockOpenReleaseDoorResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__LockOpenReleaseDoorResponse.soap_put(soap, "ns8:LockOpenReleaseDoorResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__LockOpenReleaseDoorResponse.soap_put(soap, "ns8:LockOpenReleaseDoorResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns8__DoubleLockDoor(DoorControlBindingService *service)
{	struct soap *soap = service->soap;
	struct __ns8__DoubleLockDoor soap_tmp___ns8__DoubleLockDoor;
	_ns8__DoubleLockDoorResponse ns8__DoubleLockDoorResponse;
	ns8__DoubleLockDoorResponse.soap_default(soap);
	soap_default___ns8__DoubleLockDoor(soap, &soap_tmp___ns8__DoubleLockDoor);
	if (!soap_get___ns8__DoubleLockDoor(soap, &soap_tmp___ns8__DoubleLockDoor, "-ns8:DoubleLockDoor", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DoubleLockDoor(soap_tmp___ns8__DoubleLockDoor.ns8__DoubleLockDoor, &ns8__DoubleLockDoorResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns8__DoubleLockDoorResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns8__DoubleLockDoorResponse.soap_put(soap, "ns8:DoubleLockDoorResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns8__DoubleLockDoorResponse.soap_put(soap, "ns8:DoubleLockDoorResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
