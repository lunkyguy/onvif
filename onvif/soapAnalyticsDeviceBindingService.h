/* soapAnalyticsDeviceBindingService.h
   Generated by gSOAP 2.8.17r from onvif.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapAnalyticsDeviceBindingService_H
#define soapAnalyticsDeviceBindingService_H
#include "soapH.h"
class SOAP_CMAC AnalyticsDeviceBindingService
{ public:
	struct soap *soap;
	bool own;
	/// Constructor
	AnalyticsDeviceBindingService();
	/// Constructor to use/share an engine state
	AnalyticsDeviceBindingService(struct soap*);
	/// Constructor with engine input+output mode control
	AnalyticsDeviceBindingService(soap_mode iomode);
	/// Constructor with engine input and output mode control
	AnalyticsDeviceBindingService(soap_mode imode, soap_mode omode);
	/// Destructor, also frees all deserialized data
	virtual ~AnalyticsDeviceBindingService();
	/// Delete all deserialized data (with soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to defaults
	virtual	void reset();
	/// Initializer used by constructor
	virtual	void AnalyticsDeviceBindingService_init(soap_mode imode, soap_mode omode);
	/// Create a copy
	virtual	AnalyticsDeviceBindingService *copy() SOAP_PURE_VIRTUAL;
	/// Close connection (normally automatic)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Return sender-related fault to sender
	virtual	int soap_senderfault(const char *string, const char *detailXML);
	/// Return sender-related fault with SOAP 1.2 subcode to sender
	virtual	int soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML);
	/// Return receiver-related fault to sender
	virtual	int soap_receiverfault(const char *string, const char *detailXML);
	/// Return receiver-related fault with SOAP 1.2 subcode to sender
	virtual	int soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML);
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Put SOAP Header in message
	virtual	void soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security);
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Run simple single-thread iterative service on port until a connection error occurs (returns error code or SOAP_OK), use this->bind_flag = SO_REUSEADDR to rebind for a rerun
	virtual	int run(int port);
	/// Bind service to port (returns master socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET bind(const char *host, int port, int backlog);
	/// Accept next request (returns socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET accept();
#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
	/// Then accept SSL handshake, when SSL is used
	virtual	int ssl_accept();
#endif
	/// Serve this request (returns error code or SOAP_OK)
	virtual	int serve();
	/// Used by serve() to dispatch a request (returns error code or SOAP_OK)
	virtual	int dispatch();

	///
	/// Service operations (you should define these):
	/// Note: compile with -DWITH_PURE_VIRTUAL for pure virtual methods
	///

	/// Web service operation 'GetServiceCapabilities' (returns error code or SOAP_OK)
	virtual	int GetServiceCapabilities(_tad__GetServiceCapabilities *tad__GetServiceCapabilities, _tad__GetServiceCapabilitiesResponse *tad__GetServiceCapabilitiesResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'DeleteAnalyticsEngineControl' (returns error code or SOAP_OK)
	virtual	int DeleteAnalyticsEngineControl(_tad__DeleteAnalyticsEngineControl *tad__DeleteAnalyticsEngineControl, _tad__DeleteAnalyticsEngineControlResponse *tad__DeleteAnalyticsEngineControlResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'CreateAnalyticsEngineControl' (returns error code or SOAP_OK)
	virtual	int CreateAnalyticsEngineControl(_tad__CreateAnalyticsEngineControl *tad__CreateAnalyticsEngineControl, _tad__CreateAnalyticsEngineControlResponse *tad__CreateAnalyticsEngineControlResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'SetAnalyticsEngineControl' (returns error code or SOAP_OK)
	virtual	int SetAnalyticsEngineControl(_tad__SetAnalyticsEngineControl *tad__SetAnalyticsEngineControl, _tad__SetAnalyticsEngineControlResponse *tad__SetAnalyticsEngineControlResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAnalyticsEngineControl' (returns error code or SOAP_OK)
	virtual	int GetAnalyticsEngineControl(_tad__GetAnalyticsEngineControl *tad__GetAnalyticsEngineControl, _tad__GetAnalyticsEngineControlResponse *tad__GetAnalyticsEngineControlResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAnalyticsEngineControls' (returns error code or SOAP_OK)
	virtual	int GetAnalyticsEngineControls(_tad__GetAnalyticsEngineControls *tad__GetAnalyticsEngineControls, _tad__GetAnalyticsEngineControlsResponse *tad__GetAnalyticsEngineControlsResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAnalyticsEngine' (returns error code or SOAP_OK)
	virtual	int GetAnalyticsEngine(_tad__GetAnalyticsEngine *tad__GetAnalyticsEngine, _tad__GetAnalyticsEngineResponse *tad__GetAnalyticsEngineResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAnalyticsEngines' (returns error code or SOAP_OK)
	virtual	int GetAnalyticsEngines(_tad__GetAnalyticsEngines *tad__GetAnalyticsEngines, _tad__GetAnalyticsEnginesResponse *tad__GetAnalyticsEnginesResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'SetVideoAnalyticsConfiguration' (returns error code or SOAP_OK)
	virtual	int SetVideoAnalyticsConfiguration(_tad__SetVideoAnalyticsConfiguration *tad__SetVideoAnalyticsConfiguration, _tad__SetVideoAnalyticsConfigurationResponse *tad__SetVideoAnalyticsConfigurationResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'SetAnalyticsEngineInput' (returns error code or SOAP_OK)
	virtual	int SetAnalyticsEngineInput(_tad__SetAnalyticsEngineInput *tad__SetAnalyticsEngineInput, _tad__SetAnalyticsEngineInputResponse *tad__SetAnalyticsEngineInputResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAnalyticsEngineInput' (returns error code or SOAP_OK)
	virtual	int GetAnalyticsEngineInput(_tad__GetAnalyticsEngineInput *tad__GetAnalyticsEngineInput, _tad__GetAnalyticsEngineInputResponse *tad__GetAnalyticsEngineInputResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAnalyticsEngineInputs' (returns error code or SOAP_OK)
	virtual	int GetAnalyticsEngineInputs(_tad__GetAnalyticsEngineInputs *tad__GetAnalyticsEngineInputs, _tad__GetAnalyticsEngineInputsResponse *tad__GetAnalyticsEngineInputsResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAnalyticsDeviceStreamUri' (returns error code or SOAP_OK)
	virtual	int GetAnalyticsDeviceStreamUri(_tad__GetAnalyticsDeviceStreamUri *tad__GetAnalyticsDeviceStreamUri, _tad__GetAnalyticsDeviceStreamUriResponse *tad__GetAnalyticsDeviceStreamUriResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetVideoAnalyticsConfiguration' (returns error code or SOAP_OK)
	virtual	int GetVideoAnalyticsConfiguration(_tad__GetVideoAnalyticsConfiguration *tad__GetVideoAnalyticsConfiguration, _tad__GetVideoAnalyticsConfigurationResponse *tad__GetVideoAnalyticsConfigurationResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'CreateAnalyticsEngineInputs' (returns error code or SOAP_OK)
	virtual	int CreateAnalyticsEngineInputs(_tad__CreateAnalyticsEngineInputs *tad__CreateAnalyticsEngineInputs, _tad__CreateAnalyticsEngineInputsResponse *tad__CreateAnalyticsEngineInputsResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'DeleteAnalyticsEngineInputs' (returns error code or SOAP_OK)
	virtual	int DeleteAnalyticsEngineInputs(_tad__DeleteAnalyticsEngineInputs *tad__DeleteAnalyticsEngineInputs, _tad__DeleteAnalyticsEngineInputsResponse *tad__DeleteAnalyticsEngineInputsResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAnalyticsState' (returns error code or SOAP_OK)
	virtual	int GetAnalyticsState(_tad__GetAnalyticsState *tad__GetAnalyticsState, _tad__GetAnalyticsStateResponse *tad__GetAnalyticsStateResponse) SOAP_PURE_VIRTUAL;
};
#endif
