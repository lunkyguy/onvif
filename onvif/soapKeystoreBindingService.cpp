/* soapKeystoreBindingService.cpp
   Generated by gSOAP 2.8.17r from onvif.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapKeystoreBindingService.h"

KeystoreBindingService::KeystoreBindingService()
{	this->soap = soap_new();
	this->own = true;
	KeystoreBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

KeystoreBindingService::KeystoreBindingService(struct soap *_soap)
{	this->soap = _soap;
	this->own = false;
	KeystoreBindingService_init(_soap->imode, _soap->omode);
}

KeystoreBindingService::KeystoreBindingService(soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	KeystoreBindingService_init(iomode, iomode);
}

KeystoreBindingService::KeystoreBindingService(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->own = true;
	KeystoreBindingService_init(imode, omode);
}

KeystoreBindingService::~KeystoreBindingService()
{	if (this->own)
		soap_free(this->soap);
}

void KeystoreBindingService::KeystoreBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
	{"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
	{"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
	{"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
	{"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
	{"wsc", "http://schemas.xmlsoap.org/ws/2005/02/sc", NULL, NULL},
	{"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
	{"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
	{"ns2", "http://www.onvif.org/ver10/pacs", NULL, NULL},
	{"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
	{"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
	{"name", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
	{"name10", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
	{"name11", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
	{"name12", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
	{"name13", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
	{"name14", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
	{"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"name2", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
	{"name3", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
	{"name4", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
	{"ns5", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
	{"name5", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
	{"name6", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
	{"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
	{"name7", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
	{"name8", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
	{"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
	{"name9", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
	{"ns1", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
	{"ns10", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
	{"ns11", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
	{"ns12", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
	{"ns3", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
	{"ns4", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
	{"ns6", "http://www.onvif.org/ver10/authenticationbehavior/wsdl", NULL, NULL},
	{"ns7", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
	{"ns8", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
	{"ns9", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
	{"tad", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
	{"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
	{"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
	{"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
	{"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
	{"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
	{"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
	{"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
	{"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
	{"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
	{"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void KeystoreBindingService::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void KeystoreBindingService::reset()
{	destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	KeystoreBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
KeystoreBindingService *KeystoreBindingService::copy()
{	KeystoreBindingService *dup = SOAP_NEW_COPY(KeystoreBindingService);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}
#endif

int KeystoreBindingService::soap_close_socket()
{	return soap_closesock(this->soap);
}

int KeystoreBindingService::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

int KeystoreBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this->soap, string, detailXML);
}

int KeystoreBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

int KeystoreBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this->soap, string, detailXML);
}

int KeystoreBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

void KeystoreBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void KeystoreBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *KeystoreBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

void KeystoreBindingService::soap_noheader()
{	this->soap->header = NULL;
}

void KeystoreBindingService::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsse__Security = wsse__Security;
}

const SOAP_ENV__Header *KeystoreBindingService::soap_header()
{	return this->soap->header;
}

int KeystoreBindingService::run(int port)
{	if (soap_valid_socket(this->soap->master) || soap_valid_socket(bind(NULL, port, 100)))
	{	for (;;)
		{	if (!soap_valid_socket(accept()) || serve())
				return this->soap->error;
			soap_destroy(this->soap);
			soap_end(this->soap);
		}
	}
	else
		return this->soap->error;
	return SOAP_OK;
}

SOAP_SOCKET KeystoreBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this->soap, host, port, backlog);
}

SOAP_SOCKET KeystoreBindingService::accept()
{	return soap_accept(this->soap);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int KeystoreBindingService::ssl_accept()
{	return soap_ssl_accept(this->soap);
}
#endif

int KeystoreBindingService::serve()
{
#ifndef WITH_FASTCGI
	unsigned int k = this->soap->max_keep_alive;
#endif
	do
	{

#ifndef WITH_FASTCGI
		if (this->soap->max_keep_alive > 0 && !--k)
			this->soap->keep_alive = 0;
#endif

		if (soap_begin_serve(this->soap))
		{	if (this->soap->error >= SOAP_STOP)
				continue;
			return this->soap->error;
		}
		if (dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this->soap);
#else
			return soap_send_fault(this->soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(this->soap);
		soap_end(this->soap);
	} while (1);
#else
	} while (this->soap->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___name2__CreateRSAKeyPair(KeystoreBindingService*);
static int serve___name2__UploadKeyPairInPKCS8(KeystoreBindingService*);
static int serve___name2__UploadCertificateWithPrivateKeyInPKCS12(KeystoreBindingService*);
static int serve___name2__GetKeyStatus(KeystoreBindingService*);
static int serve___name2__GetPrivateKeyStatus(KeystoreBindingService*);
static int serve___name2__GetAllKeys(KeystoreBindingService*);
static int serve___name2__DeleteKey(KeystoreBindingService*);
static int serve___name2__CreatePKCS10CSR(KeystoreBindingService*);
static int serve___name2__CreateSelfSignedCertificate(KeystoreBindingService*);
static int serve___name2__UploadCertificate(KeystoreBindingService*);
static int serve___name2__GetCertificate(KeystoreBindingService*);
static int serve___name2__GetAllCertificates(KeystoreBindingService*);
static int serve___name2__DeleteCertificate(KeystoreBindingService*);
static int serve___name2__CreateCertificationPath(KeystoreBindingService*);
static int serve___name2__GetCertificationPath(KeystoreBindingService*);
static int serve___name2__GetAllCertificationPaths(KeystoreBindingService*);
static int serve___name2__DeleteCertificationPath(KeystoreBindingService*);
static int serve___name2__UploadPassphrase(KeystoreBindingService*);
static int serve___name2__GetAllPassphrases(KeystoreBindingService*);
static int serve___name2__DeletePassphrase(KeystoreBindingService*);
static int serve___name2__UploadCRL(KeystoreBindingService*);
static int serve___name2__GetCRL(KeystoreBindingService*);
static int serve___name2__GetAllCRLs(KeystoreBindingService*);
static int serve___name2__DeleteCRL(KeystoreBindingService*);
static int serve___name2__CreateCertPathValidationPolicy(KeystoreBindingService*);
static int serve___name2__GetCertPathValidationPolicy(KeystoreBindingService*);
static int serve___name2__GetAllCertPathValidationPolicies(KeystoreBindingService*);
static int serve___name2__DeleteCertPathValidationPolicy(KeystoreBindingService*);

int KeystoreBindingService::dispatch()
{	KeystoreBindingService_init(this->soap->imode, this->soap->omode);
	soap_peek_element(this->soap);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:CreateRSAKeyPair"))
		return serve___name2__CreateRSAKeyPair(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:UploadKeyPairInPKCS8"))
		return serve___name2__UploadKeyPairInPKCS8(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:UploadCertificateWithPrivateKeyInPKCS12"))
		return serve___name2__UploadCertificateWithPrivateKeyInPKCS12(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:GetKeyStatus"))
		return serve___name2__GetKeyStatus(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:GetPrivateKeyStatus"))
		return serve___name2__GetPrivateKeyStatus(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:GetAllKeys"))
		return serve___name2__GetAllKeys(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:DeleteKey"))
		return serve___name2__DeleteKey(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:CreatePKCS10CSR"))
		return serve___name2__CreatePKCS10CSR(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:CreateSelfSignedCertificate"))
		return serve___name2__CreateSelfSignedCertificate(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:UploadCertificate"))
		return serve___name2__UploadCertificate(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:GetCertificate"))
		return serve___name2__GetCertificate(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:GetAllCertificates"))
		return serve___name2__GetAllCertificates(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:DeleteCertificate"))
		return serve___name2__DeleteCertificate(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:CreateCertificationPath"))
		return serve___name2__CreateCertificationPath(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:GetCertificationPath"))
		return serve___name2__GetCertificationPath(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:GetAllCertificationPaths"))
		return serve___name2__GetAllCertificationPaths(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:DeleteCertificationPath"))
		return serve___name2__DeleteCertificationPath(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:UploadPassphrase"))
		return serve___name2__UploadPassphrase(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:GetAllPassphrases"))
		return serve___name2__GetAllPassphrases(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:DeletePassphrase"))
		return serve___name2__DeletePassphrase(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:UploadCRL"))
		return serve___name2__UploadCRL(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:GetCRL"))
		return serve___name2__GetCRL(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:GetAllCRLs"))
		return serve___name2__GetAllCRLs(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:DeleteCRL"))
		return serve___name2__DeleteCRL(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:CreateCertPathValidationPolicy"))
		return serve___name2__CreateCertPathValidationPolicy(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:GetCertPathValidationPolicy"))
		return serve___name2__GetCertPathValidationPolicy(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:GetAllCertPathValidationPolicies"))
		return serve___name2__GetAllCertPathValidationPolicies(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "ns5:DeleteCertPathValidationPolicy"))
		return serve___name2__DeleteCertPathValidationPolicy(this);
	return this->soap->error = SOAP_NO_METHOD;
}

static int serve___name2__CreateRSAKeyPair(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__CreateRSAKeyPair soap_tmp___name2__CreateRSAKeyPair;
	_ns5__CreateRSAKeyPairResponse ns5__CreateRSAKeyPairResponse;
	ns5__CreateRSAKeyPairResponse.soap_default(soap);
	soap_default___name2__CreateRSAKeyPair(soap, &soap_tmp___name2__CreateRSAKeyPair);
	if (!soap_get___name2__CreateRSAKeyPair(soap, &soap_tmp___name2__CreateRSAKeyPair, "-name2:CreateRSAKeyPair", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateRSAKeyPair(soap_tmp___name2__CreateRSAKeyPair.ns5__CreateRSAKeyPair, &ns5__CreateRSAKeyPairResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__CreateRSAKeyPairResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__CreateRSAKeyPairResponse.soap_put(soap, "ns5:CreateRSAKeyPairResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__CreateRSAKeyPairResponse.soap_put(soap, "ns5:CreateRSAKeyPairResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__UploadKeyPairInPKCS8(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__UploadKeyPairInPKCS8 soap_tmp___name2__UploadKeyPairInPKCS8;
	_ns5__UploadKeyPairInPKCS8Response ns5__UploadKeyPairInPKCS8Response;
	ns5__UploadKeyPairInPKCS8Response.soap_default(soap);
	soap_default___name2__UploadKeyPairInPKCS8(soap, &soap_tmp___name2__UploadKeyPairInPKCS8);
	if (!soap_get___name2__UploadKeyPairInPKCS8(soap, &soap_tmp___name2__UploadKeyPairInPKCS8, "-name2:UploadKeyPairInPKCS8", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->UploadKeyPairInPKCS8(soap_tmp___name2__UploadKeyPairInPKCS8.ns5__UploadKeyPairInPKCS8, &ns5__UploadKeyPairInPKCS8Response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__UploadKeyPairInPKCS8Response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__UploadKeyPairInPKCS8Response.soap_put(soap, "ns5:UploadKeyPairInPKCS8Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__UploadKeyPairInPKCS8Response.soap_put(soap, "ns5:UploadKeyPairInPKCS8Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__UploadCertificateWithPrivateKeyInPKCS12(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__UploadCertificateWithPrivateKeyInPKCS12 soap_tmp___name2__UploadCertificateWithPrivateKeyInPKCS12;
	_ns5__UploadCertificateWithPrivateKeyInPKCS12Response ns5__UploadCertificateWithPrivateKeyInPKCS12Response;
	ns5__UploadCertificateWithPrivateKeyInPKCS12Response.soap_default(soap);
	soap_default___name2__UploadCertificateWithPrivateKeyInPKCS12(soap, &soap_tmp___name2__UploadCertificateWithPrivateKeyInPKCS12);
	if (!soap_get___name2__UploadCertificateWithPrivateKeyInPKCS12(soap, &soap_tmp___name2__UploadCertificateWithPrivateKeyInPKCS12, "-name2:UploadCertificateWithPrivateKeyInPKCS12", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->UploadCertificateWithPrivateKeyInPKCS12(soap_tmp___name2__UploadCertificateWithPrivateKeyInPKCS12.ns5__UploadCertificateWithPrivateKeyInPKCS12, &ns5__UploadCertificateWithPrivateKeyInPKCS12Response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__UploadCertificateWithPrivateKeyInPKCS12Response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__UploadCertificateWithPrivateKeyInPKCS12Response.soap_put(soap, "ns5:UploadCertificateWithPrivateKeyInPKCS12Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__UploadCertificateWithPrivateKeyInPKCS12Response.soap_put(soap, "ns5:UploadCertificateWithPrivateKeyInPKCS12Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__GetKeyStatus(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__GetKeyStatus soap_tmp___name2__GetKeyStatus;
	_ns5__GetKeyStatusResponse ns5__GetKeyStatusResponse;
	ns5__GetKeyStatusResponse.soap_default(soap);
	soap_default___name2__GetKeyStatus(soap, &soap_tmp___name2__GetKeyStatus);
	if (!soap_get___name2__GetKeyStatus(soap, &soap_tmp___name2__GetKeyStatus, "-name2:GetKeyStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetKeyStatus(soap_tmp___name2__GetKeyStatus.ns5__GetKeyStatus, &ns5__GetKeyStatusResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__GetKeyStatusResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__GetKeyStatusResponse.soap_put(soap, "ns5:GetKeyStatusResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__GetKeyStatusResponse.soap_put(soap, "ns5:GetKeyStatusResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__GetPrivateKeyStatus(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__GetPrivateKeyStatus soap_tmp___name2__GetPrivateKeyStatus;
	_ns5__GetPrivateKeyStatusResponse ns5__GetPrivateKeyStatusResponse;
	ns5__GetPrivateKeyStatusResponse.soap_default(soap);
	soap_default___name2__GetPrivateKeyStatus(soap, &soap_tmp___name2__GetPrivateKeyStatus);
	if (!soap_get___name2__GetPrivateKeyStatus(soap, &soap_tmp___name2__GetPrivateKeyStatus, "-name2:GetPrivateKeyStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetPrivateKeyStatus(soap_tmp___name2__GetPrivateKeyStatus.ns5__GetPrivateKeyStatus, &ns5__GetPrivateKeyStatusResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__GetPrivateKeyStatusResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__GetPrivateKeyStatusResponse.soap_put(soap, "ns5:GetPrivateKeyStatusResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__GetPrivateKeyStatusResponse.soap_put(soap, "ns5:GetPrivateKeyStatusResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__GetAllKeys(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__GetAllKeys soap_tmp___name2__GetAllKeys;
	_ns5__GetAllKeysResponse ns5__GetAllKeysResponse;
	ns5__GetAllKeysResponse.soap_default(soap);
	soap_default___name2__GetAllKeys(soap, &soap_tmp___name2__GetAllKeys);
	if (!soap_get___name2__GetAllKeys(soap, &soap_tmp___name2__GetAllKeys, "-name2:GetAllKeys", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAllKeys(soap_tmp___name2__GetAllKeys.ns5__GetAllKeys, &ns5__GetAllKeysResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__GetAllKeysResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__GetAllKeysResponse.soap_put(soap, "ns5:GetAllKeysResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__GetAllKeysResponse.soap_put(soap, "ns5:GetAllKeysResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__DeleteKey(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__DeleteKey soap_tmp___name2__DeleteKey;
	_ns5__DeleteKeyResponse ns5__DeleteKeyResponse;
	ns5__DeleteKeyResponse.soap_default(soap);
	soap_default___name2__DeleteKey(soap, &soap_tmp___name2__DeleteKey);
	if (!soap_get___name2__DeleteKey(soap, &soap_tmp___name2__DeleteKey, "-name2:DeleteKey", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteKey(soap_tmp___name2__DeleteKey.ns5__DeleteKey, &ns5__DeleteKeyResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__DeleteKeyResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__DeleteKeyResponse.soap_put(soap, "ns5:DeleteKeyResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__DeleteKeyResponse.soap_put(soap, "ns5:DeleteKeyResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__CreatePKCS10CSR(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__CreatePKCS10CSR soap_tmp___name2__CreatePKCS10CSR;
	_ns5__CreatePKCS10CSRResponse ns5__CreatePKCS10CSRResponse;
	ns5__CreatePKCS10CSRResponse.soap_default(soap);
	soap_default___name2__CreatePKCS10CSR(soap, &soap_tmp___name2__CreatePKCS10CSR);
	if (!soap_get___name2__CreatePKCS10CSR(soap, &soap_tmp___name2__CreatePKCS10CSR, "-name2:CreatePKCS10CSR", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreatePKCS10CSR(soap_tmp___name2__CreatePKCS10CSR.ns5__CreatePKCS10CSR, &ns5__CreatePKCS10CSRResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__CreatePKCS10CSRResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__CreatePKCS10CSRResponse.soap_put(soap, "ns5:CreatePKCS10CSRResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__CreatePKCS10CSRResponse.soap_put(soap, "ns5:CreatePKCS10CSRResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__CreateSelfSignedCertificate(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__CreateSelfSignedCertificate soap_tmp___name2__CreateSelfSignedCertificate;
	_ns5__CreateSelfSignedCertificateResponse ns5__CreateSelfSignedCertificateResponse;
	ns5__CreateSelfSignedCertificateResponse.soap_default(soap);
	soap_default___name2__CreateSelfSignedCertificate(soap, &soap_tmp___name2__CreateSelfSignedCertificate);
	if (!soap_get___name2__CreateSelfSignedCertificate(soap, &soap_tmp___name2__CreateSelfSignedCertificate, "-name2:CreateSelfSignedCertificate", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateSelfSignedCertificate(soap_tmp___name2__CreateSelfSignedCertificate.ns5__CreateSelfSignedCertificate, &ns5__CreateSelfSignedCertificateResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__CreateSelfSignedCertificateResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__CreateSelfSignedCertificateResponse.soap_put(soap, "ns5:CreateSelfSignedCertificateResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__CreateSelfSignedCertificateResponse.soap_put(soap, "ns5:CreateSelfSignedCertificateResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__UploadCertificate(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__UploadCertificate soap_tmp___name2__UploadCertificate;
	_ns5__UploadCertificateResponse ns5__UploadCertificateResponse;
	ns5__UploadCertificateResponse.soap_default(soap);
	soap_default___name2__UploadCertificate(soap, &soap_tmp___name2__UploadCertificate);
	if (!soap_get___name2__UploadCertificate(soap, &soap_tmp___name2__UploadCertificate, "-name2:UploadCertificate", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->UploadCertificate(soap_tmp___name2__UploadCertificate.ns5__UploadCertificate, &ns5__UploadCertificateResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__UploadCertificateResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__UploadCertificateResponse.soap_put(soap, "ns5:UploadCertificateResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__UploadCertificateResponse.soap_put(soap, "ns5:UploadCertificateResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__GetCertificate(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__GetCertificate soap_tmp___name2__GetCertificate;
	_ns5__GetCertificateResponse ns5__GetCertificateResponse;
	ns5__GetCertificateResponse.soap_default(soap);
	soap_default___name2__GetCertificate(soap, &soap_tmp___name2__GetCertificate);
	if (!soap_get___name2__GetCertificate(soap, &soap_tmp___name2__GetCertificate, "-name2:GetCertificate", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCertificate(soap_tmp___name2__GetCertificate.ns5__GetCertificate, &ns5__GetCertificateResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__GetCertificateResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__GetCertificateResponse.soap_put(soap, "ns5:GetCertificateResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__GetCertificateResponse.soap_put(soap, "ns5:GetCertificateResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__GetAllCertificates(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__GetAllCertificates soap_tmp___name2__GetAllCertificates;
	_ns5__GetAllCertificatesResponse ns5__GetAllCertificatesResponse;
	ns5__GetAllCertificatesResponse.soap_default(soap);
	soap_default___name2__GetAllCertificates(soap, &soap_tmp___name2__GetAllCertificates);
	if (!soap_get___name2__GetAllCertificates(soap, &soap_tmp___name2__GetAllCertificates, "-name2:GetAllCertificates", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAllCertificates(soap_tmp___name2__GetAllCertificates.ns5__GetAllCertificates, &ns5__GetAllCertificatesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__GetAllCertificatesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__GetAllCertificatesResponse.soap_put(soap, "ns5:GetAllCertificatesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__GetAllCertificatesResponse.soap_put(soap, "ns5:GetAllCertificatesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__DeleteCertificate(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__DeleteCertificate soap_tmp___name2__DeleteCertificate;
	_ns5__DeleteCertificateResponse ns5__DeleteCertificateResponse;
	ns5__DeleteCertificateResponse.soap_default(soap);
	soap_default___name2__DeleteCertificate(soap, &soap_tmp___name2__DeleteCertificate);
	if (!soap_get___name2__DeleteCertificate(soap, &soap_tmp___name2__DeleteCertificate, "-name2:DeleteCertificate", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteCertificate(soap_tmp___name2__DeleteCertificate.ns5__DeleteCertificate, &ns5__DeleteCertificateResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__DeleteCertificateResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__DeleteCertificateResponse.soap_put(soap, "ns5:DeleteCertificateResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__DeleteCertificateResponse.soap_put(soap, "ns5:DeleteCertificateResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__CreateCertificationPath(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__CreateCertificationPath soap_tmp___name2__CreateCertificationPath;
	_ns5__CreateCertificationPathResponse ns5__CreateCertificationPathResponse;
	ns5__CreateCertificationPathResponse.soap_default(soap);
	soap_default___name2__CreateCertificationPath(soap, &soap_tmp___name2__CreateCertificationPath);
	if (!soap_get___name2__CreateCertificationPath(soap, &soap_tmp___name2__CreateCertificationPath, "-name2:CreateCertificationPath", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateCertificationPath(soap_tmp___name2__CreateCertificationPath.ns5__CreateCertificationPath, &ns5__CreateCertificationPathResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__CreateCertificationPathResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__CreateCertificationPathResponse.soap_put(soap, "ns5:CreateCertificationPathResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__CreateCertificationPathResponse.soap_put(soap, "ns5:CreateCertificationPathResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__GetCertificationPath(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__GetCertificationPath soap_tmp___name2__GetCertificationPath;
	_ns5__GetCertificationPathResponse ns5__GetCertificationPathResponse;
	ns5__GetCertificationPathResponse.soap_default(soap);
	soap_default___name2__GetCertificationPath(soap, &soap_tmp___name2__GetCertificationPath);
	if (!soap_get___name2__GetCertificationPath(soap, &soap_tmp___name2__GetCertificationPath, "-name2:GetCertificationPath", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCertificationPath(soap_tmp___name2__GetCertificationPath.ns5__GetCertificationPath, &ns5__GetCertificationPathResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__GetCertificationPathResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__GetCertificationPathResponse.soap_put(soap, "ns5:GetCertificationPathResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__GetCertificationPathResponse.soap_put(soap, "ns5:GetCertificationPathResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__GetAllCertificationPaths(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__GetAllCertificationPaths soap_tmp___name2__GetAllCertificationPaths;
	_ns5__GetAllCertificationPathsResponse ns5__GetAllCertificationPathsResponse;
	ns5__GetAllCertificationPathsResponse.soap_default(soap);
	soap_default___name2__GetAllCertificationPaths(soap, &soap_tmp___name2__GetAllCertificationPaths);
	if (!soap_get___name2__GetAllCertificationPaths(soap, &soap_tmp___name2__GetAllCertificationPaths, "-name2:GetAllCertificationPaths", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAllCertificationPaths(soap_tmp___name2__GetAllCertificationPaths.ns5__GetAllCertificationPaths, &ns5__GetAllCertificationPathsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__GetAllCertificationPathsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__GetAllCertificationPathsResponse.soap_put(soap, "ns5:GetAllCertificationPathsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__GetAllCertificationPathsResponse.soap_put(soap, "ns5:GetAllCertificationPathsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__DeleteCertificationPath(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__DeleteCertificationPath soap_tmp___name2__DeleteCertificationPath;
	_ns5__DeleteCertificationPathResponse ns5__DeleteCertificationPathResponse;
	ns5__DeleteCertificationPathResponse.soap_default(soap);
	soap_default___name2__DeleteCertificationPath(soap, &soap_tmp___name2__DeleteCertificationPath);
	if (!soap_get___name2__DeleteCertificationPath(soap, &soap_tmp___name2__DeleteCertificationPath, "-name2:DeleteCertificationPath", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteCertificationPath(soap_tmp___name2__DeleteCertificationPath.ns5__DeleteCertificationPath, &ns5__DeleteCertificationPathResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__DeleteCertificationPathResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__DeleteCertificationPathResponse.soap_put(soap, "ns5:DeleteCertificationPathResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__DeleteCertificationPathResponse.soap_put(soap, "ns5:DeleteCertificationPathResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__UploadPassphrase(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__UploadPassphrase soap_tmp___name2__UploadPassphrase;
	_ns5__UploadPassphraseResponse ns5__UploadPassphraseResponse;
	ns5__UploadPassphraseResponse.soap_default(soap);
	soap_default___name2__UploadPassphrase(soap, &soap_tmp___name2__UploadPassphrase);
	if (!soap_get___name2__UploadPassphrase(soap, &soap_tmp___name2__UploadPassphrase, "-name2:UploadPassphrase", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->UploadPassphrase(soap_tmp___name2__UploadPassphrase.ns5__UploadPassphrase, &ns5__UploadPassphraseResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__UploadPassphraseResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__UploadPassphraseResponse.soap_put(soap, "ns5:UploadPassphraseResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__UploadPassphraseResponse.soap_put(soap, "ns5:UploadPassphraseResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__GetAllPassphrases(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__GetAllPassphrases soap_tmp___name2__GetAllPassphrases;
	_ns5__GetAllPassphrasesResponse ns5__GetAllPassphrasesResponse;
	ns5__GetAllPassphrasesResponse.soap_default(soap);
	soap_default___name2__GetAllPassphrases(soap, &soap_tmp___name2__GetAllPassphrases);
	if (!soap_get___name2__GetAllPassphrases(soap, &soap_tmp___name2__GetAllPassphrases, "-name2:GetAllPassphrases", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAllPassphrases(soap_tmp___name2__GetAllPassphrases.ns5__GetAllPassphrases, &ns5__GetAllPassphrasesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__GetAllPassphrasesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__GetAllPassphrasesResponse.soap_put(soap, "ns5:GetAllPassphrasesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__GetAllPassphrasesResponse.soap_put(soap, "ns5:GetAllPassphrasesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__DeletePassphrase(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__DeletePassphrase soap_tmp___name2__DeletePassphrase;
	_ns5__DeletePassphraseResponse ns5__DeletePassphraseResponse;
	ns5__DeletePassphraseResponse.soap_default(soap);
	soap_default___name2__DeletePassphrase(soap, &soap_tmp___name2__DeletePassphrase);
	if (!soap_get___name2__DeletePassphrase(soap, &soap_tmp___name2__DeletePassphrase, "-name2:DeletePassphrase", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeletePassphrase(soap_tmp___name2__DeletePassphrase.ns5__DeletePassphrase, &ns5__DeletePassphraseResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__DeletePassphraseResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__DeletePassphraseResponse.soap_put(soap, "ns5:DeletePassphraseResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__DeletePassphraseResponse.soap_put(soap, "ns5:DeletePassphraseResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__UploadCRL(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__UploadCRL soap_tmp___name2__UploadCRL;
	_ns5__UploadCRLResponse ns5__UploadCRLResponse;
	ns5__UploadCRLResponse.soap_default(soap);
	soap_default___name2__UploadCRL(soap, &soap_tmp___name2__UploadCRL);
	if (!soap_get___name2__UploadCRL(soap, &soap_tmp___name2__UploadCRL, "-name2:UploadCRL", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->UploadCRL(soap_tmp___name2__UploadCRL.ns5__UploadCRL, &ns5__UploadCRLResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__UploadCRLResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__UploadCRLResponse.soap_put(soap, "ns5:UploadCRLResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__UploadCRLResponse.soap_put(soap, "ns5:UploadCRLResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__GetCRL(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__GetCRL soap_tmp___name2__GetCRL;
	_ns5__GetCRLResponse ns5__GetCRLResponse;
	ns5__GetCRLResponse.soap_default(soap);
	soap_default___name2__GetCRL(soap, &soap_tmp___name2__GetCRL);
	if (!soap_get___name2__GetCRL(soap, &soap_tmp___name2__GetCRL, "-name2:GetCRL", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCRL(soap_tmp___name2__GetCRL.ns5__GetCRL, &ns5__GetCRLResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__GetCRLResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__GetCRLResponse.soap_put(soap, "ns5:GetCRLResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__GetCRLResponse.soap_put(soap, "ns5:GetCRLResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__GetAllCRLs(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__GetAllCRLs soap_tmp___name2__GetAllCRLs;
	_ns5__GetAllCRLsResponse ns5__GetAllCRLsResponse;
	ns5__GetAllCRLsResponse.soap_default(soap);
	soap_default___name2__GetAllCRLs(soap, &soap_tmp___name2__GetAllCRLs);
	if (!soap_get___name2__GetAllCRLs(soap, &soap_tmp___name2__GetAllCRLs, "-name2:GetAllCRLs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAllCRLs(soap_tmp___name2__GetAllCRLs.ns5__GetAllCRLs, &ns5__GetAllCRLsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__GetAllCRLsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__GetAllCRLsResponse.soap_put(soap, "ns5:GetAllCRLsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__GetAllCRLsResponse.soap_put(soap, "ns5:GetAllCRLsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__DeleteCRL(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__DeleteCRL soap_tmp___name2__DeleteCRL;
	_ns5__DeleteCRLResponse ns5__DeleteCRLResponse;
	ns5__DeleteCRLResponse.soap_default(soap);
	soap_default___name2__DeleteCRL(soap, &soap_tmp___name2__DeleteCRL);
	if (!soap_get___name2__DeleteCRL(soap, &soap_tmp___name2__DeleteCRL, "-name2:DeleteCRL", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteCRL(soap_tmp___name2__DeleteCRL.ns5__DeleteCRL, &ns5__DeleteCRLResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__DeleteCRLResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__DeleteCRLResponse.soap_put(soap, "ns5:DeleteCRLResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__DeleteCRLResponse.soap_put(soap, "ns5:DeleteCRLResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__CreateCertPathValidationPolicy(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__CreateCertPathValidationPolicy soap_tmp___name2__CreateCertPathValidationPolicy;
	_ns5__CreateCertPathValidationPolicyResponse ns5__CreateCertPathValidationPolicyResponse;
	ns5__CreateCertPathValidationPolicyResponse.soap_default(soap);
	soap_default___name2__CreateCertPathValidationPolicy(soap, &soap_tmp___name2__CreateCertPathValidationPolicy);
	if (!soap_get___name2__CreateCertPathValidationPolicy(soap, &soap_tmp___name2__CreateCertPathValidationPolicy, "-name2:CreateCertPathValidationPolicy", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateCertPathValidationPolicy(soap_tmp___name2__CreateCertPathValidationPolicy.ns5__CreateCertPathValidationPolicy, &ns5__CreateCertPathValidationPolicyResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__CreateCertPathValidationPolicyResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__CreateCertPathValidationPolicyResponse.soap_put(soap, "ns5:CreateCertPathValidationPolicyResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__CreateCertPathValidationPolicyResponse.soap_put(soap, "ns5:CreateCertPathValidationPolicyResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__GetCertPathValidationPolicy(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__GetCertPathValidationPolicy soap_tmp___name2__GetCertPathValidationPolicy;
	_ns5__GetCertPathValidationPolicyResponse ns5__GetCertPathValidationPolicyResponse;
	ns5__GetCertPathValidationPolicyResponse.soap_default(soap);
	soap_default___name2__GetCertPathValidationPolicy(soap, &soap_tmp___name2__GetCertPathValidationPolicy);
	if (!soap_get___name2__GetCertPathValidationPolicy(soap, &soap_tmp___name2__GetCertPathValidationPolicy, "-name2:GetCertPathValidationPolicy", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCertPathValidationPolicy(soap_tmp___name2__GetCertPathValidationPolicy.ns5__GetCertPathValidationPolicy, &ns5__GetCertPathValidationPolicyResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__GetCertPathValidationPolicyResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__GetCertPathValidationPolicyResponse.soap_put(soap, "ns5:GetCertPathValidationPolicyResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__GetCertPathValidationPolicyResponse.soap_put(soap, "ns5:GetCertPathValidationPolicyResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__GetAllCertPathValidationPolicies(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__GetAllCertPathValidationPolicies soap_tmp___name2__GetAllCertPathValidationPolicies;
	_ns5__GetAllCertPathValidationPoliciesResponse ns5__GetAllCertPathValidationPoliciesResponse;
	ns5__GetAllCertPathValidationPoliciesResponse.soap_default(soap);
	soap_default___name2__GetAllCertPathValidationPolicies(soap, &soap_tmp___name2__GetAllCertPathValidationPolicies);
	if (!soap_get___name2__GetAllCertPathValidationPolicies(soap, &soap_tmp___name2__GetAllCertPathValidationPolicies, "-name2:GetAllCertPathValidationPolicies", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAllCertPathValidationPolicies(soap_tmp___name2__GetAllCertPathValidationPolicies.ns5__GetAllCertPathValidationPolicies, &ns5__GetAllCertPathValidationPoliciesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__GetAllCertPathValidationPoliciesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__GetAllCertPathValidationPoliciesResponse.soap_put(soap, "ns5:GetAllCertPathValidationPoliciesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__GetAllCertPathValidationPoliciesResponse.soap_put(soap, "ns5:GetAllCertPathValidationPoliciesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___name2__DeleteCertPathValidationPolicy(KeystoreBindingService *service)
{	struct soap *soap = service->soap;
	struct __name2__DeleteCertPathValidationPolicy soap_tmp___name2__DeleteCertPathValidationPolicy;
	_ns5__DeleteCertPathValidationPolicyResponse ns5__DeleteCertPathValidationPolicyResponse;
	ns5__DeleteCertPathValidationPolicyResponse.soap_default(soap);
	soap_default___name2__DeleteCertPathValidationPolicy(soap, &soap_tmp___name2__DeleteCertPathValidationPolicy);
	if (!soap_get___name2__DeleteCertPathValidationPolicy(soap, &soap_tmp___name2__DeleteCertPathValidationPolicy, "-name2:DeleteCertPathValidationPolicy", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteCertPathValidationPolicy(soap_tmp___name2__DeleteCertPathValidationPolicy.ns5__DeleteCertPathValidationPolicy, &ns5__DeleteCertPathValidationPolicyResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns5__DeleteCertPathValidationPolicyResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns5__DeleteCertPathValidationPolicyResponse.soap_put(soap, "ns5:DeleteCertPathValidationPolicyResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns5__DeleteCertPathValidationPolicyResponse.soap_put(soap, "ns5:DeleteCertPathValidationPolicyResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
