/* soapDoorControlBindingProxy.cpp
   Generated by gSOAP 2.8.17r from onvif.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapDoorControlBindingProxy.h"

DoorControlBindingProxy::DoorControlBindingProxy()
{	this->soap = soap_new();
	this->own = true;
	DoorControlBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

DoorControlBindingProxy::DoorControlBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->own = false;
	DoorControlBindingProxy_init(_soap->imode, _soap->omode);
}

DoorControlBindingProxy::DoorControlBindingProxy(const char *url)
{	this->soap = soap_new();
	this->own = true;
	DoorControlBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

DoorControlBindingProxy::DoorControlBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	DoorControlBindingProxy_init(iomode, iomode);
}

DoorControlBindingProxy::DoorControlBindingProxy(const char *url, soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	DoorControlBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

DoorControlBindingProxy::DoorControlBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->own = true;
	DoorControlBindingProxy_init(imode, omode);
}

DoorControlBindingProxy::~DoorControlBindingProxy()
{	if (this->own)
		soap_free(this->soap);
}

void DoorControlBindingProxy::DoorControlBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
	{"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
	{"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
	{"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
	{"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
	{"wsc", "http://schemas.xmlsoap.org/ws/2005/02/sc", NULL, NULL},
	{"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
	{"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
	{"ns2", "http://www.onvif.org/ver10/pacs", NULL, NULL},
	{"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
	{"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
	{"name", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
	{"name10", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
	{"name11", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
	{"name12", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
	{"name13", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
	{"name14", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
	{"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"name2", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
	{"name3", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
	{"name4", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
	{"ns5", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
	{"name5", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
	{"name6", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
	{"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
	{"name7", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
	{"name8", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
	{"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
	{"name9", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
	{"ns1", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
	{"ns10", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
	{"ns11", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
	{"ns12", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
	{"ns3", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
	{"ns4", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
	{"ns6", "http://www.onvif.org/ver10/authenticationbehavior/wsdl", NULL, NULL},
	{"ns7", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
	{"ns8", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
	{"ns9", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
	{"tad", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
	{"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
	{"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
	{"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
	{"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
	{"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
	{"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
	{"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
	{"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
	{"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
	{"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void DoorControlBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void DoorControlBindingProxy::reset()
{	destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	DoorControlBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void DoorControlBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void DoorControlBindingProxy::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsse__Security = wsse__Security;
}

const SOAP_ENV__Header *DoorControlBindingProxy::soap_header()
{	return this->soap->header;
}

const SOAP_ENV__Fault *DoorControlBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *DoorControlBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *DoorControlBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int DoorControlBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int DoorControlBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void DoorControlBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void DoorControlBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *DoorControlBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int DoorControlBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _ns8__GetServiceCapabilities *ns8__GetServiceCapabilities, _ns8__GetServiceCapabilitiesResponse *ns8__GetServiceCapabilitiesResponse)
{	struct soap *soap = this->soap;
	struct __ns8__GetServiceCapabilities soap_tmp___ns8__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/GetServiceCapabilities";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns8__GetServiceCapabilities.ns8__GetServiceCapabilities = ns8__GetServiceCapabilities;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns8__GetServiceCapabilities(soap, &soap_tmp___ns8__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetServiceCapabilities(soap, &soap_tmp___ns8__GetServiceCapabilities, "-ns8:GetServiceCapabilities", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetServiceCapabilities(soap, &soap_tmp___ns8__GetServiceCapabilities, "-ns8:GetServiceCapabilities", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__GetServiceCapabilitiesResponse)
		return soap_closesock(soap);
	ns8__GetServiceCapabilitiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetServiceCapabilitiesResponse->soap_get(soap, "ns8:GetServiceCapabilitiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DoorControlBindingProxy::GetDoorInfoList(const char *endpoint, const char *soap_action, _ns8__GetDoorInfoList *ns8__GetDoorInfoList, _ns8__GetDoorInfoListResponse *ns8__GetDoorInfoListResponse)
{	struct soap *soap = this->soap;
	struct __ns8__GetDoorInfoList soap_tmp___ns8__GetDoorInfoList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorInfoList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns8__GetDoorInfoList.ns8__GetDoorInfoList = ns8__GetDoorInfoList;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns8__GetDoorInfoList(soap, &soap_tmp___ns8__GetDoorInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetDoorInfoList(soap, &soap_tmp___ns8__GetDoorInfoList, "-ns8:GetDoorInfoList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetDoorInfoList(soap, &soap_tmp___ns8__GetDoorInfoList, "-ns8:GetDoorInfoList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__GetDoorInfoListResponse)
		return soap_closesock(soap);
	ns8__GetDoorInfoListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetDoorInfoListResponse->soap_get(soap, "ns8:GetDoorInfoListResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DoorControlBindingProxy::GetDoorInfo(const char *endpoint, const char *soap_action, _ns8__GetDoorInfo *ns8__GetDoorInfo, _ns8__GetDoorInfoResponse *ns8__GetDoorInfoResponse)
{	struct soap *soap = this->soap;
	struct __ns8__GetDoorInfo soap_tmp___ns8__GetDoorInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns8__GetDoorInfo.ns8__GetDoorInfo = ns8__GetDoorInfo;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns8__GetDoorInfo(soap, &soap_tmp___ns8__GetDoorInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetDoorInfo(soap, &soap_tmp___ns8__GetDoorInfo, "-ns8:GetDoorInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetDoorInfo(soap, &soap_tmp___ns8__GetDoorInfo, "-ns8:GetDoorInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__GetDoorInfoResponse)
		return soap_closesock(soap);
	ns8__GetDoorInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetDoorInfoResponse->soap_get(soap, "ns8:GetDoorInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DoorControlBindingProxy::GetDoorList(const char *endpoint, const char *soap_action, _ns8__GetDoorList *ns8__GetDoorList, _ns8__GetDoorListResponse *ns8__GetDoorListResponse)
{	struct soap *soap = this->soap;
	struct __ns8__GetDoorList soap_tmp___ns8__GetDoorList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns8__GetDoorList.ns8__GetDoorList = ns8__GetDoorList;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns8__GetDoorList(soap, &soap_tmp___ns8__GetDoorList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetDoorList(soap, &soap_tmp___ns8__GetDoorList, "-ns8:GetDoorList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetDoorList(soap, &soap_tmp___ns8__GetDoorList, "-ns8:GetDoorList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__GetDoorListResponse)
		return soap_closesock(soap);
	ns8__GetDoorListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetDoorListResponse->soap_get(soap, "ns8:GetDoorListResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DoorControlBindingProxy::GetDoors(const char *endpoint, const char *soap_action, _ns8__GetDoors *ns8__GetDoors, _ns8__GetDoorsResponse *ns8__GetDoorsResponse)
{	struct soap *soap = this->soap;
	struct __ns8__GetDoors soap_tmp___ns8__GetDoors;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoors";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns8__GetDoors.ns8__GetDoors = ns8__GetDoors;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns8__GetDoors(soap, &soap_tmp___ns8__GetDoors);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetDoors(soap, &soap_tmp___ns8__GetDoors, "-ns8:GetDoors", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetDoors(soap, &soap_tmp___ns8__GetDoors, "-ns8:GetDoors", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__GetDoorsResponse)
		return soap_closesock(soap);
	ns8__GetDoorsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetDoorsResponse->soap_get(soap, "ns8:GetDoorsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DoorControlBindingProxy::CreateDoor(const char *endpoint, const char *soap_action, _ns8__CreateDoor *ns8__CreateDoor, _ns8__CreateDoorResponse *ns8__CreateDoorResponse)
{	struct soap *soap = this->soap;
	struct __ns8__CreateDoor soap_tmp___ns8__CreateDoor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/CreateDoor";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns8__CreateDoor.ns8__CreateDoor = ns8__CreateDoor;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns8__CreateDoor(soap, &soap_tmp___ns8__CreateDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__CreateDoor(soap, &soap_tmp___ns8__CreateDoor, "-ns8:CreateDoor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__CreateDoor(soap, &soap_tmp___ns8__CreateDoor, "-ns8:CreateDoor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__CreateDoorResponse)
		return soap_closesock(soap);
	ns8__CreateDoorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__CreateDoorResponse->soap_get(soap, "ns8:CreateDoorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DoorControlBindingProxy::SetDoor(const char *endpoint, const char *soap_action, _ns8__SetDoor *ns8__SetDoor, _ns8__SetDoorResponse *ns8__SetDoorResponse)
{	struct soap *soap = this->soap;
	struct __ns8__SetDoor soap_tmp___ns8__SetDoor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/SetDoor";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns8__SetDoor.ns8__SetDoor = ns8__SetDoor;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns8__SetDoor(soap, &soap_tmp___ns8__SetDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__SetDoor(soap, &soap_tmp___ns8__SetDoor, "-ns8:SetDoor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__SetDoor(soap, &soap_tmp___ns8__SetDoor, "-ns8:SetDoor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__SetDoorResponse)
		return soap_closesock(soap);
	ns8__SetDoorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__SetDoorResponse->soap_get(soap, "ns8:SetDoorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DoorControlBindingProxy::ModifyDoor(const char *endpoint, const char *soap_action, _ns8__ModifyDoor *ns8__ModifyDoor, _ns8__ModifyDoorResponse *ns8__ModifyDoorResponse)
{	struct soap *soap = this->soap;
	struct __ns8__ModifyDoor soap_tmp___ns8__ModifyDoor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/ModifyDoor";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns8__ModifyDoor.ns8__ModifyDoor = ns8__ModifyDoor;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns8__ModifyDoor(soap, &soap_tmp___ns8__ModifyDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__ModifyDoor(soap, &soap_tmp___ns8__ModifyDoor, "-ns8:ModifyDoor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__ModifyDoor(soap, &soap_tmp___ns8__ModifyDoor, "-ns8:ModifyDoor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__ModifyDoorResponse)
		return soap_closesock(soap);
	ns8__ModifyDoorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__ModifyDoorResponse->soap_get(soap, "ns8:ModifyDoorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DoorControlBindingProxy::DeleteDoor(const char *endpoint, const char *soap_action, _ns8__DeleteDoor *ns8__DeleteDoor, _ns8__DeleteDoorResponse *ns8__DeleteDoorResponse)
{	struct soap *soap = this->soap;
	struct __ns8__DeleteDoor soap_tmp___ns8__DeleteDoor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/DeleteDoor";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns8__DeleteDoor.ns8__DeleteDoor = ns8__DeleteDoor;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns8__DeleteDoor(soap, &soap_tmp___ns8__DeleteDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__DeleteDoor(soap, &soap_tmp___ns8__DeleteDoor, "-ns8:DeleteDoor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__DeleteDoor(soap, &soap_tmp___ns8__DeleteDoor, "-ns8:DeleteDoor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__DeleteDoorResponse)
		return soap_closesock(soap);
	ns8__DeleteDoorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__DeleteDoorResponse->soap_get(soap, "ns8:DeleteDoorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DoorControlBindingProxy::GetDoorState(const char *endpoint, const char *soap_action, _ns8__GetDoorState *ns8__GetDoorState, _ns8__GetDoorStateResponse *ns8__GetDoorStateResponse)
{	struct soap *soap = this->soap;
	struct __ns8__GetDoorState soap_tmp___ns8__GetDoorState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorState";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns8__GetDoorState.ns8__GetDoorState = ns8__GetDoorState;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns8__GetDoorState(soap, &soap_tmp___ns8__GetDoorState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetDoorState(soap, &soap_tmp___ns8__GetDoorState, "-ns8:GetDoorState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetDoorState(soap, &soap_tmp___ns8__GetDoorState, "-ns8:GetDoorState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__GetDoorStateResponse)
		return soap_closesock(soap);
	ns8__GetDoorStateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetDoorStateResponse->soap_get(soap, "ns8:GetDoorStateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DoorControlBindingProxy::AccessDoor(const char *endpoint, const char *soap_action, _ns8__AccessDoor *ns8__AccessDoor, _ns8__AccessDoorResponse *ns8__AccessDoorResponse)
{	struct soap *soap = this->soap;
	struct __ns8__AccessDoor soap_tmp___ns8__AccessDoor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/AccessDoor";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns8__AccessDoor.ns8__AccessDoor = ns8__AccessDoor;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns8__AccessDoor(soap, &soap_tmp___ns8__AccessDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__AccessDoor(soap, &soap_tmp___ns8__AccessDoor, "-ns8:AccessDoor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__AccessDoor(soap, &soap_tmp___ns8__AccessDoor, "-ns8:AccessDoor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__AccessDoorResponse)
		return soap_closesock(soap);
	ns8__AccessDoorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__AccessDoorResponse->soap_get(soap, "ns8:AccessDoorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DoorControlBindingProxy::LockDoor(const char *endpoint, const char *soap_action, _ns8__LockDoor *ns8__LockDoor, _ns8__LockDoorResponse *ns8__LockDoorResponse)
{	struct soap *soap = this->soap;
	struct __ns8__LockDoor soap_tmp___ns8__LockDoor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/LockDoor";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns8__LockDoor.ns8__LockDoor = ns8__LockDoor;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns8__LockDoor(soap, &soap_tmp___ns8__LockDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__LockDoor(soap, &soap_tmp___ns8__LockDoor, "-ns8:LockDoor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__LockDoor(soap, &soap_tmp___ns8__LockDoor, "-ns8:LockDoor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__LockDoorResponse)
		return soap_closesock(soap);
	ns8__LockDoorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__LockDoorResponse->soap_get(soap, "ns8:LockDoorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DoorControlBindingProxy::UnlockDoor(const char *endpoint, const char *soap_action, _ns8__UnlockDoor *ns8__UnlockDoor, _ns8__UnlockDoorResponse *ns8__UnlockDoorResponse)
{	struct soap *soap = this->soap;
	struct __ns8__UnlockDoor soap_tmp___ns8__UnlockDoor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/UnlockDoor";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns8__UnlockDoor.ns8__UnlockDoor = ns8__UnlockDoor;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns8__UnlockDoor(soap, &soap_tmp___ns8__UnlockDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__UnlockDoor(soap, &soap_tmp___ns8__UnlockDoor, "-ns8:UnlockDoor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__UnlockDoor(soap, &soap_tmp___ns8__UnlockDoor, "-ns8:UnlockDoor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__UnlockDoorResponse)
		return soap_closesock(soap);
	ns8__UnlockDoorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__UnlockDoorResponse->soap_get(soap, "ns8:UnlockDoorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DoorControlBindingProxy::BlockDoor(const char *endpoint, const char *soap_action, _ns8__BlockDoor *ns8__BlockDoor, _ns8__BlockDoorResponse *ns8__BlockDoorResponse)
{	struct soap *soap = this->soap;
	struct __ns8__BlockDoor soap_tmp___ns8__BlockDoor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/BlockDoor";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns8__BlockDoor.ns8__BlockDoor = ns8__BlockDoor;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns8__BlockDoor(soap, &soap_tmp___ns8__BlockDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__BlockDoor(soap, &soap_tmp___ns8__BlockDoor, "-ns8:BlockDoor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__BlockDoor(soap, &soap_tmp___ns8__BlockDoor, "-ns8:BlockDoor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__BlockDoorResponse)
		return soap_closesock(soap);
	ns8__BlockDoorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__BlockDoorResponse->soap_get(soap, "ns8:BlockDoorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DoorControlBindingProxy::LockDownDoor(const char *endpoint, const char *soap_action, _ns8__LockDownDoor *ns8__LockDownDoor, _ns8__LockDownDoorResponse *ns8__LockDownDoorResponse)
{	struct soap *soap = this->soap;
	struct __ns8__LockDownDoor soap_tmp___ns8__LockDownDoor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/LockDownDoor";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns8__LockDownDoor.ns8__LockDownDoor = ns8__LockDownDoor;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns8__LockDownDoor(soap, &soap_tmp___ns8__LockDownDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__LockDownDoor(soap, &soap_tmp___ns8__LockDownDoor, "-ns8:LockDownDoor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__LockDownDoor(soap, &soap_tmp___ns8__LockDownDoor, "-ns8:LockDownDoor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__LockDownDoorResponse)
		return soap_closesock(soap);
	ns8__LockDownDoorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__LockDownDoorResponse->soap_get(soap, "ns8:LockDownDoorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DoorControlBindingProxy::LockDownReleaseDoor(const char *endpoint, const char *soap_action, _ns8__LockDownReleaseDoor *ns8__LockDownReleaseDoor, _ns8__LockDownReleaseDoorResponse *ns8__LockDownReleaseDoorResponse)
{	struct soap *soap = this->soap;
	struct __ns8__LockDownReleaseDoor soap_tmp___ns8__LockDownReleaseDoor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/LockDownReleaseDoor";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns8__LockDownReleaseDoor.ns8__LockDownReleaseDoor = ns8__LockDownReleaseDoor;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns8__LockDownReleaseDoor(soap, &soap_tmp___ns8__LockDownReleaseDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__LockDownReleaseDoor(soap, &soap_tmp___ns8__LockDownReleaseDoor, "-ns8:LockDownReleaseDoor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__LockDownReleaseDoor(soap, &soap_tmp___ns8__LockDownReleaseDoor, "-ns8:LockDownReleaseDoor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__LockDownReleaseDoorResponse)
		return soap_closesock(soap);
	ns8__LockDownReleaseDoorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__LockDownReleaseDoorResponse->soap_get(soap, "ns8:LockDownReleaseDoorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DoorControlBindingProxy::LockOpenDoor(const char *endpoint, const char *soap_action, _ns8__LockOpenDoor *ns8__LockOpenDoor, _ns8__LockOpenDoorResponse *ns8__LockOpenDoorResponse)
{	struct soap *soap = this->soap;
	struct __ns8__LockOpenDoor soap_tmp___ns8__LockOpenDoor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/LockOpenDoor";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns8__LockOpenDoor.ns8__LockOpenDoor = ns8__LockOpenDoor;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns8__LockOpenDoor(soap, &soap_tmp___ns8__LockOpenDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__LockOpenDoor(soap, &soap_tmp___ns8__LockOpenDoor, "-ns8:LockOpenDoor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__LockOpenDoor(soap, &soap_tmp___ns8__LockOpenDoor, "-ns8:LockOpenDoor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__LockOpenDoorResponse)
		return soap_closesock(soap);
	ns8__LockOpenDoorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__LockOpenDoorResponse->soap_get(soap, "ns8:LockOpenDoorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DoorControlBindingProxy::LockOpenReleaseDoor(const char *endpoint, const char *soap_action, _ns8__LockOpenReleaseDoor *ns8__LockOpenReleaseDoor, _ns8__LockOpenReleaseDoorResponse *ns8__LockOpenReleaseDoorResponse)
{	struct soap *soap = this->soap;
	struct __ns8__LockOpenReleaseDoor soap_tmp___ns8__LockOpenReleaseDoor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/LockOpenReleaseDoor";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns8__LockOpenReleaseDoor.ns8__LockOpenReleaseDoor = ns8__LockOpenReleaseDoor;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns8__LockOpenReleaseDoor(soap, &soap_tmp___ns8__LockOpenReleaseDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__LockOpenReleaseDoor(soap, &soap_tmp___ns8__LockOpenReleaseDoor, "-ns8:LockOpenReleaseDoor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__LockOpenReleaseDoor(soap, &soap_tmp___ns8__LockOpenReleaseDoor, "-ns8:LockOpenReleaseDoor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__LockOpenReleaseDoorResponse)
		return soap_closesock(soap);
	ns8__LockOpenReleaseDoorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__LockOpenReleaseDoorResponse->soap_get(soap, "ns8:LockOpenReleaseDoorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DoorControlBindingProxy::DoubleLockDoor(const char *endpoint, const char *soap_action, _ns8__DoubleLockDoor *ns8__DoubleLockDoor, _ns8__DoubleLockDoorResponse *ns8__DoubleLockDoorResponse)
{	struct soap *soap = this->soap;
	struct __ns8__DoubleLockDoor soap_tmp___ns8__DoubleLockDoor;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/DoubleLockDoor";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns8__DoubleLockDoor.ns8__DoubleLockDoor = ns8__DoubleLockDoor;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns8__DoubleLockDoor(soap, &soap_tmp___ns8__DoubleLockDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__DoubleLockDoor(soap, &soap_tmp___ns8__DoubleLockDoor, "-ns8:DoubleLockDoor", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__DoubleLockDoor(soap, &soap_tmp___ns8__DoubleLockDoor, "-ns8:DoubleLockDoor", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__DoubleLockDoorResponse)
		return soap_closesock(soap);
	ns8__DoubleLockDoorResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__DoubleLockDoorResponse->soap_get(soap, "ns8:DoubleLockDoorResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
