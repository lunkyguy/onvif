/* soapPACSBindingProxy.cpp
   Generated by gSOAP 2.8.17r from onvif.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapPACSBindingProxy.h"

PACSBindingProxy::PACSBindingProxy()
{	this->soap = soap_new();
	this->own = true;
	PACSBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

PACSBindingProxy::PACSBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->own = false;
	PACSBindingProxy_init(_soap->imode, _soap->omode);
}

PACSBindingProxy::PACSBindingProxy(const char *url)
{	this->soap = soap_new();
	this->own = true;
	PACSBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

PACSBindingProxy::PACSBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	PACSBindingProxy_init(iomode, iomode);
}

PACSBindingProxy::PACSBindingProxy(const char *url, soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	PACSBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

PACSBindingProxy::PACSBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->own = true;
	PACSBindingProxy_init(imode, omode);
}

PACSBindingProxy::~PACSBindingProxy()
{	if (this->own)
		soap_free(this->soap);
}

void PACSBindingProxy::PACSBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
	{"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
	{"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
	{"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
	{"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
	{"wsc", "http://schemas.xmlsoap.org/ws/2005/02/sc", NULL, NULL},
	{"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
	{"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
	{"ns2", "http://www.onvif.org/ver10/pacs", NULL, NULL},
	{"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
	{"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
	{"name", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
	{"name10", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
	{"name11", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
	{"name12", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
	{"name13", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
	{"name14", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
	{"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"name2", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
	{"name3", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
	{"name4", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
	{"ns5", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
	{"name5", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
	{"name6", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
	{"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
	{"name7", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
	{"name8", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
	{"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
	{"name9", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
	{"ns1", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
	{"ns10", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
	{"ns11", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
	{"ns12", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
	{"ns3", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
	{"ns4", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
	{"ns6", "http://www.onvif.org/ver10/authenticationbehavior/wsdl", NULL, NULL},
	{"ns7", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
	{"ns8", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
	{"ns9", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
	{"tad", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
	{"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
	{"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
	{"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
	{"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
	{"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
	{"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
	{"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
	{"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
	{"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
	{"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void PACSBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void PACSBindingProxy::reset()
{	destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	PACSBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void PACSBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void PACSBindingProxy::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsse__Security = wsse__Security;
}

const SOAP_ENV__Header *PACSBindingProxy::soap_header()
{	return this->soap->header;
}

const SOAP_ENV__Fault *PACSBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *PACSBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *PACSBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int PACSBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int PACSBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void PACSBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void PACSBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *PACSBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int PACSBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _ns1__GetServiceCapabilities *ns1__GetServiceCapabilities, _ns1__GetServiceCapabilitiesResponse *ns1__GetServiceCapabilitiesResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetServiceCapabilities soap_tmp___ns1__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetServiceCapabilities";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetServiceCapabilities.ns1__GetServiceCapabilities = ns1__GetServiceCapabilities;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities, "-ns1:GetServiceCapabilities", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities, "-ns1:GetServiceCapabilities", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetServiceCapabilitiesResponse)
		return soap_closesock(soap);
	ns1__GetServiceCapabilitiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetServiceCapabilitiesResponse->soap_get(soap, "ns1:GetServiceCapabilitiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::GetAccessPointInfoList(const char *endpoint, const char *soap_action, _ns1__GetAccessPointInfoList *ns1__GetAccessPointInfoList, _ns1__GetAccessPointInfoListResponse *ns1__GetAccessPointInfoListResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetAccessPointInfoList soap_tmp___ns1__GetAccessPointInfoList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointInfoList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAccessPointInfoList.ns1__GetAccessPointInfoList = ns1__GetAccessPointInfoList;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAccessPointInfoList(soap, &soap_tmp___ns1__GetAccessPointInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAccessPointInfoList(soap, &soap_tmp___ns1__GetAccessPointInfoList, "-ns1:GetAccessPointInfoList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAccessPointInfoList(soap, &soap_tmp___ns1__GetAccessPointInfoList, "-ns1:GetAccessPointInfoList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetAccessPointInfoListResponse)
		return soap_closesock(soap);
	ns1__GetAccessPointInfoListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAccessPointInfoListResponse->soap_get(soap, "ns1:GetAccessPointInfoListResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::GetAccessPointInfo(const char *endpoint, const char *soap_action, _ns1__GetAccessPointInfo *ns1__GetAccessPointInfo, _ns1__GetAccessPointInfoResponse *ns1__GetAccessPointInfoResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetAccessPointInfo soap_tmp___ns1__GetAccessPointInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAccessPointInfo.ns1__GetAccessPointInfo = ns1__GetAccessPointInfo;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAccessPointInfo(soap, &soap_tmp___ns1__GetAccessPointInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAccessPointInfo(soap, &soap_tmp___ns1__GetAccessPointInfo, "-ns1:GetAccessPointInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAccessPointInfo(soap, &soap_tmp___ns1__GetAccessPointInfo, "-ns1:GetAccessPointInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetAccessPointInfoResponse)
		return soap_closesock(soap);
	ns1__GetAccessPointInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAccessPointInfoResponse->soap_get(soap, "ns1:GetAccessPointInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::GetAccessPointList(const char *endpoint, const char *soap_action, _ns1__GetAccessPointList *ns1__GetAccessPointList, _ns1__GetAccessPointListResponse *ns1__GetAccessPointListResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetAccessPointList soap_tmp___ns1__GetAccessPointList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAccessPointList.ns1__GetAccessPointList = ns1__GetAccessPointList;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAccessPointList(soap, &soap_tmp___ns1__GetAccessPointList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAccessPointList(soap, &soap_tmp___ns1__GetAccessPointList, "-ns1:GetAccessPointList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAccessPointList(soap, &soap_tmp___ns1__GetAccessPointList, "-ns1:GetAccessPointList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetAccessPointListResponse)
		return soap_closesock(soap);
	ns1__GetAccessPointListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAccessPointListResponse->soap_get(soap, "ns1:GetAccessPointListResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::GetAccessPoints(const char *endpoint, const char *soap_action, _ns1__GetAccessPoints *ns1__GetAccessPoints, _ns1__GetAccessPointsResponse *ns1__GetAccessPointsResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetAccessPoints soap_tmp___ns1__GetAccessPoints;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPoints";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAccessPoints.ns1__GetAccessPoints = ns1__GetAccessPoints;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAccessPoints(soap, &soap_tmp___ns1__GetAccessPoints);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAccessPoints(soap, &soap_tmp___ns1__GetAccessPoints, "-ns1:GetAccessPoints", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAccessPoints(soap, &soap_tmp___ns1__GetAccessPoints, "-ns1:GetAccessPoints", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetAccessPointsResponse)
		return soap_closesock(soap);
	ns1__GetAccessPointsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAccessPointsResponse->soap_get(soap, "ns1:GetAccessPointsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::CreateAccessPoint(const char *endpoint, const char *soap_action, _ns1__CreateAccessPoint *ns1__CreateAccessPoint, _ns1__CreateAccessPointResponse *ns1__CreateAccessPointResponse)
{	struct soap *soap = this->soap;
	struct __ns1__CreateAccessPoint soap_tmp___ns1__CreateAccessPoint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/CreateAccessPoint";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CreateAccessPoint.ns1__CreateAccessPoint = ns1__CreateAccessPoint;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateAccessPoint(soap, &soap_tmp___ns1__CreateAccessPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateAccessPoint(soap, &soap_tmp___ns1__CreateAccessPoint, "-ns1:CreateAccessPoint", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateAccessPoint(soap, &soap_tmp___ns1__CreateAccessPoint, "-ns1:CreateAccessPoint", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__CreateAccessPointResponse)
		return soap_closesock(soap);
	ns1__CreateAccessPointResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateAccessPointResponse->soap_get(soap, "ns1:CreateAccessPointResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::SetAccessPoint(const char *endpoint, const char *soap_action, _ns1__SetAccessPoint *ns1__SetAccessPoint, _ns1__SetAccessPointResponse *ns1__SetAccessPointResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetAccessPoint soap_tmp___ns1__SetAccessPoint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/SetAccessPoint";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetAccessPoint.ns1__SetAccessPoint = ns1__SetAccessPoint;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetAccessPoint(soap, &soap_tmp___ns1__SetAccessPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetAccessPoint(soap, &soap_tmp___ns1__SetAccessPoint, "-ns1:SetAccessPoint", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetAccessPoint(soap, &soap_tmp___ns1__SetAccessPoint, "-ns1:SetAccessPoint", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetAccessPointResponse)
		return soap_closesock(soap);
	ns1__SetAccessPointResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetAccessPointResponse->soap_get(soap, "ns1:SetAccessPointResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::ModifyAccessPoint(const char *endpoint, const char *soap_action, _ns1__ModifyAccessPoint *ns1__ModifyAccessPoint, _ns1__ModifyAccessPointResponse *ns1__ModifyAccessPointResponse)
{	struct soap *soap = this->soap;
	struct __ns1__ModifyAccessPoint soap_tmp___ns1__ModifyAccessPoint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/ModifyAccessPoint";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__ModifyAccessPoint.ns1__ModifyAccessPoint = ns1__ModifyAccessPoint;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__ModifyAccessPoint(soap, &soap_tmp___ns1__ModifyAccessPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ModifyAccessPoint(soap, &soap_tmp___ns1__ModifyAccessPoint, "-ns1:ModifyAccessPoint", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ModifyAccessPoint(soap, &soap_tmp___ns1__ModifyAccessPoint, "-ns1:ModifyAccessPoint", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ModifyAccessPointResponse)
		return soap_closesock(soap);
	ns1__ModifyAccessPointResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ModifyAccessPointResponse->soap_get(soap, "ns1:ModifyAccessPointResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::DeleteAccessPoint(const char *endpoint, const char *soap_action, _ns1__DeleteAccessPoint *ns1__DeleteAccessPoint, _ns1__DeleteAccessPointResponse *ns1__DeleteAccessPointResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DeleteAccessPoint soap_tmp___ns1__DeleteAccessPoint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/DeleteAccessPoint";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DeleteAccessPoint.ns1__DeleteAccessPoint = ns1__DeleteAccessPoint;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteAccessPoint(soap, &soap_tmp___ns1__DeleteAccessPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteAccessPoint(soap, &soap_tmp___ns1__DeleteAccessPoint, "-ns1:DeleteAccessPoint", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteAccessPoint(soap, &soap_tmp___ns1__DeleteAccessPoint, "-ns1:DeleteAccessPoint", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__DeleteAccessPointResponse)
		return soap_closesock(soap);
	ns1__DeleteAccessPointResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteAccessPointResponse->soap_get(soap, "ns1:DeleteAccessPointResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::SetAccessPointAuthenticationProfile(const char *endpoint, const char *soap_action, _ns1__SetAccessPointAuthenticationProfile *ns1__SetAccessPointAuthenticationProfile, _ns1__SetAccessPointAuthenticationProfileResponse *ns1__SetAccessPointAuthenticationProfileResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetAccessPointAuthenticationProfile soap_tmp___ns1__SetAccessPointAuthenticationProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/SetAccessPointAuthenticationProfile";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetAccessPointAuthenticationProfile.ns1__SetAccessPointAuthenticationProfile = ns1__SetAccessPointAuthenticationProfile;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetAccessPointAuthenticationProfile(soap, &soap_tmp___ns1__SetAccessPointAuthenticationProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetAccessPointAuthenticationProfile(soap, &soap_tmp___ns1__SetAccessPointAuthenticationProfile, "-ns1:SetAccessPointAuthenticationProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetAccessPointAuthenticationProfile(soap, &soap_tmp___ns1__SetAccessPointAuthenticationProfile, "-ns1:SetAccessPointAuthenticationProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetAccessPointAuthenticationProfileResponse)
		return soap_closesock(soap);
	ns1__SetAccessPointAuthenticationProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetAccessPointAuthenticationProfileResponse->soap_get(soap, "ns1:SetAccessPointAuthenticationProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::DeleteAccessPointAuthenticationProfile(const char *endpoint, const char *soap_action, _ns1__DeleteAccessPointAuthenticationProfile *ns1__DeleteAccessPointAuthenticationProfile, _ns1__DeleteAccessPointAuthenticationProfileResponse *ns1__DeleteAccessPointAuthenticationProfileResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DeleteAccessPointAuthenticationProfile soap_tmp___ns1__DeleteAccessPointAuthenticationProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/DeleteAccessPointAuthenticationProfile";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DeleteAccessPointAuthenticationProfile.ns1__DeleteAccessPointAuthenticationProfile = ns1__DeleteAccessPointAuthenticationProfile;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteAccessPointAuthenticationProfile(soap, &soap_tmp___ns1__DeleteAccessPointAuthenticationProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteAccessPointAuthenticationProfile(soap, &soap_tmp___ns1__DeleteAccessPointAuthenticationProfile, "-ns1:DeleteAccessPointAuthenticationProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteAccessPointAuthenticationProfile(soap, &soap_tmp___ns1__DeleteAccessPointAuthenticationProfile, "-ns1:DeleteAccessPointAuthenticationProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__DeleteAccessPointAuthenticationProfileResponse)
		return soap_closesock(soap);
	ns1__DeleteAccessPointAuthenticationProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteAccessPointAuthenticationProfileResponse->soap_get(soap, "ns1:DeleteAccessPointAuthenticationProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::GetAreaInfoList(const char *endpoint, const char *soap_action, _ns1__GetAreaInfoList *ns1__GetAreaInfoList, _ns1__GetAreaInfoListResponse *ns1__GetAreaInfoListResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetAreaInfoList soap_tmp___ns1__GetAreaInfoList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreaInfoList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAreaInfoList.ns1__GetAreaInfoList = ns1__GetAreaInfoList;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAreaInfoList(soap, &soap_tmp___ns1__GetAreaInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAreaInfoList(soap, &soap_tmp___ns1__GetAreaInfoList, "-ns1:GetAreaInfoList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAreaInfoList(soap, &soap_tmp___ns1__GetAreaInfoList, "-ns1:GetAreaInfoList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetAreaInfoListResponse)
		return soap_closesock(soap);
	ns1__GetAreaInfoListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAreaInfoListResponse->soap_get(soap, "ns1:GetAreaInfoListResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::GetAreaInfo(const char *endpoint, const char *soap_action, _ns1__GetAreaInfo *ns1__GetAreaInfo, _ns1__GetAreaInfoResponse *ns1__GetAreaInfoResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetAreaInfo soap_tmp___ns1__GetAreaInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreaInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAreaInfo.ns1__GetAreaInfo = ns1__GetAreaInfo;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAreaInfo(soap, &soap_tmp___ns1__GetAreaInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAreaInfo(soap, &soap_tmp___ns1__GetAreaInfo, "-ns1:GetAreaInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAreaInfo(soap, &soap_tmp___ns1__GetAreaInfo, "-ns1:GetAreaInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetAreaInfoResponse)
		return soap_closesock(soap);
	ns1__GetAreaInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAreaInfoResponse->soap_get(soap, "ns1:GetAreaInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::GetAreaList(const char *endpoint, const char *soap_action, _ns1__GetAreaList *ns1__GetAreaList, _ns1__GetAreaListResponse *ns1__GetAreaListResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetAreaList soap_tmp___ns1__GetAreaList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreaList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAreaList.ns1__GetAreaList = ns1__GetAreaList;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAreaList(soap, &soap_tmp___ns1__GetAreaList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAreaList(soap, &soap_tmp___ns1__GetAreaList, "-ns1:GetAreaList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAreaList(soap, &soap_tmp___ns1__GetAreaList, "-ns1:GetAreaList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetAreaListResponse)
		return soap_closesock(soap);
	ns1__GetAreaListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAreaListResponse->soap_get(soap, "ns1:GetAreaListResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::GetAreas(const char *endpoint, const char *soap_action, _ns1__GetAreas *ns1__GetAreas, _ns1__GetAreasResponse *ns1__GetAreasResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetAreas soap_tmp___ns1__GetAreas;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreas";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAreas.ns1__GetAreas = ns1__GetAreas;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAreas(soap, &soap_tmp___ns1__GetAreas);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAreas(soap, &soap_tmp___ns1__GetAreas, "-ns1:GetAreas", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAreas(soap, &soap_tmp___ns1__GetAreas, "-ns1:GetAreas", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetAreasResponse)
		return soap_closesock(soap);
	ns1__GetAreasResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAreasResponse->soap_get(soap, "ns1:GetAreasResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::CreateArea(const char *endpoint, const char *soap_action, _ns1__CreateArea *ns1__CreateArea, _ns1__CreateAreaResponse *ns1__CreateAreaResponse)
{	struct soap *soap = this->soap;
	struct __ns1__CreateArea soap_tmp___ns1__CreateArea;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/CreateArea";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CreateArea.ns1__CreateArea = ns1__CreateArea;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateArea(soap, &soap_tmp___ns1__CreateArea);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateArea(soap, &soap_tmp___ns1__CreateArea, "-ns1:CreateArea", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateArea(soap, &soap_tmp___ns1__CreateArea, "-ns1:CreateArea", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__CreateAreaResponse)
		return soap_closesock(soap);
	ns1__CreateAreaResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateAreaResponse->soap_get(soap, "ns1:CreateAreaResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::SetArea(const char *endpoint, const char *soap_action, _ns1__SetArea *ns1__SetArea, _ns1__SetAreaResponse *ns1__SetAreaResponse)
{	struct soap *soap = this->soap;
	struct __ns1__SetArea soap_tmp___ns1__SetArea;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/SetArea";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetArea.ns1__SetArea = ns1__SetArea;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetArea(soap, &soap_tmp___ns1__SetArea);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetArea(soap, &soap_tmp___ns1__SetArea, "-ns1:SetArea", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetArea(soap, &soap_tmp___ns1__SetArea, "-ns1:SetArea", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetAreaResponse)
		return soap_closesock(soap);
	ns1__SetAreaResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetAreaResponse->soap_get(soap, "ns1:SetAreaResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::ModifyArea(const char *endpoint, const char *soap_action, _ns1__ModifyArea *ns1__ModifyArea, _ns1__ModifyAreaResponse *ns1__ModifyAreaResponse)
{	struct soap *soap = this->soap;
	struct __ns1__ModifyArea soap_tmp___ns1__ModifyArea;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/ModifyArea";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__ModifyArea.ns1__ModifyArea = ns1__ModifyArea;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__ModifyArea(soap, &soap_tmp___ns1__ModifyArea);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ModifyArea(soap, &soap_tmp___ns1__ModifyArea, "-ns1:ModifyArea", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ModifyArea(soap, &soap_tmp___ns1__ModifyArea, "-ns1:ModifyArea", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ModifyAreaResponse)
		return soap_closesock(soap);
	ns1__ModifyAreaResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ModifyAreaResponse->soap_get(soap, "ns1:ModifyAreaResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::DeleteArea(const char *endpoint, const char *soap_action, _ns1__DeleteArea *ns1__DeleteArea, _ns1__DeleteAreaResponse *ns1__DeleteAreaResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DeleteArea soap_tmp___ns1__DeleteArea;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/DeleteArea";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DeleteArea.ns1__DeleteArea = ns1__DeleteArea;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteArea(soap, &soap_tmp___ns1__DeleteArea);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteArea(soap, &soap_tmp___ns1__DeleteArea, "-ns1:DeleteArea", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteArea(soap, &soap_tmp___ns1__DeleteArea, "-ns1:DeleteArea", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__DeleteAreaResponse)
		return soap_closesock(soap);
	ns1__DeleteAreaResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteAreaResponse->soap_get(soap, "ns1:DeleteAreaResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::GetAccessPointState(const char *endpoint, const char *soap_action, _ns1__GetAccessPointState *ns1__GetAccessPointState, _ns1__GetAccessPointStateResponse *ns1__GetAccessPointStateResponse)
{	struct soap *soap = this->soap;
	struct __ns1__GetAccessPointState soap_tmp___ns1__GetAccessPointState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointState";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAccessPointState.ns1__GetAccessPointState = ns1__GetAccessPointState;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAccessPointState(soap, &soap_tmp___ns1__GetAccessPointState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAccessPointState(soap, &soap_tmp___ns1__GetAccessPointState, "-ns1:GetAccessPointState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAccessPointState(soap, &soap_tmp___ns1__GetAccessPointState, "-ns1:GetAccessPointState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetAccessPointStateResponse)
		return soap_closesock(soap);
	ns1__GetAccessPointStateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAccessPointStateResponse->soap_get(soap, "ns1:GetAccessPointStateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::EnableAccessPoint(const char *endpoint, const char *soap_action, _ns1__EnableAccessPoint *ns1__EnableAccessPoint, _ns1__EnableAccessPointResponse *ns1__EnableAccessPointResponse)
{	struct soap *soap = this->soap;
	struct __ns1__EnableAccessPoint soap_tmp___ns1__EnableAccessPoint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/EnableAccessPoint";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__EnableAccessPoint.ns1__EnableAccessPoint = ns1__EnableAccessPoint;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__EnableAccessPoint(soap, &soap_tmp___ns1__EnableAccessPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__EnableAccessPoint(soap, &soap_tmp___ns1__EnableAccessPoint, "-ns1:EnableAccessPoint", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__EnableAccessPoint(soap, &soap_tmp___ns1__EnableAccessPoint, "-ns1:EnableAccessPoint", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__EnableAccessPointResponse)
		return soap_closesock(soap);
	ns1__EnableAccessPointResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__EnableAccessPointResponse->soap_get(soap, "ns1:EnableAccessPointResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::DisableAccessPoint(const char *endpoint, const char *soap_action, _ns1__DisableAccessPoint *ns1__DisableAccessPoint, _ns1__DisableAccessPointResponse *ns1__DisableAccessPointResponse)
{	struct soap *soap = this->soap;
	struct __ns1__DisableAccessPoint soap_tmp___ns1__DisableAccessPoint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/DisableAccessPoint";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DisableAccessPoint.ns1__DisableAccessPoint = ns1__DisableAccessPoint;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__DisableAccessPoint(soap, &soap_tmp___ns1__DisableAccessPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DisableAccessPoint(soap, &soap_tmp___ns1__DisableAccessPoint, "-ns1:DisableAccessPoint", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DisableAccessPoint(soap, &soap_tmp___ns1__DisableAccessPoint, "-ns1:DisableAccessPoint", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__DisableAccessPointResponse)
		return soap_closesock(soap);
	ns1__DisableAccessPointResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DisableAccessPointResponse->soap_get(soap, "ns1:DisableAccessPointResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PACSBindingProxy::ExternalAuthorization(const char *endpoint, const char *soap_action, _ns1__ExternalAuthorization *ns1__ExternalAuthorization, _ns1__ExternalAuthorizationResponse *ns1__ExternalAuthorizationResponse)
{	struct soap *soap = this->soap;
	struct __ns1__ExternalAuthorization soap_tmp___ns1__ExternalAuthorization;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/ExternalAuthorization";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__ExternalAuthorization.ns1__ExternalAuthorization = ns1__ExternalAuthorization;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__ExternalAuthorization(soap, &soap_tmp___ns1__ExternalAuthorization);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ExternalAuthorization(soap, &soap_tmp___ns1__ExternalAuthorization, "-ns1:ExternalAuthorization", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ExternalAuthorization(soap, &soap_tmp___ns1__ExternalAuthorization, "-ns1:ExternalAuthorization", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__ExternalAuthorizationResponse)
		return soap_closesock(soap);
	ns1__ExternalAuthorizationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ExternalAuthorizationResponse->soap_get(soap, "ns1:ExternalAuthorizationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
