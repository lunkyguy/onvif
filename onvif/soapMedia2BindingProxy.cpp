/* soapMedia2BindingProxy.cpp
   Generated by gSOAP 2.8.17r from onvif.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapMedia2BindingProxy.h"

Media2BindingProxy::Media2BindingProxy()
{	this->soap = soap_new();
	this->own = true;
	Media2BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

Media2BindingProxy::Media2BindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->own = false;
	Media2BindingProxy_init(_soap->imode, _soap->omode);
}

Media2BindingProxy::Media2BindingProxy(const char *url)
{	this->soap = soap_new();
	this->own = true;
	Media2BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

Media2BindingProxy::Media2BindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	Media2BindingProxy_init(iomode, iomode);
}

Media2BindingProxy::Media2BindingProxy(const char *url, soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	Media2BindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

Media2BindingProxy::Media2BindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->own = true;
	Media2BindingProxy_init(imode, omode);
}

Media2BindingProxy::~Media2BindingProxy()
{	if (this->own)
		soap_free(this->soap);
}

void Media2BindingProxy::Media2BindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
	{"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
	{"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
	{"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
	{"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
	{"wsc", "http://schemas.xmlsoap.org/ws/2005/02/sc", NULL, NULL},
	{"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
	{"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
	{"ns2", "http://www.onvif.org/ver10/pacs", NULL, NULL},
	{"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
	{"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
	{"name", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
	{"name10", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
	{"name11", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
	{"name12", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
	{"name13", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
	{"name14", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
	{"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"name2", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
	{"name3", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
	{"name4", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
	{"ns5", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
	{"name5", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
	{"name6", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
	{"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
	{"name7", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
	{"name8", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
	{"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
	{"name9", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
	{"ns1", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
	{"ns10", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
	{"ns11", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
	{"ns12", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
	{"ns3", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
	{"ns4", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
	{"ns6", "http://www.onvif.org/ver10/authenticationbehavior/wsdl", NULL, NULL},
	{"ns7", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
	{"ns8", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
	{"ns9", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
	{"tad", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
	{"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
	{"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
	{"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
	{"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
	{"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
	{"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
	{"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
	{"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
	{"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
	{"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void Media2BindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void Media2BindingProxy::reset()
{	destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	Media2BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void Media2BindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void Media2BindingProxy::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsse__Security = wsse__Security;
}

const SOAP_ENV__Header *Media2BindingProxy::soap_header()
{	return this->soap->header;
}

const SOAP_ENV__Fault *Media2BindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *Media2BindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *Media2BindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int Media2BindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int Media2BindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void Media2BindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void Media2BindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *Media2BindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int Media2BindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _ns9__GetServiceCapabilities *ns9__GetServiceCapabilities, _ns9__GetServiceCapabilitiesResponse *ns9__GetServiceCapabilitiesResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetServiceCapabilities soap_tmp___ns9__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetServiceCapabilities";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetServiceCapabilities.ns9__GetServiceCapabilities = ns9__GetServiceCapabilities;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetServiceCapabilities(soap, &soap_tmp___ns9__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetServiceCapabilities(soap, &soap_tmp___ns9__GetServiceCapabilities, "-ns9:GetServiceCapabilities", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetServiceCapabilities(soap, &soap_tmp___ns9__GetServiceCapabilities, "-ns9:GetServiceCapabilities", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetServiceCapabilitiesResponse)
		return soap_closesock(soap);
	ns9__GetServiceCapabilitiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetServiceCapabilitiesResponse->soap_get(soap, "ns9:GetServiceCapabilitiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::CreateProfile(const char *endpoint, const char *soap_action, _ns9__CreateProfile *ns9__CreateProfile, _ns9__CreateProfileResponse *ns9__CreateProfileResponse)
{	struct soap *soap = this->soap;
	struct __ns9__CreateProfile soap_tmp___ns9__CreateProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateProfile";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__CreateProfile.ns9__CreateProfile = ns9__CreateProfile;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__CreateProfile(soap, &soap_tmp___ns9__CreateProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__CreateProfile(soap, &soap_tmp___ns9__CreateProfile, "-ns9:CreateProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__CreateProfile(soap, &soap_tmp___ns9__CreateProfile, "-ns9:CreateProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__CreateProfileResponse)
		return soap_closesock(soap);
	ns9__CreateProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__CreateProfileResponse->soap_get(soap, "ns9:CreateProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetProfiles(const char *endpoint, const char *soap_action, _ns9__GetProfiles *ns9__GetProfiles, _ns9__GetProfilesResponse *ns9__GetProfilesResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetProfiles soap_tmp___ns9__GetProfiles;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetProfiles";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetProfiles.ns9__GetProfiles = ns9__GetProfiles;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetProfiles(soap, &soap_tmp___ns9__GetProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetProfiles(soap, &soap_tmp___ns9__GetProfiles, "-ns9:GetProfiles", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetProfiles(soap, &soap_tmp___ns9__GetProfiles, "-ns9:GetProfiles", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetProfilesResponse)
		return soap_closesock(soap);
	ns9__GetProfilesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetProfilesResponse->soap_get(soap, "ns9:GetProfilesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::AddConfiguration(const char *endpoint, const char *soap_action, _ns9__AddConfiguration *ns9__AddConfiguration, _ns9__AddConfigurationResponse *ns9__AddConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns9__AddConfiguration soap_tmp___ns9__AddConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/AddConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__AddConfiguration.ns9__AddConfiguration = ns9__AddConfiguration;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__AddConfiguration(soap, &soap_tmp___ns9__AddConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__AddConfiguration(soap, &soap_tmp___ns9__AddConfiguration, "-ns9:AddConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__AddConfiguration(soap, &soap_tmp___ns9__AddConfiguration, "-ns9:AddConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__AddConfigurationResponse)
		return soap_closesock(soap);
	ns9__AddConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__AddConfigurationResponse->soap_get(soap, "ns9:AddConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::RemoveConfiguration(const char *endpoint, const char *soap_action, _ns9__RemoveConfiguration *ns9__RemoveConfiguration, _ns9__RemoveConfigurationResponse *ns9__RemoveConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns9__RemoveConfiguration soap_tmp___ns9__RemoveConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/RemoveConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__RemoveConfiguration.ns9__RemoveConfiguration = ns9__RemoveConfiguration;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__RemoveConfiguration(soap, &soap_tmp___ns9__RemoveConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__RemoveConfiguration(soap, &soap_tmp___ns9__RemoveConfiguration, "-ns9:RemoveConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__RemoveConfiguration(soap, &soap_tmp___ns9__RemoveConfiguration, "-ns9:RemoveConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__RemoveConfigurationResponse)
		return soap_closesock(soap);
	ns9__RemoveConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__RemoveConfigurationResponse->soap_get(soap, "ns9:RemoveConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::DeleteProfile(const char *endpoint, const char *soap_action, _ns9__DeleteProfile *ns9__DeleteProfile, _ns9__DeleteProfileResponse *ns9__DeleteProfileResponse)
{	struct soap *soap = this->soap;
	struct __ns9__DeleteProfile soap_tmp___ns9__DeleteProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteProfile";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__DeleteProfile.ns9__DeleteProfile = ns9__DeleteProfile;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__DeleteProfile(soap, &soap_tmp___ns9__DeleteProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__DeleteProfile(soap, &soap_tmp___ns9__DeleteProfile, "-ns9:DeleteProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__DeleteProfile(soap, &soap_tmp___ns9__DeleteProfile, "-ns9:DeleteProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__DeleteProfileResponse)
		return soap_closesock(soap);
	ns9__DeleteProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__DeleteProfileResponse->soap_get(soap, "ns9:DeleteProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoSourceConfigurations(const char *endpoint, const char *soap_action, ns9__GetConfiguration *ns9__GetVideoSourceConfigurations, _ns9__GetVideoSourceConfigurationsResponse *ns9__GetVideoSourceConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetVideoSourceConfigurations soap_tmp___ns9__GetVideoSourceConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetVideoSourceConfigurations.ns9__GetVideoSourceConfigurations = ns9__GetVideoSourceConfigurations;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetVideoSourceConfigurations(soap, &soap_tmp___ns9__GetVideoSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetVideoSourceConfigurations(soap, &soap_tmp___ns9__GetVideoSourceConfigurations, "-ns9:GetVideoSourceConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetVideoSourceConfigurations(soap, &soap_tmp___ns9__GetVideoSourceConfigurations, "-ns9:GetVideoSourceConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetVideoSourceConfigurationsResponse)
		return soap_closesock(soap);
	ns9__GetVideoSourceConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetVideoSourceConfigurationsResponse->soap_get(soap, "ns9:GetVideoSourceConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoEncoderConfigurations(const char *endpoint, const char *soap_action, ns9__GetConfiguration *ns9__GetVideoEncoderConfigurations, _ns9__GetVideoEncoderConfigurationsResponse *ns9__GetVideoEncoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetVideoEncoderConfigurations soap_tmp___ns9__GetVideoEncoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetVideoEncoderConfigurations.ns9__GetVideoEncoderConfigurations = ns9__GetVideoEncoderConfigurations;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetVideoEncoderConfigurations(soap, &soap_tmp___ns9__GetVideoEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetVideoEncoderConfigurations(soap, &soap_tmp___ns9__GetVideoEncoderConfigurations, "-ns9:GetVideoEncoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetVideoEncoderConfigurations(soap, &soap_tmp___ns9__GetVideoEncoderConfigurations, "-ns9:GetVideoEncoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetVideoEncoderConfigurationsResponse)
		return soap_closesock(soap);
	ns9__GetVideoEncoderConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetVideoEncoderConfigurationsResponse->soap_get(soap, "ns9:GetVideoEncoderConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioSourceConfigurations(const char *endpoint, const char *soap_action, ns9__GetConfiguration *ns9__GetAudioSourceConfigurations, _ns9__GetAudioSourceConfigurationsResponse *ns9__GetAudioSourceConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetAudioSourceConfigurations soap_tmp___ns9__GetAudioSourceConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurations/";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetAudioSourceConfigurations.ns9__GetAudioSourceConfigurations = ns9__GetAudioSourceConfigurations;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetAudioSourceConfigurations(soap, &soap_tmp___ns9__GetAudioSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetAudioSourceConfigurations(soap, &soap_tmp___ns9__GetAudioSourceConfigurations, "-ns9:GetAudioSourceConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetAudioSourceConfigurations(soap, &soap_tmp___ns9__GetAudioSourceConfigurations, "-ns9:GetAudioSourceConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetAudioSourceConfigurationsResponse)
		return soap_closesock(soap);
	ns9__GetAudioSourceConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetAudioSourceConfigurationsResponse->soap_get(soap, "ns9:GetAudioSourceConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioEncoderConfigurations(const char *endpoint, const char *soap_action, ns9__GetConfiguration *ns9__GetAudioEncoderConfigurations, _ns9__GetAudioEncoderConfigurationsResponse *ns9__GetAudioEncoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetAudioEncoderConfigurations soap_tmp___ns9__GetAudioEncoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetAudioEncoderConfigurations.ns9__GetAudioEncoderConfigurations = ns9__GetAudioEncoderConfigurations;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetAudioEncoderConfigurations(soap, &soap_tmp___ns9__GetAudioEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetAudioEncoderConfigurations(soap, &soap_tmp___ns9__GetAudioEncoderConfigurations, "-ns9:GetAudioEncoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetAudioEncoderConfigurations(soap, &soap_tmp___ns9__GetAudioEncoderConfigurations, "-ns9:GetAudioEncoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetAudioEncoderConfigurationsResponse)
		return soap_closesock(soap);
	ns9__GetAudioEncoderConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetAudioEncoderConfigurationsResponse->soap_get(soap, "ns9:GetAudioEncoderConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAnalyticsConfigurations(const char *endpoint, const char *soap_action, ns9__GetConfiguration *ns9__GetAnalyticsConfigurations, _ns9__GetAnalyticsConfigurationsResponse *ns9__GetAnalyticsConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetAnalyticsConfigurations soap_tmp___ns9__GetAnalyticsConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAnalyticsConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetAnalyticsConfigurations.ns9__GetAnalyticsConfigurations = ns9__GetAnalyticsConfigurations;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetAnalyticsConfigurations(soap, &soap_tmp___ns9__GetAnalyticsConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetAnalyticsConfigurations(soap, &soap_tmp___ns9__GetAnalyticsConfigurations, "-ns9:GetAnalyticsConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetAnalyticsConfigurations(soap, &soap_tmp___ns9__GetAnalyticsConfigurations, "-ns9:GetAnalyticsConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetAnalyticsConfigurationsResponse)
		return soap_closesock(soap);
	ns9__GetAnalyticsConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetAnalyticsConfigurationsResponse->soap_get(soap, "ns9:GetAnalyticsConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetMetadataConfigurations(const char *endpoint, const char *soap_action, ns9__GetConfiguration *ns9__GetMetadataConfigurations, _ns9__GetMetadataConfigurationsResponse *ns9__GetMetadataConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetMetadataConfigurations soap_tmp___ns9__GetMetadataConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetMetadataConfigurations.ns9__GetMetadataConfigurations = ns9__GetMetadataConfigurations;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetMetadataConfigurations(soap, &soap_tmp___ns9__GetMetadataConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetMetadataConfigurations(soap, &soap_tmp___ns9__GetMetadataConfigurations, "-ns9:GetMetadataConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetMetadataConfigurations(soap, &soap_tmp___ns9__GetMetadataConfigurations, "-ns9:GetMetadataConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetMetadataConfigurationsResponse)
		return soap_closesock(soap);
	ns9__GetMetadataConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetMetadataConfigurationsResponse->soap_get(soap, "ns9:GetMetadataConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioOutputConfigurations(const char *endpoint, const char *soap_action, ns9__GetConfiguration *ns9__GetAudioOutputConfigurations, _ns9__GetAudioOutputConfigurationsResponse *ns9__GetAudioOutputConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetAudioOutputConfigurations soap_tmp___ns9__GetAudioOutputConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetAudioOutputConfigurations.ns9__GetAudioOutputConfigurations = ns9__GetAudioOutputConfigurations;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetAudioOutputConfigurations(soap, &soap_tmp___ns9__GetAudioOutputConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetAudioOutputConfigurations(soap, &soap_tmp___ns9__GetAudioOutputConfigurations, "-ns9:GetAudioOutputConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetAudioOutputConfigurations(soap, &soap_tmp___ns9__GetAudioOutputConfigurations, "-ns9:GetAudioOutputConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetAudioOutputConfigurationsResponse)
		return soap_closesock(soap);
	ns9__GetAudioOutputConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetAudioOutputConfigurationsResponse->soap_get(soap, "ns9:GetAudioOutputConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioDecoderConfigurations(const char *endpoint, const char *soap_action, ns9__GetConfiguration *ns9__GetAudioDecoderConfigurations, _ns9__GetAudioDecoderConfigurationsResponse *ns9__GetAudioDecoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetAudioDecoderConfigurations soap_tmp___ns9__GetAudioDecoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurations";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetAudioDecoderConfigurations.ns9__GetAudioDecoderConfigurations = ns9__GetAudioDecoderConfigurations;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetAudioDecoderConfigurations(soap, &soap_tmp___ns9__GetAudioDecoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetAudioDecoderConfigurations(soap, &soap_tmp___ns9__GetAudioDecoderConfigurations, "-ns9:GetAudioDecoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetAudioDecoderConfigurations(soap, &soap_tmp___ns9__GetAudioDecoderConfigurations, "-ns9:GetAudioDecoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetAudioDecoderConfigurationsResponse)
		return soap_closesock(soap);
	ns9__GetAudioDecoderConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetAudioDecoderConfigurationsResponse->soap_get(soap, "ns9:GetAudioDecoderConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetVideoSourceConfiguration(const char *endpoint, const char *soap_action, _ns9__SetVideoSourceConfiguration *ns9__SetVideoSourceConfiguration, ns9__SetConfigurationResponse *ns9__SetVideoSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns9__SetVideoSourceConfiguration soap_tmp___ns9__SetVideoSourceConfiguration;
	struct __ns9__SetVideoSourceConfigurationResponse *soap_tmp___ns9__SetVideoSourceConfigurationResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__SetVideoSourceConfiguration.ns9__SetVideoSourceConfiguration = ns9__SetVideoSourceConfiguration;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__SetVideoSourceConfiguration(soap, &soap_tmp___ns9__SetVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__SetVideoSourceConfiguration(soap, &soap_tmp___ns9__SetVideoSourceConfiguration, "-ns9:SetVideoSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__SetVideoSourceConfiguration(soap, &soap_tmp___ns9__SetVideoSourceConfiguration, "-ns9:SetVideoSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__SetVideoSourceConfigurationResponse)
		return soap_closesock(soap);
	ns9__SetVideoSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns9__SetVideoSourceConfigurationResponse = soap_get___ns9__SetVideoSourceConfigurationResponse(soap, NULL, "-ns9:SetVideoSourceConfigurationResponse", "ns9:SetConfigurationResponse");
	if (!soap_tmp___ns9__SetVideoSourceConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (ns9__SetVideoSourceConfigurationResponse && soap_tmp___ns9__SetVideoSourceConfigurationResponse->ns9__SetVideoSourceConfigurationResponse)
		*ns9__SetVideoSourceConfigurationResponse = *soap_tmp___ns9__SetVideoSourceConfigurationResponse->ns9__SetVideoSourceConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::SetVideoEncoderConfiguration(const char *endpoint, const char *soap_action, _ns9__SetVideoEncoderConfiguration *ns9__SetVideoEncoderConfiguration, ns9__SetConfigurationResponse *ns9__SetVideoEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns9__SetVideoEncoderConfiguration soap_tmp___ns9__SetVideoEncoderConfiguration;
	struct __ns9__SetVideoEncoderConfigurationResponse *soap_tmp___ns9__SetVideoEncoderConfigurationResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoEncoderConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__SetVideoEncoderConfiguration.ns9__SetVideoEncoderConfiguration = ns9__SetVideoEncoderConfiguration;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__SetVideoEncoderConfiguration(soap, &soap_tmp___ns9__SetVideoEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__SetVideoEncoderConfiguration(soap, &soap_tmp___ns9__SetVideoEncoderConfiguration, "-ns9:SetVideoEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__SetVideoEncoderConfiguration(soap, &soap_tmp___ns9__SetVideoEncoderConfiguration, "-ns9:SetVideoEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__SetVideoEncoderConfigurationResponse)
		return soap_closesock(soap);
	ns9__SetVideoEncoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns9__SetVideoEncoderConfigurationResponse = soap_get___ns9__SetVideoEncoderConfigurationResponse(soap, NULL, "-ns9:SetVideoEncoderConfigurationResponse", "ns9:SetConfigurationResponse");
	if (!soap_tmp___ns9__SetVideoEncoderConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (ns9__SetVideoEncoderConfigurationResponse && soap_tmp___ns9__SetVideoEncoderConfigurationResponse->ns9__SetVideoEncoderConfigurationResponse)
		*ns9__SetVideoEncoderConfigurationResponse = *soap_tmp___ns9__SetVideoEncoderConfigurationResponse->ns9__SetVideoEncoderConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::SetAudioSourceConfiguration(const char *endpoint, const char *soap_action, _ns9__SetAudioSourceConfiguration *ns9__SetAudioSourceConfiguration, ns9__SetConfigurationResponse *ns9__SetAudioSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns9__SetAudioSourceConfiguration soap_tmp___ns9__SetAudioSourceConfiguration;
	struct __ns9__SetAudioSourceConfigurationResponse *soap_tmp___ns9__SetAudioSourceConfigurationResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioSourceConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__SetAudioSourceConfiguration.ns9__SetAudioSourceConfiguration = ns9__SetAudioSourceConfiguration;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__SetAudioSourceConfiguration(soap, &soap_tmp___ns9__SetAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__SetAudioSourceConfiguration(soap, &soap_tmp___ns9__SetAudioSourceConfiguration, "-ns9:SetAudioSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__SetAudioSourceConfiguration(soap, &soap_tmp___ns9__SetAudioSourceConfiguration, "-ns9:SetAudioSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__SetAudioSourceConfigurationResponse)
		return soap_closesock(soap);
	ns9__SetAudioSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns9__SetAudioSourceConfigurationResponse = soap_get___ns9__SetAudioSourceConfigurationResponse(soap, NULL, "-ns9:SetAudioSourceConfigurationResponse", "ns9:SetConfigurationResponse");
	if (!soap_tmp___ns9__SetAudioSourceConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (ns9__SetAudioSourceConfigurationResponse && soap_tmp___ns9__SetAudioSourceConfigurationResponse->ns9__SetAudioSourceConfigurationResponse)
		*ns9__SetAudioSourceConfigurationResponse = *soap_tmp___ns9__SetAudioSourceConfigurationResponse->ns9__SetAudioSourceConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::SetAudioEncoderConfiguration(const char *endpoint, const char *soap_action, _ns9__SetAudioEncoderConfiguration *ns9__SetAudioEncoderConfiguration, ns9__SetConfigurationResponse *ns9__SetAudioEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns9__SetAudioEncoderConfiguration soap_tmp___ns9__SetAudioEncoderConfiguration;
	struct __ns9__SetAudioEncoderConfigurationResponse *soap_tmp___ns9__SetAudioEncoderConfigurationResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioEncoderConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__SetAudioEncoderConfiguration.ns9__SetAudioEncoderConfiguration = ns9__SetAudioEncoderConfiguration;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__SetAudioEncoderConfiguration(soap, &soap_tmp___ns9__SetAudioEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__SetAudioEncoderConfiguration(soap, &soap_tmp___ns9__SetAudioEncoderConfiguration, "-ns9:SetAudioEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__SetAudioEncoderConfiguration(soap, &soap_tmp___ns9__SetAudioEncoderConfiguration, "-ns9:SetAudioEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__SetAudioEncoderConfigurationResponse)
		return soap_closesock(soap);
	ns9__SetAudioEncoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns9__SetAudioEncoderConfigurationResponse = soap_get___ns9__SetAudioEncoderConfigurationResponse(soap, NULL, "-ns9:SetAudioEncoderConfigurationResponse", "ns9:SetConfigurationResponse");
	if (!soap_tmp___ns9__SetAudioEncoderConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (ns9__SetAudioEncoderConfigurationResponse && soap_tmp___ns9__SetAudioEncoderConfigurationResponse->ns9__SetAudioEncoderConfigurationResponse)
		*ns9__SetAudioEncoderConfigurationResponse = *soap_tmp___ns9__SetAudioEncoderConfigurationResponse->ns9__SetAudioEncoderConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::SetMetadataConfiguration(const char *endpoint, const char *soap_action, _ns9__SetMetadataConfiguration *ns9__SetMetadataConfiguration, ns9__SetConfigurationResponse *ns9__SetMetadataConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns9__SetMetadataConfiguration soap_tmp___ns9__SetMetadataConfiguration;
	struct __ns9__SetMetadataConfigurationResponse *soap_tmp___ns9__SetMetadataConfigurationResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetMetadataConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__SetMetadataConfiguration.ns9__SetMetadataConfiguration = ns9__SetMetadataConfiguration;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__SetMetadataConfiguration(soap, &soap_tmp___ns9__SetMetadataConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__SetMetadataConfiguration(soap, &soap_tmp___ns9__SetMetadataConfiguration, "-ns9:SetMetadataConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__SetMetadataConfiguration(soap, &soap_tmp___ns9__SetMetadataConfiguration, "-ns9:SetMetadataConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__SetMetadataConfigurationResponse)
		return soap_closesock(soap);
	ns9__SetMetadataConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns9__SetMetadataConfigurationResponse = soap_get___ns9__SetMetadataConfigurationResponse(soap, NULL, "-ns9:SetMetadataConfigurationResponse", "ns9:SetConfigurationResponse");
	if (!soap_tmp___ns9__SetMetadataConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (ns9__SetMetadataConfigurationResponse && soap_tmp___ns9__SetMetadataConfigurationResponse->ns9__SetMetadataConfigurationResponse)
		*ns9__SetMetadataConfigurationResponse = *soap_tmp___ns9__SetMetadataConfigurationResponse->ns9__SetMetadataConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::SetAudioOutputConfiguration(const char *endpoint, const char *soap_action, _ns9__SetAudioOutputConfiguration *ns9__SetAudioOutputConfiguration, ns9__SetConfigurationResponse *ns9__SetAudioOutputConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns9__SetAudioOutputConfiguration soap_tmp___ns9__SetAudioOutputConfiguration;
	struct __ns9__SetAudioOutputConfigurationResponse *soap_tmp___ns9__SetAudioOutputConfigurationResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioOutputConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__SetAudioOutputConfiguration.ns9__SetAudioOutputConfiguration = ns9__SetAudioOutputConfiguration;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__SetAudioOutputConfiguration(soap, &soap_tmp___ns9__SetAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__SetAudioOutputConfiguration(soap, &soap_tmp___ns9__SetAudioOutputConfiguration, "-ns9:SetAudioOutputConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__SetAudioOutputConfiguration(soap, &soap_tmp___ns9__SetAudioOutputConfiguration, "-ns9:SetAudioOutputConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__SetAudioOutputConfigurationResponse)
		return soap_closesock(soap);
	ns9__SetAudioOutputConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns9__SetAudioOutputConfigurationResponse = soap_get___ns9__SetAudioOutputConfigurationResponse(soap, NULL, "-ns9:SetAudioOutputConfigurationResponse", "ns9:SetConfigurationResponse");
	if (!soap_tmp___ns9__SetAudioOutputConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (ns9__SetAudioOutputConfigurationResponse && soap_tmp___ns9__SetAudioOutputConfigurationResponse->ns9__SetAudioOutputConfigurationResponse)
		*ns9__SetAudioOutputConfigurationResponse = *soap_tmp___ns9__SetAudioOutputConfigurationResponse->ns9__SetAudioOutputConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::SetAudioDecoderConfiguration(const char *endpoint, const char *soap_action, _ns9__SetAudioDecoderConfiguration *ns9__SetAudioDecoderConfiguration, ns9__SetConfigurationResponse *ns9__SetAudioDecoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __ns9__SetAudioDecoderConfiguration soap_tmp___ns9__SetAudioDecoderConfiguration;
	struct __ns9__SetAudioDecoderConfigurationResponse *soap_tmp___ns9__SetAudioDecoderConfigurationResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioDecoderConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__SetAudioDecoderConfiguration.ns9__SetAudioDecoderConfiguration = ns9__SetAudioDecoderConfiguration;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__SetAudioDecoderConfiguration(soap, &soap_tmp___ns9__SetAudioDecoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__SetAudioDecoderConfiguration(soap, &soap_tmp___ns9__SetAudioDecoderConfiguration, "-ns9:SetAudioDecoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__SetAudioDecoderConfiguration(soap, &soap_tmp___ns9__SetAudioDecoderConfiguration, "-ns9:SetAudioDecoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__SetAudioDecoderConfigurationResponse)
		return soap_closesock(soap);
	ns9__SetAudioDecoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns9__SetAudioDecoderConfigurationResponse = soap_get___ns9__SetAudioDecoderConfigurationResponse(soap, NULL, "-ns9:SetAudioDecoderConfigurationResponse", "ns9:SetConfigurationResponse");
	if (!soap_tmp___ns9__SetAudioDecoderConfigurationResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (ns9__SetAudioDecoderConfigurationResponse && soap_tmp___ns9__SetAudioDecoderConfigurationResponse->ns9__SetAudioDecoderConfigurationResponse)
		*ns9__SetAudioDecoderConfigurationResponse = *soap_tmp___ns9__SetAudioDecoderConfigurationResponse->ns9__SetAudioDecoderConfigurationResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoSourceConfigurationOptions(const char *endpoint, const char *soap_action, ns9__GetConfiguration *ns9__GetVideoSourceConfigurationOptions, _ns9__GetVideoSourceConfigurationOptionsResponse *ns9__GetVideoSourceConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetVideoSourceConfigurationOptions soap_tmp___ns9__GetVideoSourceConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurationOptions/";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetVideoSourceConfigurationOptions.ns9__GetVideoSourceConfigurationOptions = ns9__GetVideoSourceConfigurationOptions;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetVideoSourceConfigurationOptions(soap, &soap_tmp___ns9__GetVideoSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetVideoSourceConfigurationOptions(soap, &soap_tmp___ns9__GetVideoSourceConfigurationOptions, "-ns9:GetVideoSourceConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetVideoSourceConfigurationOptions(soap, &soap_tmp___ns9__GetVideoSourceConfigurationOptions, "-ns9:GetVideoSourceConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetVideoSourceConfigurationOptionsResponse)
		return soap_closesock(soap);
	ns9__GetVideoSourceConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetVideoSourceConfigurationOptionsResponse->soap_get(soap, "ns9:GetVideoSourceConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoEncoderConfigurationOptions(const char *endpoint, const char *soap_action, ns9__GetConfiguration *ns9__GetVideoEncoderConfigurationOptions, _ns9__GetVideoEncoderConfigurationOptionsResponse *ns9__GetVideoEncoderConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetVideoEncoderConfigurationOptions soap_tmp___ns9__GetVideoEncoderConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationOptions";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetVideoEncoderConfigurationOptions.ns9__GetVideoEncoderConfigurationOptions = ns9__GetVideoEncoderConfigurationOptions;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___ns9__GetVideoEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___ns9__GetVideoEncoderConfigurationOptions, "-ns9:GetVideoEncoderConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___ns9__GetVideoEncoderConfigurationOptions, "-ns9:GetVideoEncoderConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetVideoEncoderConfigurationOptionsResponse)
		return soap_closesock(soap);
	ns9__GetVideoEncoderConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetVideoEncoderConfigurationOptionsResponse->soap_get(soap, "ns9:GetVideoEncoderConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioSourceConfigurationOptions(const char *endpoint, const char *soap_action, ns9__GetConfiguration *ns9__GetAudioSourceConfigurationOptions, _ns9__GetAudioSourceConfigurationOptionsResponse *ns9__GetAudioSourceConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetAudioSourceConfigurationOptions soap_tmp___ns9__GetAudioSourceConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurationOptions";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetAudioSourceConfigurationOptions.ns9__GetAudioSourceConfigurationOptions = ns9__GetAudioSourceConfigurationOptions;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetAudioSourceConfigurationOptions(soap, &soap_tmp___ns9__GetAudioSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetAudioSourceConfigurationOptions(soap, &soap_tmp___ns9__GetAudioSourceConfigurationOptions, "-ns9:GetAudioSourceConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetAudioSourceConfigurationOptions(soap, &soap_tmp___ns9__GetAudioSourceConfigurationOptions, "-ns9:GetAudioSourceConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetAudioSourceConfigurationOptionsResponse)
		return soap_closesock(soap);
	ns9__GetAudioSourceConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetAudioSourceConfigurationOptionsResponse->soap_get(soap, "ns9:GetAudioSourceConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioEncoderConfigurationOptions(const char *endpoint, const char *soap_action, ns9__GetConfiguration *ns9__GetAudioEncoderConfigurationOptions, _ns9__GetAudioEncoderConfigurationOptionsResponse *ns9__GetAudioEncoderConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetAudioEncoderConfigurationOptions soap_tmp___ns9__GetAudioEncoderConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationOptions";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetAudioEncoderConfigurationOptions.ns9__GetAudioEncoderConfigurationOptions = ns9__GetAudioEncoderConfigurationOptions;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___ns9__GetAudioEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___ns9__GetAudioEncoderConfigurationOptions, "-ns9:GetAudioEncoderConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___ns9__GetAudioEncoderConfigurationOptions, "-ns9:GetAudioEncoderConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetAudioEncoderConfigurationOptionsResponse)
		return soap_closesock(soap);
	ns9__GetAudioEncoderConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetAudioEncoderConfigurationOptionsResponse->soap_get(soap, "ns9:GetAudioEncoderConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetMetadataConfigurationOptions(const char *endpoint, const char *soap_action, ns9__GetConfiguration *ns9__GetMetadataConfigurationOptions, _ns9__GetMetadataConfigurationOptionsResponse *ns9__GetMetadataConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetMetadataConfigurationOptions soap_tmp___ns9__GetMetadataConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationOptions";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetMetadataConfigurationOptions.ns9__GetMetadataConfigurationOptions = ns9__GetMetadataConfigurationOptions;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetMetadataConfigurationOptions(soap, &soap_tmp___ns9__GetMetadataConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetMetadataConfigurationOptions(soap, &soap_tmp___ns9__GetMetadataConfigurationOptions, "-ns9:GetMetadataConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetMetadataConfigurationOptions(soap, &soap_tmp___ns9__GetMetadataConfigurationOptions, "-ns9:GetMetadataConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetMetadataConfigurationOptionsResponse)
		return soap_closesock(soap);
	ns9__GetMetadataConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetMetadataConfigurationOptionsResponse->soap_get(soap, "ns9:GetMetadataConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioOutputConfigurationOptions(const char *endpoint, const char *soap_action, ns9__GetConfiguration *ns9__GetAudioOutputConfigurationOptions, _ns9__GetAudioOutputConfigurationOptionsResponse *ns9__GetAudioOutputConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetAudioOutputConfigurationOptions soap_tmp___ns9__GetAudioOutputConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationOptions";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetAudioOutputConfigurationOptions.ns9__GetAudioOutputConfigurationOptions = ns9__GetAudioOutputConfigurationOptions;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetAudioOutputConfigurationOptions(soap, &soap_tmp___ns9__GetAudioOutputConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetAudioOutputConfigurationOptions(soap, &soap_tmp___ns9__GetAudioOutputConfigurationOptions, "-ns9:GetAudioOutputConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetAudioOutputConfigurationOptions(soap, &soap_tmp___ns9__GetAudioOutputConfigurationOptions, "-ns9:GetAudioOutputConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetAudioOutputConfigurationOptionsResponse)
		return soap_closesock(soap);
	ns9__GetAudioOutputConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetAudioOutputConfigurationOptionsResponse->soap_get(soap, "ns9:GetAudioOutputConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioDecoderConfigurationOptions(const char *endpoint, const char *soap_action, ns9__GetConfiguration *ns9__GetAudioDecoderConfigurationOptions, _ns9__GetAudioDecoderConfigurationOptionsResponse *ns9__GetAudioDecoderConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetAudioDecoderConfigurationOptions soap_tmp___ns9__GetAudioDecoderConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationOptions";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetAudioDecoderConfigurationOptions.ns9__GetAudioDecoderConfigurationOptions = ns9__GetAudioDecoderConfigurationOptions;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___ns9__GetAudioDecoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___ns9__GetAudioDecoderConfigurationOptions, "-ns9:GetAudioDecoderConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___ns9__GetAudioDecoderConfigurationOptions, "-ns9:GetAudioDecoderConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetAudioDecoderConfigurationOptionsResponse)
		return soap_closesock(soap);
	ns9__GetAudioDecoderConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetAudioDecoderConfigurationOptionsResponse->soap_get(soap, "ns9:GetAudioDecoderConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoEncoderInstances(const char *endpoint, const char *soap_action, _ns9__GetVideoEncoderInstances *ns9__GetVideoEncoderInstances, _ns9__GetVideoEncoderInstancesResponse *ns9__GetVideoEncoderInstancesResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetVideoEncoderInstances soap_tmp___ns9__GetVideoEncoderInstances;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderInstances";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetVideoEncoderInstances.ns9__GetVideoEncoderInstances = ns9__GetVideoEncoderInstances;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetVideoEncoderInstances(soap, &soap_tmp___ns9__GetVideoEncoderInstances);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetVideoEncoderInstances(soap, &soap_tmp___ns9__GetVideoEncoderInstances, "-ns9:GetVideoEncoderInstances", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetVideoEncoderInstances(soap, &soap_tmp___ns9__GetVideoEncoderInstances, "-ns9:GetVideoEncoderInstances", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetVideoEncoderInstancesResponse)
		return soap_closesock(soap);
	ns9__GetVideoEncoderInstancesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetVideoEncoderInstancesResponse->soap_get(soap, "ns9:GetVideoEncoderInstancesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetStreamUri(const char *endpoint, const char *soap_action, _ns9__GetStreamUri *ns9__GetStreamUri, _ns9__GetStreamUriResponse *ns9__GetStreamUriResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetStreamUri soap_tmp___ns9__GetStreamUri;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetStreamUri";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetStreamUri.ns9__GetStreamUri = ns9__GetStreamUri;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetStreamUri(soap, &soap_tmp___ns9__GetStreamUri);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetStreamUri(soap, &soap_tmp___ns9__GetStreamUri, "-ns9:GetStreamUri", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetStreamUri(soap, &soap_tmp___ns9__GetStreamUri, "-ns9:GetStreamUri", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetStreamUriResponse)
		return soap_closesock(soap);
	ns9__GetStreamUriResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetStreamUriResponse->soap_get(soap, "ns9:GetStreamUriResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::StartMulticastStreaming(const char *endpoint, const char *soap_action, ns9__StartStopMulticastStreaming *ns9__StartMulticastStreaming, ns9__SetConfigurationResponse *ns9__StartMulticastStreamingResponse)
{	struct soap *soap = this->soap;
	struct __ns9__StartMulticastStreaming soap_tmp___ns9__StartMulticastStreaming;
	struct __ns9__StartMulticastStreamingResponse *soap_tmp___ns9__StartMulticastStreamingResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/StartMulticastStreaming";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__StartMulticastStreaming.ns9__StartMulticastStreaming = ns9__StartMulticastStreaming;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__StartMulticastStreaming(soap, &soap_tmp___ns9__StartMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__StartMulticastStreaming(soap, &soap_tmp___ns9__StartMulticastStreaming, "-ns9:StartMulticastStreaming", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__StartMulticastStreaming(soap, &soap_tmp___ns9__StartMulticastStreaming, "-ns9:StartMulticastStreaming", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__StartMulticastStreamingResponse)
		return soap_closesock(soap);
	ns9__StartMulticastStreamingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns9__StartMulticastStreamingResponse = soap_get___ns9__StartMulticastStreamingResponse(soap, NULL, "-ns9:StartMulticastStreamingResponse", "ns9:SetConfigurationResponse");
	if (!soap_tmp___ns9__StartMulticastStreamingResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (ns9__StartMulticastStreamingResponse && soap_tmp___ns9__StartMulticastStreamingResponse->ns9__StartMulticastStreamingResponse)
		*ns9__StartMulticastStreamingResponse = *soap_tmp___ns9__StartMulticastStreamingResponse->ns9__StartMulticastStreamingResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::StopMulticastStreaming(const char *endpoint, const char *soap_action, ns9__StartStopMulticastStreaming *ns9__StopMulticastStreaming, ns9__SetConfigurationResponse *ns9__StopMulticastStreamingResponse)
{	struct soap *soap = this->soap;
	struct __ns9__StopMulticastStreaming soap_tmp___ns9__StopMulticastStreaming;
	struct __ns9__StopMulticastStreamingResponse *soap_tmp___ns9__StopMulticastStreamingResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/StopMulticastStreaming";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__StopMulticastStreaming.ns9__StopMulticastStreaming = ns9__StopMulticastStreaming;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__StopMulticastStreaming(soap, &soap_tmp___ns9__StopMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__StopMulticastStreaming(soap, &soap_tmp___ns9__StopMulticastStreaming, "-ns9:StopMulticastStreaming", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__StopMulticastStreaming(soap, &soap_tmp___ns9__StopMulticastStreaming, "-ns9:StopMulticastStreaming", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__StopMulticastStreamingResponse)
		return soap_closesock(soap);
	ns9__StopMulticastStreamingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns9__StopMulticastStreamingResponse = soap_get___ns9__StopMulticastStreamingResponse(soap, NULL, "-ns9:StopMulticastStreamingResponse", "ns9:SetConfigurationResponse");
	if (!soap_tmp___ns9__StopMulticastStreamingResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (ns9__StopMulticastStreamingResponse && soap_tmp___ns9__StopMulticastStreamingResponse->ns9__StopMulticastStreamingResponse)
		*ns9__StopMulticastStreamingResponse = *soap_tmp___ns9__StopMulticastStreamingResponse->ns9__StopMulticastStreamingResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::SetSynchronizationPoint(const char *endpoint, const char *soap_action, _ns9__SetSynchronizationPoint *ns9__SetSynchronizationPoint, _ns9__SetSynchronizationPointResponse *ns9__SetSynchronizationPointResponse)
{	struct soap *soap = this->soap;
	struct __ns9__SetSynchronizationPoint soap_tmp___ns9__SetSynchronizationPoint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetSynchronizationPoint";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__SetSynchronizationPoint.ns9__SetSynchronizationPoint = ns9__SetSynchronizationPoint;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__SetSynchronizationPoint(soap, &soap_tmp___ns9__SetSynchronizationPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__SetSynchronizationPoint(soap, &soap_tmp___ns9__SetSynchronizationPoint, "-ns9:SetSynchronizationPoint", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__SetSynchronizationPoint(soap, &soap_tmp___ns9__SetSynchronizationPoint, "-ns9:SetSynchronizationPoint", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__SetSynchronizationPointResponse)
		return soap_closesock(soap);
	ns9__SetSynchronizationPointResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__SetSynchronizationPointResponse->soap_get(soap, "ns9:SetSynchronizationPointResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetSnapshotUri(const char *endpoint, const char *soap_action, _ns9__GetSnapshotUri *ns9__GetSnapshotUri, _ns9__GetSnapshotUriResponse *ns9__GetSnapshotUriResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetSnapshotUri soap_tmp___ns9__GetSnapshotUri;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetSnapshotUri";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetSnapshotUri.ns9__GetSnapshotUri = ns9__GetSnapshotUri;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetSnapshotUri(soap, &soap_tmp___ns9__GetSnapshotUri);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetSnapshotUri(soap, &soap_tmp___ns9__GetSnapshotUri, "-ns9:GetSnapshotUri", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetSnapshotUri(soap, &soap_tmp___ns9__GetSnapshotUri, "-ns9:GetSnapshotUri", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetSnapshotUriResponse)
		return soap_closesock(soap);
	ns9__GetSnapshotUriResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetSnapshotUriResponse->soap_get(soap, "ns9:GetSnapshotUriResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoSourceModes(const char *endpoint, const char *soap_action, _ns9__GetVideoSourceModes *ns9__GetVideoSourceModes, _ns9__GetVideoSourceModesResponse *ns9__GetVideoSourceModesResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetVideoSourceModes soap_tmp___ns9__GetVideoSourceModes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceModes";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetVideoSourceModes.ns9__GetVideoSourceModes = ns9__GetVideoSourceModes;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetVideoSourceModes(soap, &soap_tmp___ns9__GetVideoSourceModes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetVideoSourceModes(soap, &soap_tmp___ns9__GetVideoSourceModes, "-ns9:GetVideoSourceModes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetVideoSourceModes(soap, &soap_tmp___ns9__GetVideoSourceModes, "-ns9:GetVideoSourceModes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetVideoSourceModesResponse)
		return soap_closesock(soap);
	ns9__GetVideoSourceModesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetVideoSourceModesResponse->soap_get(soap, "ns9:GetVideoSourceModesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetVideoSourceMode(const char *endpoint, const char *soap_action, _ns9__SetVideoSourceMode *ns9__SetVideoSourceMode, _ns9__SetVideoSourceModeResponse *ns9__SetVideoSourceModeResponse)
{	struct soap *soap = this->soap;
	struct __ns9__SetVideoSourceMode soap_tmp___ns9__SetVideoSourceMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceMode";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__SetVideoSourceMode.ns9__SetVideoSourceMode = ns9__SetVideoSourceMode;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__SetVideoSourceMode(soap, &soap_tmp___ns9__SetVideoSourceMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__SetVideoSourceMode(soap, &soap_tmp___ns9__SetVideoSourceMode, "-ns9:SetVideoSourceMode", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__SetVideoSourceMode(soap, &soap_tmp___ns9__SetVideoSourceMode, "-ns9:SetVideoSourceMode", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__SetVideoSourceModeResponse)
		return soap_closesock(soap);
	ns9__SetVideoSourceModeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__SetVideoSourceModeResponse->soap_get(soap, "ns9:SetVideoSourceModeResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetOSDs(const char *endpoint, const char *soap_action, _ns9__GetOSDs *ns9__GetOSDs, _ns9__GetOSDsResponse *ns9__GetOSDsResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetOSDs soap_tmp___ns9__GetOSDs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetOSDs";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetOSDs.ns9__GetOSDs = ns9__GetOSDs;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetOSDs(soap, &soap_tmp___ns9__GetOSDs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetOSDs(soap, &soap_tmp___ns9__GetOSDs, "-ns9:GetOSDs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetOSDs(soap, &soap_tmp___ns9__GetOSDs, "-ns9:GetOSDs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetOSDsResponse)
		return soap_closesock(soap);
	ns9__GetOSDsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetOSDsResponse->soap_get(soap, "ns9:GetOSDsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetOSDOptions(const char *endpoint, const char *soap_action, _ns9__GetOSDOptions *ns9__GetOSDOptions, _ns9__GetOSDOptionsResponse *ns9__GetOSDOptionsResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetOSDOptions soap_tmp___ns9__GetOSDOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetOSDOptions";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetOSDOptions.ns9__GetOSDOptions = ns9__GetOSDOptions;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetOSDOptions(soap, &soap_tmp___ns9__GetOSDOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetOSDOptions(soap, &soap_tmp___ns9__GetOSDOptions, "-ns9:GetOSDOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetOSDOptions(soap, &soap_tmp___ns9__GetOSDOptions, "-ns9:GetOSDOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetOSDOptionsResponse)
		return soap_closesock(soap);
	ns9__GetOSDOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetOSDOptionsResponse->soap_get(soap, "ns9:GetOSDOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetOSD(const char *endpoint, const char *soap_action, _ns9__SetOSD *ns9__SetOSD, ns9__SetConfigurationResponse *ns9__SetOSDResponse)
{	struct soap *soap = this->soap;
	struct __ns9__SetOSD soap_tmp___ns9__SetOSD;
	struct __ns9__SetOSDResponse *soap_tmp___ns9__SetOSDResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetOSD";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__SetOSD.ns9__SetOSD = ns9__SetOSD;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__SetOSD(soap, &soap_tmp___ns9__SetOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__SetOSD(soap, &soap_tmp___ns9__SetOSD, "-ns9:SetOSD", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__SetOSD(soap, &soap_tmp___ns9__SetOSD, "-ns9:SetOSD", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__SetOSDResponse)
		return soap_closesock(soap);
	ns9__SetOSDResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns9__SetOSDResponse = soap_get___ns9__SetOSDResponse(soap, NULL, "-ns9:SetOSDResponse", "ns9:SetConfigurationResponse");
	if (!soap_tmp___ns9__SetOSDResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (ns9__SetOSDResponse && soap_tmp___ns9__SetOSDResponse->ns9__SetOSDResponse)
		*ns9__SetOSDResponse = *soap_tmp___ns9__SetOSDResponse->ns9__SetOSDResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::CreateOSD(const char *endpoint, const char *soap_action, _ns9__CreateOSD *ns9__CreateOSD, _ns9__CreateOSDResponse *ns9__CreateOSDResponse)
{	struct soap *soap = this->soap;
	struct __ns9__CreateOSD soap_tmp___ns9__CreateOSD;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateOSD";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__CreateOSD.ns9__CreateOSD = ns9__CreateOSD;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__CreateOSD(soap, &soap_tmp___ns9__CreateOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__CreateOSD(soap, &soap_tmp___ns9__CreateOSD, "-ns9:CreateOSD", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__CreateOSD(soap, &soap_tmp___ns9__CreateOSD, "-ns9:CreateOSD", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__CreateOSDResponse)
		return soap_closesock(soap);
	ns9__CreateOSDResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__CreateOSDResponse->soap_get(soap, "ns9:CreateOSDResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::DeleteOSD(const char *endpoint, const char *soap_action, _ns9__DeleteOSD *ns9__DeleteOSD, ns9__SetConfigurationResponse *ns9__DeleteOSDResponse)
{	struct soap *soap = this->soap;
	struct __ns9__DeleteOSD soap_tmp___ns9__DeleteOSD;
	struct __ns9__DeleteOSDResponse *soap_tmp___ns9__DeleteOSDResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteOSD";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__DeleteOSD.ns9__DeleteOSD = ns9__DeleteOSD;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__DeleteOSD(soap, &soap_tmp___ns9__DeleteOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__DeleteOSD(soap, &soap_tmp___ns9__DeleteOSD, "-ns9:DeleteOSD", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__DeleteOSD(soap, &soap_tmp___ns9__DeleteOSD, "-ns9:DeleteOSD", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__DeleteOSDResponse)
		return soap_closesock(soap);
	ns9__DeleteOSDResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns9__DeleteOSDResponse = soap_get___ns9__DeleteOSDResponse(soap, NULL, "-ns9:DeleteOSDResponse", "ns9:SetConfigurationResponse");
	if (!soap_tmp___ns9__DeleteOSDResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (ns9__DeleteOSDResponse && soap_tmp___ns9__DeleteOSDResponse->ns9__DeleteOSDResponse)
		*ns9__DeleteOSDResponse = *soap_tmp___ns9__DeleteOSDResponse->ns9__DeleteOSDResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::GetMasks(const char *endpoint, const char *soap_action, _ns9__GetMasks *ns9__GetMasks, _ns9__GetMasksResponse *ns9__GetMasksResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetMasks soap_tmp___ns9__GetMasks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMasks";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetMasks.ns9__GetMasks = ns9__GetMasks;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetMasks(soap, &soap_tmp___ns9__GetMasks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetMasks(soap, &soap_tmp___ns9__GetMasks, "-ns9:GetMasks", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetMasks(soap, &soap_tmp___ns9__GetMasks, "-ns9:GetMasks", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetMasksResponse)
		return soap_closesock(soap);
	ns9__GetMasksResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetMasksResponse->soap_get(soap, "ns9:GetMasksResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetMaskOptions(const char *endpoint, const char *soap_action, _ns9__GetMaskOptions *ns9__GetMaskOptions, _ns9__GetMaskOptionsResponse *ns9__GetMaskOptionsResponse)
{	struct soap *soap = this->soap;
	struct __ns9__GetMaskOptions soap_tmp___ns9__GetMaskOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMaskOptions";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__GetMaskOptions.ns9__GetMaskOptions = ns9__GetMaskOptions;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetMaskOptions(soap, &soap_tmp___ns9__GetMaskOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetMaskOptions(soap, &soap_tmp___ns9__GetMaskOptions, "-ns9:GetMaskOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetMaskOptions(soap, &soap_tmp___ns9__GetMaskOptions, "-ns9:GetMaskOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__GetMaskOptionsResponse)
		return soap_closesock(soap);
	ns9__GetMaskOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetMaskOptionsResponse->soap_get(soap, "ns9:GetMaskOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetMask(const char *endpoint, const char *soap_action, _ns9__SetMask *ns9__SetMask, ns9__SetConfigurationResponse *ns9__SetMaskResponse)
{	struct soap *soap = this->soap;
	struct __ns9__SetMask soap_tmp___ns9__SetMask;
	struct __ns9__SetMaskResponse *soap_tmp___ns9__SetMaskResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetMask";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__SetMask.ns9__SetMask = ns9__SetMask;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__SetMask(soap, &soap_tmp___ns9__SetMask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__SetMask(soap, &soap_tmp___ns9__SetMask, "-ns9:SetMask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__SetMask(soap, &soap_tmp___ns9__SetMask, "-ns9:SetMask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__SetMaskResponse)
		return soap_closesock(soap);
	ns9__SetMaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns9__SetMaskResponse = soap_get___ns9__SetMaskResponse(soap, NULL, "-ns9:SetMaskResponse", "ns9:SetConfigurationResponse");
	if (!soap_tmp___ns9__SetMaskResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (ns9__SetMaskResponse && soap_tmp___ns9__SetMaskResponse->ns9__SetMaskResponse)
		*ns9__SetMaskResponse = *soap_tmp___ns9__SetMaskResponse->ns9__SetMaskResponse;
	return soap_closesock(soap);
}

int Media2BindingProxy::CreateMask(const char *endpoint, const char *soap_action, _ns9__CreateMask *ns9__CreateMask, _ns9__CreateMaskResponse *ns9__CreateMaskResponse)
{	struct soap *soap = this->soap;
	struct __ns9__CreateMask soap_tmp___ns9__CreateMask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateMask";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__CreateMask.ns9__CreateMask = ns9__CreateMask;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__CreateMask(soap, &soap_tmp___ns9__CreateMask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__CreateMask(soap, &soap_tmp___ns9__CreateMask, "-ns9:CreateMask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__CreateMask(soap, &soap_tmp___ns9__CreateMask, "-ns9:CreateMask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__CreateMaskResponse)
		return soap_closesock(soap);
	ns9__CreateMaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__CreateMaskResponse->soap_get(soap, "ns9:CreateMaskResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::DeleteMask(const char *endpoint, const char *soap_action, _ns9__DeleteMask *ns9__DeleteMask, ns9__SetConfigurationResponse *ns9__DeleteMaskResponse)
{	struct soap *soap = this->soap;
	struct __ns9__DeleteMask soap_tmp___ns9__DeleteMask;
	struct __ns9__DeleteMaskResponse *soap_tmp___ns9__DeleteMaskResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteMask";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns9__DeleteMask.ns9__DeleteMask = ns9__DeleteMask;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns9__DeleteMask(soap, &soap_tmp___ns9__DeleteMask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__DeleteMask(soap, &soap_tmp___ns9__DeleteMask, "-ns9:DeleteMask", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__DeleteMask(soap, &soap_tmp___ns9__DeleteMask, "-ns9:DeleteMask", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns9__DeleteMaskResponse)
		return soap_closesock(soap);
	ns9__DeleteMaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns9__DeleteMaskResponse = soap_get___ns9__DeleteMaskResponse(soap, NULL, "-ns9:DeleteMaskResponse", "ns9:SetConfigurationResponse");
	if (!soap_tmp___ns9__DeleteMaskResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (ns9__DeleteMaskResponse && soap_tmp___ns9__DeleteMaskResponse->ns9__DeleteMaskResponse)
		*ns9__DeleteMaskResponse = *soap_tmp___ns9__DeleteMaskResponse->ns9__DeleteMaskResponse;
	return soap_closesock(soap);
}
/* End of client proxy code */
