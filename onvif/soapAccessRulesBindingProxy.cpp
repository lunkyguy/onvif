/* soapAccessRulesBindingProxy.cpp
   Generated by gSOAP 2.8.17r from onvif.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapAccessRulesBindingProxy.h"

AccessRulesBindingProxy::AccessRulesBindingProxy()
{	this->soap = soap_new();
	this->own = true;
	AccessRulesBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

AccessRulesBindingProxy::AccessRulesBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->own = false;
	AccessRulesBindingProxy_init(_soap->imode, _soap->omode);
}

AccessRulesBindingProxy::AccessRulesBindingProxy(const char *url)
{	this->soap = soap_new();
	this->own = true;
	AccessRulesBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

AccessRulesBindingProxy::AccessRulesBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	AccessRulesBindingProxy_init(iomode, iomode);
}

AccessRulesBindingProxy::AccessRulesBindingProxy(const char *url, soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	AccessRulesBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

AccessRulesBindingProxy::AccessRulesBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->own = true;
	AccessRulesBindingProxy_init(imode, omode);
}

AccessRulesBindingProxy::~AccessRulesBindingProxy()
{	if (this->own)
		soap_free(this->soap);
}

void AccessRulesBindingProxy::AccessRulesBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
	{"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
	{"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
	{"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
	{"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
	{"wsc", "http://schemas.xmlsoap.org/ws/2005/02/sc", NULL, NULL},
	{"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
	{"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
	{"ns2", "http://www.onvif.org/ver10/pacs", NULL, NULL},
	{"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
	{"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
	{"name", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
	{"name10", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
	{"name11", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
	{"name12", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
	{"name13", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
	{"name14", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
	{"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"name2", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
	{"name3", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
	{"name4", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
	{"ns5", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
	{"name5", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
	{"name6", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
	{"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
	{"name7", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
	{"name8", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
	{"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
	{"name9", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
	{"ns1", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
	{"ns10", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
	{"ns11", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
	{"ns12", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
	{"ns3", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
	{"ns4", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
	{"ns6", "http://www.onvif.org/ver10/authenticationbehavior/wsdl", NULL, NULL},
	{"ns7", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
	{"ns8", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
	{"ns9", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
	{"tad", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
	{"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
	{"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
	{"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
	{"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
	{"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
	{"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
	{"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
	{"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
	{"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
	{"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void AccessRulesBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void AccessRulesBindingProxy::reset()
{	destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	AccessRulesBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void AccessRulesBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void AccessRulesBindingProxy::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsse__Security = wsse__Security;
}

const SOAP_ENV__Header *AccessRulesBindingProxy::soap_header()
{	return this->soap->header;
}

const SOAP_ENV__Fault *AccessRulesBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *AccessRulesBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *AccessRulesBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int AccessRulesBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int AccessRulesBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void AccessRulesBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void AccessRulesBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *AccessRulesBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int AccessRulesBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _ns3__GetServiceCapabilities *ns3__GetServiceCapabilities, _ns3__GetServiceCapabilitiesResponse *ns3__GetServiceCapabilitiesResponse)
{	struct soap *soap = this->soap;
	struct __ns3__GetServiceCapabilities soap_tmp___ns3__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/GetServiceCapabilities";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns3__GetServiceCapabilities.ns3__GetServiceCapabilities = ns3__GetServiceCapabilities;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns3__GetServiceCapabilities(soap, &soap_tmp___ns3__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetServiceCapabilities(soap, &soap_tmp___ns3__GetServiceCapabilities, "-ns3:GetServiceCapabilities", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetServiceCapabilities(soap, &soap_tmp___ns3__GetServiceCapabilities, "-ns3:GetServiceCapabilities", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns3__GetServiceCapabilitiesResponse)
		return soap_closesock(soap);
	ns3__GetServiceCapabilitiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__GetServiceCapabilitiesResponse->soap_get(soap, "ns3:GetServiceCapabilitiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessRulesBindingProxy::GetAccessProfileInfo(const char *endpoint, const char *soap_action, _ns3__GetAccessProfileInfo *ns3__GetAccessProfileInfo, _ns3__GetAccessProfileInfoResponse *ns3__GetAccessProfileInfoResponse)
{	struct soap *soap = this->soap;
	struct __ns3__GetAccessProfileInfo soap_tmp___ns3__GetAccessProfileInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns3__GetAccessProfileInfo.ns3__GetAccessProfileInfo = ns3__GetAccessProfileInfo;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns3__GetAccessProfileInfo(soap, &soap_tmp___ns3__GetAccessProfileInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetAccessProfileInfo(soap, &soap_tmp___ns3__GetAccessProfileInfo, "-ns3:GetAccessProfileInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetAccessProfileInfo(soap, &soap_tmp___ns3__GetAccessProfileInfo, "-ns3:GetAccessProfileInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns3__GetAccessProfileInfoResponse)
		return soap_closesock(soap);
	ns3__GetAccessProfileInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__GetAccessProfileInfoResponse->soap_get(soap, "ns3:GetAccessProfileInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessRulesBindingProxy::GetAccessProfileInfoList(const char *endpoint, const char *soap_action, _ns3__GetAccessProfileInfoList *ns3__GetAccessProfileInfoList, _ns3__GetAccessProfileInfoListResponse *ns3__GetAccessProfileInfoListResponse)
{	struct soap *soap = this->soap;
	struct __ns3__GetAccessProfileInfoList soap_tmp___ns3__GetAccessProfileInfoList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileInfoList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns3__GetAccessProfileInfoList.ns3__GetAccessProfileInfoList = ns3__GetAccessProfileInfoList;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns3__GetAccessProfileInfoList(soap, &soap_tmp___ns3__GetAccessProfileInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetAccessProfileInfoList(soap, &soap_tmp___ns3__GetAccessProfileInfoList, "-ns3:GetAccessProfileInfoList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetAccessProfileInfoList(soap, &soap_tmp___ns3__GetAccessProfileInfoList, "-ns3:GetAccessProfileInfoList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns3__GetAccessProfileInfoListResponse)
		return soap_closesock(soap);
	ns3__GetAccessProfileInfoListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__GetAccessProfileInfoListResponse->soap_get(soap, "ns3:GetAccessProfileInfoListResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessRulesBindingProxy::GetAccessProfiles(const char *endpoint, const char *soap_action, _ns3__GetAccessProfiles *ns3__GetAccessProfiles, _ns3__GetAccessProfilesResponse *ns3__GetAccessProfilesResponse)
{	struct soap *soap = this->soap;
	struct __ns3__GetAccessProfiles soap_tmp___ns3__GetAccessProfiles;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfiles";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns3__GetAccessProfiles.ns3__GetAccessProfiles = ns3__GetAccessProfiles;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns3__GetAccessProfiles(soap, &soap_tmp___ns3__GetAccessProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetAccessProfiles(soap, &soap_tmp___ns3__GetAccessProfiles, "-ns3:GetAccessProfiles", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetAccessProfiles(soap, &soap_tmp___ns3__GetAccessProfiles, "-ns3:GetAccessProfiles", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns3__GetAccessProfilesResponse)
		return soap_closesock(soap);
	ns3__GetAccessProfilesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__GetAccessProfilesResponse->soap_get(soap, "ns3:GetAccessProfilesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessRulesBindingProxy::GetAccessProfileList(const char *endpoint, const char *soap_action, _ns3__GetAccessProfileList *ns3__GetAccessProfileList, _ns3__GetAccessProfileListResponse *ns3__GetAccessProfileListResponse)
{	struct soap *soap = this->soap;
	struct __ns3__GetAccessProfileList soap_tmp___ns3__GetAccessProfileList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns3__GetAccessProfileList.ns3__GetAccessProfileList = ns3__GetAccessProfileList;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns3__GetAccessProfileList(soap, &soap_tmp___ns3__GetAccessProfileList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetAccessProfileList(soap, &soap_tmp___ns3__GetAccessProfileList, "-ns3:GetAccessProfileList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetAccessProfileList(soap, &soap_tmp___ns3__GetAccessProfileList, "-ns3:GetAccessProfileList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns3__GetAccessProfileListResponse)
		return soap_closesock(soap);
	ns3__GetAccessProfileListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__GetAccessProfileListResponse->soap_get(soap, "ns3:GetAccessProfileListResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessRulesBindingProxy::CreateAccessProfile(const char *endpoint, const char *soap_action, _ns3__CreateAccessProfile *ns3__CreateAccessProfile, _ns3__CreateAccessProfileResponse *ns3__CreateAccessProfileResponse)
{	struct soap *soap = this->soap;
	struct __ns3__CreateAccessProfile soap_tmp___ns3__CreateAccessProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/CreateAccessProfile";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns3__CreateAccessProfile.ns3__CreateAccessProfile = ns3__CreateAccessProfile;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns3__CreateAccessProfile(soap, &soap_tmp___ns3__CreateAccessProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__CreateAccessProfile(soap, &soap_tmp___ns3__CreateAccessProfile, "-ns3:CreateAccessProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__CreateAccessProfile(soap, &soap_tmp___ns3__CreateAccessProfile, "-ns3:CreateAccessProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns3__CreateAccessProfileResponse)
		return soap_closesock(soap);
	ns3__CreateAccessProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__CreateAccessProfileResponse->soap_get(soap, "ns3:CreateAccessProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessRulesBindingProxy::ModifyAccessProfile(const char *endpoint, const char *soap_action, _ns3__ModifyAccessProfile *ns3__ModifyAccessProfile, _ns3__ModifyAccessProfileResponse *ns3__ModifyAccessProfileResponse)
{	struct soap *soap = this->soap;
	struct __ns3__ModifyAccessProfile soap_tmp___ns3__ModifyAccessProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/ModifyAccessProfile";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns3__ModifyAccessProfile.ns3__ModifyAccessProfile = ns3__ModifyAccessProfile;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns3__ModifyAccessProfile(soap, &soap_tmp___ns3__ModifyAccessProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__ModifyAccessProfile(soap, &soap_tmp___ns3__ModifyAccessProfile, "-ns3:ModifyAccessProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__ModifyAccessProfile(soap, &soap_tmp___ns3__ModifyAccessProfile, "-ns3:ModifyAccessProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns3__ModifyAccessProfileResponse)
		return soap_closesock(soap);
	ns3__ModifyAccessProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__ModifyAccessProfileResponse->soap_get(soap, "ns3:ModifyAccessProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessRulesBindingProxy::SetAccessProfile(const char *endpoint, const char *soap_action, _ns3__SetAccessProfile *ns3__SetAccessProfile, _ns3__SetAccessProfileResponse *ns3__SetAccessProfileResponse)
{	struct soap *soap = this->soap;
	struct __ns3__SetAccessProfile soap_tmp___ns3__SetAccessProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/SetAccessProfile";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns3__SetAccessProfile.ns3__SetAccessProfile = ns3__SetAccessProfile;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns3__SetAccessProfile(soap, &soap_tmp___ns3__SetAccessProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__SetAccessProfile(soap, &soap_tmp___ns3__SetAccessProfile, "-ns3:SetAccessProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__SetAccessProfile(soap, &soap_tmp___ns3__SetAccessProfile, "-ns3:SetAccessProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns3__SetAccessProfileResponse)
		return soap_closesock(soap);
	ns3__SetAccessProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__SetAccessProfileResponse->soap_get(soap, "ns3:SetAccessProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AccessRulesBindingProxy::DeleteAccessProfile(const char *endpoint, const char *soap_action, _ns3__DeleteAccessProfile *ns3__DeleteAccessProfile, _ns3__DeleteAccessProfileResponse *ns3__DeleteAccessProfileResponse)
{	struct soap *soap = this->soap;
	struct __ns3__DeleteAccessProfile soap_tmp___ns3__DeleteAccessProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/DeleteAccessProfile";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns3__DeleteAccessProfile.ns3__DeleteAccessProfile = ns3__DeleteAccessProfile;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns3__DeleteAccessProfile(soap, &soap_tmp___ns3__DeleteAccessProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__DeleteAccessProfile(soap, &soap_tmp___ns3__DeleteAccessProfile, "-ns3:DeleteAccessProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__DeleteAccessProfile(soap, &soap_tmp___ns3__DeleteAccessProfile, "-ns3:DeleteAccessProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns3__DeleteAccessProfileResponse)
		return soap_closesock(soap);
	ns3__DeleteAccessProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__DeleteAccessProfileResponse->soap_get(soap, "ns3:DeleteAccessProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
