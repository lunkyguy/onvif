/* soapCredentialBindingService.h
   Generated by gSOAP 2.8.17r from onvif.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapCredentialBindingService_H
#define soapCredentialBindingService_H
#include "soapH.h"
class SOAP_CMAC CredentialBindingService
{ public:
	struct soap *soap;
	bool own;
	/// Constructor
	CredentialBindingService();
	/// Constructor to use/share an engine state
	CredentialBindingService(struct soap*);
	/// Constructor with engine input+output mode control
	CredentialBindingService(soap_mode iomode);
	/// Constructor with engine input and output mode control
	CredentialBindingService(soap_mode imode, soap_mode omode);
	/// Destructor, also frees all deserialized data
	virtual ~CredentialBindingService();
	/// Delete all deserialized data (with soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to defaults
	virtual	void reset();
	/// Initializer used by constructor
	virtual	void CredentialBindingService_init(soap_mode imode, soap_mode omode);
	/// Create a copy
	virtual	CredentialBindingService *copy() SOAP_PURE_VIRTUAL;
	/// Close connection (normally automatic)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Return sender-related fault to sender
	virtual	int soap_senderfault(const char *string, const char *detailXML);
	/// Return sender-related fault with SOAP 1.2 subcode to sender
	virtual	int soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML);
	/// Return receiver-related fault to sender
	virtual	int soap_receiverfault(const char *string, const char *detailXML);
	/// Return receiver-related fault with SOAP 1.2 subcode to sender
	virtual	int soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML);
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Put SOAP Header in message
	virtual	void soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security);
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Run simple single-thread iterative service on port until a connection error occurs (returns error code or SOAP_OK), use this->bind_flag = SO_REUSEADDR to rebind for a rerun
	virtual	int run(int port);
	/// Bind service to port (returns master socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET bind(const char *host, int port, int backlog);
	/// Accept next request (returns socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET accept();
#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
	/// Then accept SSL handshake, when SSL is used
	virtual	int ssl_accept();
#endif
	/// Serve this request (returns error code or SOAP_OK)
	virtual	int serve();
	/// Used by serve() to dispatch a request (returns error code or SOAP_OK)
	virtual	int dispatch();

	///
	/// Service operations (you should define these):
	/// Note: compile with -DWITH_PURE_VIRTUAL for pure virtual methods
	///

	/// Web service operation 'GetServiceCapabilities' (returns error code or SOAP_OK)
	virtual	int GetServiceCapabilities(_ns7__GetServiceCapabilities *ns7__GetServiceCapabilities, _ns7__GetServiceCapabilitiesResponse *ns7__GetServiceCapabilitiesResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetSupportedFormatTypes' (returns error code or SOAP_OK)
	virtual	int GetSupportedFormatTypes(_ns7__GetSupportedFormatTypes *ns7__GetSupportedFormatTypes, _ns7__GetSupportedFormatTypesResponse *ns7__GetSupportedFormatTypesResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetCredentialInfo' (returns error code or SOAP_OK)
	virtual	int GetCredentialInfo(_ns7__GetCredentialInfo *ns7__GetCredentialInfo, _ns7__GetCredentialInfoResponse *ns7__GetCredentialInfoResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetCredentialInfoList' (returns error code or SOAP_OK)
	virtual	int GetCredentialInfoList(_ns7__GetCredentialInfoList *ns7__GetCredentialInfoList, _ns7__GetCredentialInfoListResponse *ns7__GetCredentialInfoListResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetCredentials' (returns error code or SOAP_OK)
	virtual	int GetCredentials(_ns7__GetCredentials *ns7__GetCredentials, _ns7__GetCredentialsResponse *ns7__GetCredentialsResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetCredentialList' (returns error code or SOAP_OK)
	virtual	int GetCredentialList(_ns7__GetCredentialList *ns7__GetCredentialList, _ns7__GetCredentialListResponse *ns7__GetCredentialListResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'CreateCredential' (returns error code or SOAP_OK)
	virtual	int CreateCredential(_ns7__CreateCredential *ns7__CreateCredential, _ns7__CreateCredentialResponse *ns7__CreateCredentialResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'SetCredential' (returns error code or SOAP_OK)
	virtual	int SetCredential(_ns7__SetCredential *ns7__SetCredential, _ns7__SetCredentialResponse *ns7__SetCredentialResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'ModifyCredential' (returns error code or SOAP_OK)
	virtual	int ModifyCredential(_ns7__ModifyCredential *ns7__ModifyCredential, _ns7__ModifyCredentialResponse *ns7__ModifyCredentialResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'DeleteCredential' (returns error code or SOAP_OK)
	virtual	int DeleteCredential(_ns7__DeleteCredential *ns7__DeleteCredential, _ns7__DeleteCredentialResponse *ns7__DeleteCredentialResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetCredentialState' (returns error code or SOAP_OK)
	virtual	int GetCredentialState(_ns7__GetCredentialState *ns7__GetCredentialState, _ns7__GetCredentialStateResponse *ns7__GetCredentialStateResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'EnableCredential' (returns error code or SOAP_OK)
	virtual	int EnableCredential(_ns7__EnableCredential *ns7__EnableCredential, _ns7__EnableCredentialResponse *ns7__EnableCredentialResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'DisableCredential' (returns error code or SOAP_OK)
	virtual	int DisableCredential(_ns7__DisableCredential *ns7__DisableCredential, _ns7__DisableCredentialResponse *ns7__DisableCredentialResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'ResetAntipassbackViolation' (returns error code or SOAP_OK)
	virtual	int ResetAntipassbackViolation(_ns7__ResetAntipassbackViolation *ns7__ResetAntipassbackViolation, _ns7__ResetAntipassbackViolationResponse *ns7__ResetAntipassbackViolationResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetCredentialIdentifiers' (returns error code or SOAP_OK)
	virtual	int GetCredentialIdentifiers(_ns7__GetCredentialIdentifiers *ns7__GetCredentialIdentifiers, _ns7__GetCredentialIdentifiersResponse *ns7__GetCredentialIdentifiersResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'SetCredentialIdentifier' (returns error code or SOAP_OK)
	virtual	int SetCredentialIdentifier(_ns7__SetCredentialIdentifier *ns7__SetCredentialIdentifier, _ns7__SetCredentialIdentifierResponse *ns7__SetCredentialIdentifierResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'DeleteCredentialIdentifier' (returns error code or SOAP_OK)
	virtual	int DeleteCredentialIdentifier(_ns7__DeleteCredentialIdentifier *ns7__DeleteCredentialIdentifier, _ns7__DeleteCredentialIdentifierResponse *ns7__DeleteCredentialIdentifierResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetCredentialAccessProfiles' (returns error code or SOAP_OK)
	virtual	int GetCredentialAccessProfiles(_ns7__GetCredentialAccessProfiles *ns7__GetCredentialAccessProfiles, _ns7__GetCredentialAccessProfilesResponse *ns7__GetCredentialAccessProfilesResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'SetCredentialAccessProfiles' (returns error code or SOAP_OK)
	virtual	int SetCredentialAccessProfiles(_ns7__SetCredentialAccessProfiles *ns7__SetCredentialAccessProfiles, _ns7__SetCredentialAccessProfilesResponse *ns7__SetCredentialAccessProfilesResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'DeleteCredentialAccessProfiles' (returns error code or SOAP_OK)
	virtual	int DeleteCredentialAccessProfiles(_ns7__DeleteCredentialAccessProfiles *ns7__DeleteCredentialAccessProfiles, _ns7__DeleteCredentialAccessProfilesResponse *ns7__DeleteCredentialAccessProfilesResponse) SOAP_PURE_VIRTUAL;
};
#endif
