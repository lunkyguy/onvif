/* soapAnalyticsDeviceBindingService.cpp
   Generated by gSOAP 2.8.17r from onvif.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapAnalyticsDeviceBindingService.h"

AnalyticsDeviceBindingService::AnalyticsDeviceBindingService()
{	this->soap = soap_new();
	this->own = true;
	AnalyticsDeviceBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

AnalyticsDeviceBindingService::AnalyticsDeviceBindingService(struct soap *_soap)
{	this->soap = _soap;
	this->own = false;
	AnalyticsDeviceBindingService_init(_soap->imode, _soap->omode);
}

AnalyticsDeviceBindingService::AnalyticsDeviceBindingService(soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	AnalyticsDeviceBindingService_init(iomode, iomode);
}

AnalyticsDeviceBindingService::AnalyticsDeviceBindingService(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->own = true;
	AnalyticsDeviceBindingService_init(imode, omode);
}

AnalyticsDeviceBindingService::~AnalyticsDeviceBindingService()
{	if (this->own)
		soap_free(this->soap);
}

void AnalyticsDeviceBindingService::AnalyticsDeviceBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
	{"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
	{"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
	{"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
	{"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
	{"wsc", "http://schemas.xmlsoap.org/ws/2005/02/sc", NULL, NULL},
	{"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
	{"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
	{"ns2", "http://www.onvif.org/ver10/pacs", NULL, NULL},
	{"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
	{"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
	{"name", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
	{"name10", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
	{"name11", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
	{"name12", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
	{"name13", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
	{"name14", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
	{"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"name2", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
	{"name3", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
	{"name4", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
	{"ns5", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
	{"name5", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
	{"name6", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
	{"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
	{"name7", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
	{"name8", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
	{"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
	{"name9", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
	{"ns1", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
	{"ns10", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
	{"ns11", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
	{"ns12", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
	{"ns3", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
	{"ns4", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
	{"ns6", "http://www.onvif.org/ver10/authenticationbehavior/wsdl", NULL, NULL},
	{"ns7", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
	{"ns8", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
	{"ns9", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
	{"tad", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
	{"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
	{"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
	{"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
	{"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
	{"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
	{"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
	{"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
	{"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
	{"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
	{"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void AnalyticsDeviceBindingService::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void AnalyticsDeviceBindingService::reset()
{	destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	AnalyticsDeviceBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
AnalyticsDeviceBindingService *AnalyticsDeviceBindingService::copy()
{	AnalyticsDeviceBindingService *dup = SOAP_NEW_COPY(AnalyticsDeviceBindingService);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}
#endif

int AnalyticsDeviceBindingService::soap_close_socket()
{	return soap_closesock(this->soap);
}

int AnalyticsDeviceBindingService::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

int AnalyticsDeviceBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this->soap, string, detailXML);
}

int AnalyticsDeviceBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

int AnalyticsDeviceBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this->soap, string, detailXML);
}

int AnalyticsDeviceBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

void AnalyticsDeviceBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void AnalyticsDeviceBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *AnalyticsDeviceBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

void AnalyticsDeviceBindingService::soap_noheader()
{	this->soap->header = NULL;
}

void AnalyticsDeviceBindingService::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsse__Security = wsse__Security;
}

const SOAP_ENV__Header *AnalyticsDeviceBindingService::soap_header()
{	return this->soap->header;
}

int AnalyticsDeviceBindingService::run(int port)
{	if (soap_valid_socket(this->soap->master) || soap_valid_socket(bind(NULL, port, 100)))
	{	for (;;)
		{	if (!soap_valid_socket(accept()) || serve())
				return this->soap->error;
			soap_destroy(this->soap);
			soap_end(this->soap);
		}
	}
	else
		return this->soap->error;
	return SOAP_OK;
}

SOAP_SOCKET AnalyticsDeviceBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this->soap, host, port, backlog);
}

SOAP_SOCKET AnalyticsDeviceBindingService::accept()
{	return soap_accept(this->soap);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int AnalyticsDeviceBindingService::ssl_accept()
{	return soap_ssl_accept(this->soap);
}
#endif

int AnalyticsDeviceBindingService::serve()
{
#ifndef WITH_FASTCGI
	unsigned int k = this->soap->max_keep_alive;
#endif
	do
	{

#ifndef WITH_FASTCGI
		if (this->soap->max_keep_alive > 0 && !--k)
			this->soap->keep_alive = 0;
#endif

		if (soap_begin_serve(this->soap))
		{	if (this->soap->error >= SOAP_STOP)
				continue;
			return this->soap->error;
		}
		if (dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this->soap);
#else
			return soap_send_fault(this->soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(this->soap);
		soap_end(this->soap);
	} while (1);
#else
	} while (this->soap->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___tad__GetServiceCapabilities(AnalyticsDeviceBindingService*);
static int serve___tad__DeleteAnalyticsEngineControl(AnalyticsDeviceBindingService*);
static int serve___tad__CreateAnalyticsEngineControl(AnalyticsDeviceBindingService*);
static int serve___tad__SetAnalyticsEngineControl(AnalyticsDeviceBindingService*);
static int serve___tad__GetAnalyticsEngineControl(AnalyticsDeviceBindingService*);
static int serve___tad__GetAnalyticsEngineControls(AnalyticsDeviceBindingService*);
static int serve___tad__GetAnalyticsEngine(AnalyticsDeviceBindingService*);
static int serve___tad__GetAnalyticsEngines(AnalyticsDeviceBindingService*);
static int serve___tad__SetVideoAnalyticsConfiguration(AnalyticsDeviceBindingService*);
static int serve___tad__SetAnalyticsEngineInput(AnalyticsDeviceBindingService*);
static int serve___tad__GetAnalyticsEngineInput(AnalyticsDeviceBindingService*);
static int serve___tad__GetAnalyticsEngineInputs(AnalyticsDeviceBindingService*);
static int serve___tad__GetAnalyticsDeviceStreamUri(AnalyticsDeviceBindingService*);
static int serve___tad__GetVideoAnalyticsConfiguration(AnalyticsDeviceBindingService*);
static int serve___tad__CreateAnalyticsEngineInputs(AnalyticsDeviceBindingService*);
static int serve___tad__DeleteAnalyticsEngineInputs(AnalyticsDeviceBindingService*);
static int serve___tad__GetAnalyticsState(AnalyticsDeviceBindingService*);

int AnalyticsDeviceBindingService::dispatch()
{	AnalyticsDeviceBindingService_init(this->soap->imode, this->soap->omode);
	soap_peek_element(this->soap);
	if (!soap_match_tag(this->soap, this->soap->tag, "tad:GetServiceCapabilities"))
		return serve___tad__GetServiceCapabilities(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "tad:DeleteAnalyticsEngineControl"))
		return serve___tad__DeleteAnalyticsEngineControl(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "tad:CreateAnalyticsEngineControl"))
		return serve___tad__CreateAnalyticsEngineControl(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "tad:SetAnalyticsEngineControl"))
		return serve___tad__SetAnalyticsEngineControl(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "tad:GetAnalyticsEngineControl"))
		return serve___tad__GetAnalyticsEngineControl(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "tad:GetAnalyticsEngineControls"))
		return serve___tad__GetAnalyticsEngineControls(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "tad:GetAnalyticsEngine"))
		return serve___tad__GetAnalyticsEngine(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "tad:GetAnalyticsEngines"))
		return serve___tad__GetAnalyticsEngines(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "tad:SetVideoAnalyticsConfiguration"))
		return serve___tad__SetVideoAnalyticsConfiguration(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "tad:SetAnalyticsEngineInput"))
		return serve___tad__SetAnalyticsEngineInput(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "tad:GetAnalyticsEngineInput"))
		return serve___tad__GetAnalyticsEngineInput(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "tad:GetAnalyticsEngineInputs"))
		return serve___tad__GetAnalyticsEngineInputs(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "tad:GetAnalyticsDeviceStreamUri"))
		return serve___tad__GetAnalyticsDeviceStreamUri(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "tad:GetVideoAnalyticsConfiguration"))
		return serve___tad__GetVideoAnalyticsConfiguration(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "tad:CreateAnalyticsEngineInputs"))
		return serve___tad__CreateAnalyticsEngineInputs(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "tad:DeleteAnalyticsEngineInputs"))
		return serve___tad__DeleteAnalyticsEngineInputs(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "tad:GetAnalyticsState"))
		return serve___tad__GetAnalyticsState(this);
	return this->soap->error = SOAP_NO_METHOD;
}

static int serve___tad__GetServiceCapabilities(AnalyticsDeviceBindingService *service)
{	struct soap *soap = service->soap;
	struct __tad__GetServiceCapabilities soap_tmp___tad__GetServiceCapabilities;
	_tad__GetServiceCapabilitiesResponse tad__GetServiceCapabilitiesResponse;
	tad__GetServiceCapabilitiesResponse.soap_default(soap);
	soap_default___tad__GetServiceCapabilities(soap, &soap_tmp___tad__GetServiceCapabilities);
	if (!soap_get___tad__GetServiceCapabilities(soap, &soap_tmp___tad__GetServiceCapabilities, "-tad:GetServiceCapabilities", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetServiceCapabilities(soap_tmp___tad__GetServiceCapabilities.tad__GetServiceCapabilities, &tad__GetServiceCapabilitiesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetServiceCapabilitiesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetServiceCapabilitiesResponse.soap_put(soap, "tad:GetServiceCapabilitiesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetServiceCapabilitiesResponse.soap_put(soap, "tad:GetServiceCapabilitiesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__DeleteAnalyticsEngineControl(AnalyticsDeviceBindingService *service)
{	struct soap *soap = service->soap;
	struct __tad__DeleteAnalyticsEngineControl soap_tmp___tad__DeleteAnalyticsEngineControl;
	_tad__DeleteAnalyticsEngineControlResponse tad__DeleteAnalyticsEngineControlResponse;
	tad__DeleteAnalyticsEngineControlResponse.soap_default(soap);
	soap_default___tad__DeleteAnalyticsEngineControl(soap, &soap_tmp___tad__DeleteAnalyticsEngineControl);
	if (!soap_get___tad__DeleteAnalyticsEngineControl(soap, &soap_tmp___tad__DeleteAnalyticsEngineControl, "-tad:DeleteAnalyticsEngineControl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteAnalyticsEngineControl(soap_tmp___tad__DeleteAnalyticsEngineControl.tad__DeleteAnalyticsEngineControl, &tad__DeleteAnalyticsEngineControlResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__DeleteAnalyticsEngineControlResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__DeleteAnalyticsEngineControlResponse.soap_put(soap, "tad:DeleteAnalyticsEngineControlResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__DeleteAnalyticsEngineControlResponse.soap_put(soap, "tad:DeleteAnalyticsEngineControlResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__CreateAnalyticsEngineControl(AnalyticsDeviceBindingService *service)
{	struct soap *soap = service->soap;
	struct __tad__CreateAnalyticsEngineControl soap_tmp___tad__CreateAnalyticsEngineControl;
	_tad__CreateAnalyticsEngineControlResponse tad__CreateAnalyticsEngineControlResponse;
	tad__CreateAnalyticsEngineControlResponse.soap_default(soap);
	soap_default___tad__CreateAnalyticsEngineControl(soap, &soap_tmp___tad__CreateAnalyticsEngineControl);
	if (!soap_get___tad__CreateAnalyticsEngineControl(soap, &soap_tmp___tad__CreateAnalyticsEngineControl, "-tad:CreateAnalyticsEngineControl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateAnalyticsEngineControl(soap_tmp___tad__CreateAnalyticsEngineControl.tad__CreateAnalyticsEngineControl, &tad__CreateAnalyticsEngineControlResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__CreateAnalyticsEngineControlResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__CreateAnalyticsEngineControlResponse.soap_put(soap, "tad:CreateAnalyticsEngineControlResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__CreateAnalyticsEngineControlResponse.soap_put(soap, "tad:CreateAnalyticsEngineControlResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__SetAnalyticsEngineControl(AnalyticsDeviceBindingService *service)
{	struct soap *soap = service->soap;
	struct __tad__SetAnalyticsEngineControl soap_tmp___tad__SetAnalyticsEngineControl;
	_tad__SetAnalyticsEngineControlResponse tad__SetAnalyticsEngineControlResponse;
	tad__SetAnalyticsEngineControlResponse.soap_default(soap);
	soap_default___tad__SetAnalyticsEngineControl(soap, &soap_tmp___tad__SetAnalyticsEngineControl);
	if (!soap_get___tad__SetAnalyticsEngineControl(soap, &soap_tmp___tad__SetAnalyticsEngineControl, "-tad:SetAnalyticsEngineControl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAnalyticsEngineControl(soap_tmp___tad__SetAnalyticsEngineControl.tad__SetAnalyticsEngineControl, &tad__SetAnalyticsEngineControlResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__SetAnalyticsEngineControlResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__SetAnalyticsEngineControlResponse.soap_put(soap, "tad:SetAnalyticsEngineControlResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__SetAnalyticsEngineControlResponse.soap_put(soap, "tad:SetAnalyticsEngineControlResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__GetAnalyticsEngineControl(AnalyticsDeviceBindingService *service)
{	struct soap *soap = service->soap;
	struct __tad__GetAnalyticsEngineControl soap_tmp___tad__GetAnalyticsEngineControl;
	_tad__GetAnalyticsEngineControlResponse tad__GetAnalyticsEngineControlResponse;
	tad__GetAnalyticsEngineControlResponse.soap_default(soap);
	soap_default___tad__GetAnalyticsEngineControl(soap, &soap_tmp___tad__GetAnalyticsEngineControl);
	if (!soap_get___tad__GetAnalyticsEngineControl(soap, &soap_tmp___tad__GetAnalyticsEngineControl, "-tad:GetAnalyticsEngineControl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsEngineControl(soap_tmp___tad__GetAnalyticsEngineControl.tad__GetAnalyticsEngineControl, &tad__GetAnalyticsEngineControlResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetAnalyticsEngineControlResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetAnalyticsEngineControlResponse.soap_put(soap, "tad:GetAnalyticsEngineControlResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetAnalyticsEngineControlResponse.soap_put(soap, "tad:GetAnalyticsEngineControlResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__GetAnalyticsEngineControls(AnalyticsDeviceBindingService *service)
{	struct soap *soap = service->soap;
	struct __tad__GetAnalyticsEngineControls soap_tmp___tad__GetAnalyticsEngineControls;
	_tad__GetAnalyticsEngineControlsResponse tad__GetAnalyticsEngineControlsResponse;
	tad__GetAnalyticsEngineControlsResponse.soap_default(soap);
	soap_default___tad__GetAnalyticsEngineControls(soap, &soap_tmp___tad__GetAnalyticsEngineControls);
	if (!soap_get___tad__GetAnalyticsEngineControls(soap, &soap_tmp___tad__GetAnalyticsEngineControls, "-tad:GetAnalyticsEngineControls", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsEngineControls(soap_tmp___tad__GetAnalyticsEngineControls.tad__GetAnalyticsEngineControls, &tad__GetAnalyticsEngineControlsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetAnalyticsEngineControlsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetAnalyticsEngineControlsResponse.soap_put(soap, "tad:GetAnalyticsEngineControlsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetAnalyticsEngineControlsResponse.soap_put(soap, "tad:GetAnalyticsEngineControlsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__GetAnalyticsEngine(AnalyticsDeviceBindingService *service)
{	struct soap *soap = service->soap;
	struct __tad__GetAnalyticsEngine soap_tmp___tad__GetAnalyticsEngine;
	_tad__GetAnalyticsEngineResponse tad__GetAnalyticsEngineResponse;
	tad__GetAnalyticsEngineResponse.soap_default(soap);
	soap_default___tad__GetAnalyticsEngine(soap, &soap_tmp___tad__GetAnalyticsEngine);
	if (!soap_get___tad__GetAnalyticsEngine(soap, &soap_tmp___tad__GetAnalyticsEngine, "-tad:GetAnalyticsEngine", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsEngine(soap_tmp___tad__GetAnalyticsEngine.tad__GetAnalyticsEngine, &tad__GetAnalyticsEngineResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetAnalyticsEngineResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetAnalyticsEngineResponse.soap_put(soap, "tad:GetAnalyticsEngineResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetAnalyticsEngineResponse.soap_put(soap, "tad:GetAnalyticsEngineResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__GetAnalyticsEngines(AnalyticsDeviceBindingService *service)
{	struct soap *soap = service->soap;
	struct __tad__GetAnalyticsEngines soap_tmp___tad__GetAnalyticsEngines;
	_tad__GetAnalyticsEnginesResponse tad__GetAnalyticsEnginesResponse;
	tad__GetAnalyticsEnginesResponse.soap_default(soap);
	soap_default___tad__GetAnalyticsEngines(soap, &soap_tmp___tad__GetAnalyticsEngines);
	if (!soap_get___tad__GetAnalyticsEngines(soap, &soap_tmp___tad__GetAnalyticsEngines, "-tad:GetAnalyticsEngines", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsEngines(soap_tmp___tad__GetAnalyticsEngines.tad__GetAnalyticsEngines, &tad__GetAnalyticsEnginesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetAnalyticsEnginesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetAnalyticsEnginesResponse.soap_put(soap, "tad:GetAnalyticsEnginesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetAnalyticsEnginesResponse.soap_put(soap, "tad:GetAnalyticsEnginesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__SetVideoAnalyticsConfiguration(AnalyticsDeviceBindingService *service)
{	struct soap *soap = service->soap;
	struct __tad__SetVideoAnalyticsConfiguration soap_tmp___tad__SetVideoAnalyticsConfiguration;
	_tad__SetVideoAnalyticsConfigurationResponse tad__SetVideoAnalyticsConfigurationResponse;
	tad__SetVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___tad__SetVideoAnalyticsConfiguration(soap, &soap_tmp___tad__SetVideoAnalyticsConfiguration);
	if (!soap_get___tad__SetVideoAnalyticsConfiguration(soap, &soap_tmp___tad__SetVideoAnalyticsConfiguration, "-tad:SetVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoAnalyticsConfiguration(soap_tmp___tad__SetVideoAnalyticsConfiguration.tad__SetVideoAnalyticsConfiguration, &tad__SetVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__SetVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__SetVideoAnalyticsConfigurationResponse.soap_put(soap, "tad:SetVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__SetVideoAnalyticsConfigurationResponse.soap_put(soap, "tad:SetVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__SetAnalyticsEngineInput(AnalyticsDeviceBindingService *service)
{	struct soap *soap = service->soap;
	struct __tad__SetAnalyticsEngineInput soap_tmp___tad__SetAnalyticsEngineInput;
	_tad__SetAnalyticsEngineInputResponse tad__SetAnalyticsEngineInputResponse;
	tad__SetAnalyticsEngineInputResponse.soap_default(soap);
	soap_default___tad__SetAnalyticsEngineInput(soap, &soap_tmp___tad__SetAnalyticsEngineInput);
	if (!soap_get___tad__SetAnalyticsEngineInput(soap, &soap_tmp___tad__SetAnalyticsEngineInput, "-tad:SetAnalyticsEngineInput", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAnalyticsEngineInput(soap_tmp___tad__SetAnalyticsEngineInput.tad__SetAnalyticsEngineInput, &tad__SetAnalyticsEngineInputResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__SetAnalyticsEngineInputResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__SetAnalyticsEngineInputResponse.soap_put(soap, "tad:SetAnalyticsEngineInputResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__SetAnalyticsEngineInputResponse.soap_put(soap, "tad:SetAnalyticsEngineInputResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__GetAnalyticsEngineInput(AnalyticsDeviceBindingService *service)
{	struct soap *soap = service->soap;
	struct __tad__GetAnalyticsEngineInput soap_tmp___tad__GetAnalyticsEngineInput;
	_tad__GetAnalyticsEngineInputResponse tad__GetAnalyticsEngineInputResponse;
	tad__GetAnalyticsEngineInputResponse.soap_default(soap);
	soap_default___tad__GetAnalyticsEngineInput(soap, &soap_tmp___tad__GetAnalyticsEngineInput);
	if (!soap_get___tad__GetAnalyticsEngineInput(soap, &soap_tmp___tad__GetAnalyticsEngineInput, "-tad:GetAnalyticsEngineInput", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsEngineInput(soap_tmp___tad__GetAnalyticsEngineInput.tad__GetAnalyticsEngineInput, &tad__GetAnalyticsEngineInputResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetAnalyticsEngineInputResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetAnalyticsEngineInputResponse.soap_put(soap, "tad:GetAnalyticsEngineInputResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetAnalyticsEngineInputResponse.soap_put(soap, "tad:GetAnalyticsEngineInputResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__GetAnalyticsEngineInputs(AnalyticsDeviceBindingService *service)
{	struct soap *soap = service->soap;
	struct __tad__GetAnalyticsEngineInputs soap_tmp___tad__GetAnalyticsEngineInputs;
	_tad__GetAnalyticsEngineInputsResponse tad__GetAnalyticsEngineInputsResponse;
	tad__GetAnalyticsEngineInputsResponse.soap_default(soap);
	soap_default___tad__GetAnalyticsEngineInputs(soap, &soap_tmp___tad__GetAnalyticsEngineInputs);
	if (!soap_get___tad__GetAnalyticsEngineInputs(soap, &soap_tmp___tad__GetAnalyticsEngineInputs, "-tad:GetAnalyticsEngineInputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsEngineInputs(soap_tmp___tad__GetAnalyticsEngineInputs.tad__GetAnalyticsEngineInputs, &tad__GetAnalyticsEngineInputsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetAnalyticsEngineInputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetAnalyticsEngineInputsResponse.soap_put(soap, "tad:GetAnalyticsEngineInputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetAnalyticsEngineInputsResponse.soap_put(soap, "tad:GetAnalyticsEngineInputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__GetAnalyticsDeviceStreamUri(AnalyticsDeviceBindingService *service)
{	struct soap *soap = service->soap;
	struct __tad__GetAnalyticsDeviceStreamUri soap_tmp___tad__GetAnalyticsDeviceStreamUri;
	_tad__GetAnalyticsDeviceStreamUriResponse tad__GetAnalyticsDeviceStreamUriResponse;
	tad__GetAnalyticsDeviceStreamUriResponse.soap_default(soap);
	soap_default___tad__GetAnalyticsDeviceStreamUri(soap, &soap_tmp___tad__GetAnalyticsDeviceStreamUri);
	if (!soap_get___tad__GetAnalyticsDeviceStreamUri(soap, &soap_tmp___tad__GetAnalyticsDeviceStreamUri, "-tad:GetAnalyticsDeviceStreamUri", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsDeviceStreamUri(soap_tmp___tad__GetAnalyticsDeviceStreamUri.tad__GetAnalyticsDeviceStreamUri, &tad__GetAnalyticsDeviceStreamUriResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetAnalyticsDeviceStreamUriResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetAnalyticsDeviceStreamUriResponse.soap_put(soap, "tad:GetAnalyticsDeviceStreamUriResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetAnalyticsDeviceStreamUriResponse.soap_put(soap, "tad:GetAnalyticsDeviceStreamUriResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__GetVideoAnalyticsConfiguration(AnalyticsDeviceBindingService *service)
{	struct soap *soap = service->soap;
	struct __tad__GetVideoAnalyticsConfiguration soap_tmp___tad__GetVideoAnalyticsConfiguration;
	_tad__GetVideoAnalyticsConfigurationResponse tad__GetVideoAnalyticsConfigurationResponse;
	tad__GetVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___tad__GetVideoAnalyticsConfiguration(soap, &soap_tmp___tad__GetVideoAnalyticsConfiguration);
	if (!soap_get___tad__GetVideoAnalyticsConfiguration(soap, &soap_tmp___tad__GetVideoAnalyticsConfiguration, "-tad:GetVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoAnalyticsConfiguration(soap_tmp___tad__GetVideoAnalyticsConfiguration.tad__GetVideoAnalyticsConfiguration, &tad__GetVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetVideoAnalyticsConfigurationResponse.soap_put(soap, "tad:GetVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetVideoAnalyticsConfigurationResponse.soap_put(soap, "tad:GetVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__CreateAnalyticsEngineInputs(AnalyticsDeviceBindingService *service)
{	struct soap *soap = service->soap;
	struct __tad__CreateAnalyticsEngineInputs soap_tmp___tad__CreateAnalyticsEngineInputs;
	_tad__CreateAnalyticsEngineInputsResponse tad__CreateAnalyticsEngineInputsResponse;
	tad__CreateAnalyticsEngineInputsResponse.soap_default(soap);
	soap_default___tad__CreateAnalyticsEngineInputs(soap, &soap_tmp___tad__CreateAnalyticsEngineInputs);
	if (!soap_get___tad__CreateAnalyticsEngineInputs(soap, &soap_tmp___tad__CreateAnalyticsEngineInputs, "-tad:CreateAnalyticsEngineInputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateAnalyticsEngineInputs(soap_tmp___tad__CreateAnalyticsEngineInputs.tad__CreateAnalyticsEngineInputs, &tad__CreateAnalyticsEngineInputsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__CreateAnalyticsEngineInputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__CreateAnalyticsEngineInputsResponse.soap_put(soap, "tad:CreateAnalyticsEngineInputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__CreateAnalyticsEngineInputsResponse.soap_put(soap, "tad:CreateAnalyticsEngineInputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__DeleteAnalyticsEngineInputs(AnalyticsDeviceBindingService *service)
{	struct soap *soap = service->soap;
	struct __tad__DeleteAnalyticsEngineInputs soap_tmp___tad__DeleteAnalyticsEngineInputs;
	_tad__DeleteAnalyticsEngineInputsResponse tad__DeleteAnalyticsEngineInputsResponse;
	tad__DeleteAnalyticsEngineInputsResponse.soap_default(soap);
	soap_default___tad__DeleteAnalyticsEngineInputs(soap, &soap_tmp___tad__DeleteAnalyticsEngineInputs);
	if (!soap_get___tad__DeleteAnalyticsEngineInputs(soap, &soap_tmp___tad__DeleteAnalyticsEngineInputs, "-tad:DeleteAnalyticsEngineInputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteAnalyticsEngineInputs(soap_tmp___tad__DeleteAnalyticsEngineInputs.tad__DeleteAnalyticsEngineInputs, &tad__DeleteAnalyticsEngineInputsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__DeleteAnalyticsEngineInputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__DeleteAnalyticsEngineInputsResponse.soap_put(soap, "tad:DeleteAnalyticsEngineInputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__DeleteAnalyticsEngineInputsResponse.soap_put(soap, "tad:DeleteAnalyticsEngineInputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___tad__GetAnalyticsState(AnalyticsDeviceBindingService *service)
{	struct soap *soap = service->soap;
	struct __tad__GetAnalyticsState soap_tmp___tad__GetAnalyticsState;
	_tad__GetAnalyticsStateResponse tad__GetAnalyticsStateResponse;
	tad__GetAnalyticsStateResponse.soap_default(soap);
	soap_default___tad__GetAnalyticsState(soap, &soap_tmp___tad__GetAnalyticsState);
	if (!soap_get___tad__GetAnalyticsState(soap, &soap_tmp___tad__GetAnalyticsState, "-tad:GetAnalyticsState", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsState(soap_tmp___tad__GetAnalyticsState.tad__GetAnalyticsState, &tad__GetAnalyticsStateResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	tad__GetAnalyticsStateResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || tad__GetAnalyticsStateResponse.soap_put(soap, "tad:GetAnalyticsStateResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || tad__GetAnalyticsStateResponse.soap_put(soap, "tad:GetAnalyticsStateResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
