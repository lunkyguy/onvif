/* soapPullPointSubscriptionBindingProxy.h
   Generated by gSOAP 2.8.17r from onvif.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapPullPointSubscriptionBindingProxy_H
#define soapPullPointSubscriptionBindingProxy_H
#include "soapH.h"

class SOAP_CMAC PullPointSubscriptionBindingProxy
{ public:
	struct soap *soap;
	bool own;
	/// Endpoint URL of service 'PullPointSubscriptionBindingProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	PullPointSubscriptionBindingProxy();
	/// Constructor to use/share an engine state
	PullPointSubscriptionBindingProxy(struct soap*);
	/// Constructor with endpoint URL
	PullPointSubscriptionBindingProxy(const char *url);
	/// Constructor with engine input+output mode control
	PullPointSubscriptionBindingProxy(soap_mode iomode);
	/// Constructor with URL and input+output mode control
	PullPointSubscriptionBindingProxy(const char *url, soap_mode iomode);
	/// Constructor with engine input and output mode control
	PullPointSubscriptionBindingProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~PullPointSubscriptionBindingProxy();
	/// Initializer used by constructors
	virtual	void PullPointSubscriptionBindingProxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (with soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to default
	virtual	void reset();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Put SOAP Header in message
	virtual	void soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security);
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif

	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'PullMessages' (returns error code or SOAP_OK)
	virtual	int PullMessages(_tev__PullMessages *tev__PullMessages, _tev__PullMessagesResponse *tev__PullMessagesResponse) { return this->PullMessages(NULL, NULL, tev__PullMessages, tev__PullMessagesResponse); }
	virtual	int PullMessages(const char *endpoint, const char *soap_action, _tev__PullMessages *tev__PullMessages, _tev__PullMessagesResponse *tev__PullMessagesResponse);

	/// Web service operation 'Seek' (returns error code or SOAP_OK)
	virtual	int Seek(_tev__Seek *tev__Seek, _tev__SeekResponse *tev__SeekResponse) { return this->Seek(NULL, NULL, tev__Seek, tev__SeekResponse); }
	virtual	int Seek(const char *endpoint, const char *soap_action, _tev__Seek *tev__Seek, _tev__SeekResponse *tev__SeekResponse);

	/// Web service operation 'SetSynchronizationPoint' (returns error code or SOAP_OK)
	virtual	int SetSynchronizationPoint(_tev__SetSynchronizationPoint *tev__SetSynchronizationPoint, _tev__SetSynchronizationPointResponse *tev__SetSynchronizationPointResponse) { return this->SetSynchronizationPoint(NULL, NULL, tev__SetSynchronizationPoint, tev__SetSynchronizationPointResponse); }
	virtual	int SetSynchronizationPoint(const char *endpoint, const char *soap_action, _tev__SetSynchronizationPoint *tev__SetSynchronizationPoint, _tev__SetSynchronizationPointResponse *tev__SetSynchronizationPointResponse);

	/// Web service operation 'Unsubscribe' (returns error code or SOAP_OK)
	virtual	int Unsubscribe(_wsnt__Unsubscribe *wsnt__Unsubscribe, _wsnt__UnsubscribeResponse *wsnt__UnsubscribeResponse) { return this->Unsubscribe(NULL, NULL, wsnt__Unsubscribe, wsnt__UnsubscribeResponse); }
	virtual	int Unsubscribe(const char *endpoint, const char *soap_action, _wsnt__Unsubscribe *wsnt__Unsubscribe, _wsnt__UnsubscribeResponse *wsnt__UnsubscribeResponse);
};
#endif
