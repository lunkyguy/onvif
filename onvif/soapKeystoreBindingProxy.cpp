/* soapKeystoreBindingProxy.cpp
   Generated by gSOAP 2.8.17r from onvif.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapKeystoreBindingProxy.h"

KeystoreBindingProxy::KeystoreBindingProxy()
{	this->soap = soap_new();
	this->own = true;
	KeystoreBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

KeystoreBindingProxy::KeystoreBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->own = false;
	KeystoreBindingProxy_init(_soap->imode, _soap->omode);
}

KeystoreBindingProxy::KeystoreBindingProxy(const char *url)
{	this->soap = soap_new();
	this->own = true;
	KeystoreBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

KeystoreBindingProxy::KeystoreBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	KeystoreBindingProxy_init(iomode, iomode);
}

KeystoreBindingProxy::KeystoreBindingProxy(const char *url, soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	KeystoreBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

KeystoreBindingProxy::KeystoreBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->own = true;
	KeystoreBindingProxy_init(imode, omode);
}

KeystoreBindingProxy::~KeystoreBindingProxy()
{	if (this->own)
		soap_free(this->soap);
}

void KeystoreBindingProxy::KeystoreBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
	{"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
	{"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
	{"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
	{"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
	{"wsc", "http://schemas.xmlsoap.org/ws/2005/02/sc", NULL, NULL},
	{"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
	{"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
	{"ns2", "http://www.onvif.org/ver10/pacs", NULL, NULL},
	{"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
	{"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
	{"name", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
	{"name10", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
	{"name11", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
	{"name12", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
	{"name13", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
	{"name14", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
	{"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"name2", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
	{"name3", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
	{"name4", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
	{"ns5", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
	{"name5", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
	{"name6", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
	{"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
	{"name7", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
	{"name8", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
	{"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
	{"name9", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
	{"ns1", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
	{"ns10", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
	{"ns11", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
	{"ns12", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
	{"ns3", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
	{"ns4", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
	{"ns6", "http://www.onvif.org/ver10/authenticationbehavior/wsdl", NULL, NULL},
	{"ns7", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
	{"ns8", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
	{"ns9", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
	{"tad", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
	{"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
	{"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
	{"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
	{"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
	{"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
	{"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
	{"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
	{"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
	{"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
	{"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void KeystoreBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void KeystoreBindingProxy::reset()
{	destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	KeystoreBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void KeystoreBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void KeystoreBindingProxy::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsse__Security = wsse__Security;
}

const SOAP_ENV__Header *KeystoreBindingProxy::soap_header()
{	return this->soap->header;
}

const SOAP_ENV__Fault *KeystoreBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *KeystoreBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *KeystoreBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int KeystoreBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int KeystoreBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void KeystoreBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void KeystoreBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *KeystoreBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int KeystoreBindingProxy::CreateRSAKeyPair(const char *endpoint, const char *soap_action, _ns5__CreateRSAKeyPair *ns5__CreateRSAKeyPair, _ns5__CreateRSAKeyPairResponse *ns5__CreateRSAKeyPairResponse)
{	struct soap *soap = this->soap;
	struct __name2__CreateRSAKeyPair soap_tmp___name2__CreateRSAKeyPair;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateRSAKeyPair";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__CreateRSAKeyPair.ns5__CreateRSAKeyPair = ns5__CreateRSAKeyPair;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__CreateRSAKeyPair(soap, &soap_tmp___name2__CreateRSAKeyPair);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__CreateRSAKeyPair(soap, &soap_tmp___name2__CreateRSAKeyPair, "-name2:CreateRSAKeyPair", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__CreateRSAKeyPair(soap, &soap_tmp___name2__CreateRSAKeyPair, "-name2:CreateRSAKeyPair", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CreateRSAKeyPairResponse)
		return soap_closesock(soap);
	ns5__CreateRSAKeyPairResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CreateRSAKeyPairResponse->soap_get(soap, "ns5:CreateRSAKeyPairResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::UploadKeyPairInPKCS8(const char *endpoint, const char *soap_action, _ns5__UploadKeyPairInPKCS8 *ns5__UploadKeyPairInPKCS8, _ns5__UploadKeyPairInPKCS8Response *ns5__UploadKeyPairInPKCS8Response)
{	struct soap *soap = this->soap;
	struct __name2__UploadKeyPairInPKCS8 soap_tmp___name2__UploadKeyPairInPKCS8;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadKeyPairInPKCS8";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__UploadKeyPairInPKCS8.ns5__UploadKeyPairInPKCS8 = ns5__UploadKeyPairInPKCS8;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__UploadKeyPairInPKCS8(soap, &soap_tmp___name2__UploadKeyPairInPKCS8);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__UploadKeyPairInPKCS8(soap, &soap_tmp___name2__UploadKeyPairInPKCS8, "-name2:UploadKeyPairInPKCS8", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__UploadKeyPairInPKCS8(soap, &soap_tmp___name2__UploadKeyPairInPKCS8, "-name2:UploadKeyPairInPKCS8", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__UploadKeyPairInPKCS8Response)
		return soap_closesock(soap);
	ns5__UploadKeyPairInPKCS8Response->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__UploadKeyPairInPKCS8Response->soap_get(soap, "ns5:UploadKeyPairInPKCS8Response", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::UploadCertificateWithPrivateKeyInPKCS12(const char *endpoint, const char *soap_action, _ns5__UploadCertificateWithPrivateKeyInPKCS12 *ns5__UploadCertificateWithPrivateKeyInPKCS12, _ns5__UploadCertificateWithPrivateKeyInPKCS12Response *ns5__UploadCertificateWithPrivateKeyInPKCS12Response)
{	struct soap *soap = this->soap;
	struct __name2__UploadCertificateWithPrivateKeyInPKCS12 soap_tmp___name2__UploadCertificateWithPrivateKeyInPKCS12;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCertificateWithPrivateKeyInPKCS12";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__UploadCertificateWithPrivateKeyInPKCS12.ns5__UploadCertificateWithPrivateKeyInPKCS12 = ns5__UploadCertificateWithPrivateKeyInPKCS12;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__UploadCertificateWithPrivateKeyInPKCS12(soap, &soap_tmp___name2__UploadCertificateWithPrivateKeyInPKCS12);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__UploadCertificateWithPrivateKeyInPKCS12(soap, &soap_tmp___name2__UploadCertificateWithPrivateKeyInPKCS12, "-name2:UploadCertificateWithPrivateKeyInPKCS12", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__UploadCertificateWithPrivateKeyInPKCS12(soap, &soap_tmp___name2__UploadCertificateWithPrivateKeyInPKCS12, "-name2:UploadCertificateWithPrivateKeyInPKCS12", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__UploadCertificateWithPrivateKeyInPKCS12Response)
		return soap_closesock(soap);
	ns5__UploadCertificateWithPrivateKeyInPKCS12Response->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__UploadCertificateWithPrivateKeyInPKCS12Response->soap_get(soap, "ns5:UploadCertificateWithPrivateKeyInPKCS12Response", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::GetKeyStatus(const char *endpoint, const char *soap_action, _ns5__GetKeyStatus *ns5__GetKeyStatus, _ns5__GetKeyStatusResponse *ns5__GetKeyStatusResponse)
{	struct soap *soap = this->soap;
	struct __name2__GetKeyStatus soap_tmp___name2__GetKeyStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetKeyStatus";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__GetKeyStatus.ns5__GetKeyStatus = ns5__GetKeyStatus;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__GetKeyStatus(soap, &soap_tmp___name2__GetKeyStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__GetKeyStatus(soap, &soap_tmp___name2__GetKeyStatus, "-name2:GetKeyStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__GetKeyStatus(soap, &soap_tmp___name2__GetKeyStatus, "-name2:GetKeyStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetKeyStatusResponse)
		return soap_closesock(soap);
	ns5__GetKeyStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetKeyStatusResponse->soap_get(soap, "ns5:GetKeyStatusResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::GetPrivateKeyStatus(const char *endpoint, const char *soap_action, _ns5__GetPrivateKeyStatus *ns5__GetPrivateKeyStatus, _ns5__GetPrivateKeyStatusResponse *ns5__GetPrivateKeyStatusResponse)
{	struct soap *soap = this->soap;
	struct __name2__GetPrivateKeyStatus soap_tmp___name2__GetPrivateKeyStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetPrivateKeyStatus";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__GetPrivateKeyStatus.ns5__GetPrivateKeyStatus = ns5__GetPrivateKeyStatus;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__GetPrivateKeyStatus(soap, &soap_tmp___name2__GetPrivateKeyStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__GetPrivateKeyStatus(soap, &soap_tmp___name2__GetPrivateKeyStatus, "-name2:GetPrivateKeyStatus", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__GetPrivateKeyStatus(soap, &soap_tmp___name2__GetPrivateKeyStatus, "-name2:GetPrivateKeyStatus", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetPrivateKeyStatusResponse)
		return soap_closesock(soap);
	ns5__GetPrivateKeyStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetPrivateKeyStatusResponse->soap_get(soap, "ns5:GetPrivateKeyStatusResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::GetAllKeys(const char *endpoint, const char *soap_action, _ns5__GetAllKeys *ns5__GetAllKeys, _ns5__GetAllKeysResponse *ns5__GetAllKeysResponse)
{	struct soap *soap = this->soap;
	struct __name2__GetAllKeys soap_tmp___name2__GetAllKeys;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllKeys";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__GetAllKeys.ns5__GetAllKeys = ns5__GetAllKeys;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__GetAllKeys(soap, &soap_tmp___name2__GetAllKeys);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__GetAllKeys(soap, &soap_tmp___name2__GetAllKeys, "-name2:GetAllKeys", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__GetAllKeys(soap, &soap_tmp___name2__GetAllKeys, "-name2:GetAllKeys", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetAllKeysResponse)
		return soap_closesock(soap);
	ns5__GetAllKeysResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetAllKeysResponse->soap_get(soap, "ns5:GetAllKeysResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::DeleteKey(const char *endpoint, const char *soap_action, _ns5__DeleteKey *ns5__DeleteKey, _ns5__DeleteKeyResponse *ns5__DeleteKeyResponse)
{	struct soap *soap = this->soap;
	struct __name2__DeleteKey soap_tmp___name2__DeleteKey;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteKey";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__DeleteKey.ns5__DeleteKey = ns5__DeleteKey;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__DeleteKey(soap, &soap_tmp___name2__DeleteKey);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__DeleteKey(soap, &soap_tmp___name2__DeleteKey, "-name2:DeleteKey", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__DeleteKey(soap, &soap_tmp___name2__DeleteKey, "-name2:DeleteKey", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__DeleteKeyResponse)
		return soap_closesock(soap);
	ns5__DeleteKeyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__DeleteKeyResponse->soap_get(soap, "ns5:DeleteKeyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::CreatePKCS10CSR(const char *endpoint, const char *soap_action, _ns5__CreatePKCS10CSR *ns5__CreatePKCS10CSR, _ns5__CreatePKCS10CSRResponse *ns5__CreatePKCS10CSRResponse)
{	struct soap *soap = this->soap;
	struct __name2__CreatePKCS10CSR soap_tmp___name2__CreatePKCS10CSR;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreatePKCS10CSR";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__CreatePKCS10CSR.ns5__CreatePKCS10CSR = ns5__CreatePKCS10CSR;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__CreatePKCS10CSR(soap, &soap_tmp___name2__CreatePKCS10CSR);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__CreatePKCS10CSR(soap, &soap_tmp___name2__CreatePKCS10CSR, "-name2:CreatePKCS10CSR", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__CreatePKCS10CSR(soap, &soap_tmp___name2__CreatePKCS10CSR, "-name2:CreatePKCS10CSR", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CreatePKCS10CSRResponse)
		return soap_closesock(soap);
	ns5__CreatePKCS10CSRResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CreatePKCS10CSRResponse->soap_get(soap, "ns5:CreatePKCS10CSRResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::CreateSelfSignedCertificate(const char *endpoint, const char *soap_action, _ns5__CreateSelfSignedCertificate *ns5__CreateSelfSignedCertificate, _ns5__CreateSelfSignedCertificateResponse *ns5__CreateSelfSignedCertificateResponse)
{	struct soap *soap = this->soap;
	struct __name2__CreateSelfSignedCertificate soap_tmp___name2__CreateSelfSignedCertificate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateSelfSignedCertificate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__CreateSelfSignedCertificate.ns5__CreateSelfSignedCertificate = ns5__CreateSelfSignedCertificate;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__CreateSelfSignedCertificate(soap, &soap_tmp___name2__CreateSelfSignedCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__CreateSelfSignedCertificate(soap, &soap_tmp___name2__CreateSelfSignedCertificate, "-name2:CreateSelfSignedCertificate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__CreateSelfSignedCertificate(soap, &soap_tmp___name2__CreateSelfSignedCertificate, "-name2:CreateSelfSignedCertificate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CreateSelfSignedCertificateResponse)
		return soap_closesock(soap);
	ns5__CreateSelfSignedCertificateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CreateSelfSignedCertificateResponse->soap_get(soap, "ns5:CreateSelfSignedCertificateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::UploadCertificate(const char *endpoint, const char *soap_action, _ns5__UploadCertificate *ns5__UploadCertificate, _ns5__UploadCertificateResponse *ns5__UploadCertificateResponse)
{	struct soap *soap = this->soap;
	struct __name2__UploadCertificate soap_tmp___name2__UploadCertificate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCertificate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__UploadCertificate.ns5__UploadCertificate = ns5__UploadCertificate;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__UploadCertificate(soap, &soap_tmp___name2__UploadCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__UploadCertificate(soap, &soap_tmp___name2__UploadCertificate, "-name2:UploadCertificate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__UploadCertificate(soap, &soap_tmp___name2__UploadCertificate, "-name2:UploadCertificate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__UploadCertificateResponse)
		return soap_closesock(soap);
	ns5__UploadCertificateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__UploadCertificateResponse->soap_get(soap, "ns5:UploadCertificateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::GetCertificate(const char *endpoint, const char *soap_action, _ns5__GetCertificate *ns5__GetCertificate, _ns5__GetCertificateResponse *ns5__GetCertificateResponse)
{	struct soap *soap = this->soap;
	struct __name2__GetCertificate soap_tmp___name2__GetCertificate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__GetCertificate.ns5__GetCertificate = ns5__GetCertificate;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__GetCertificate(soap, &soap_tmp___name2__GetCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__GetCertificate(soap, &soap_tmp___name2__GetCertificate, "-name2:GetCertificate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__GetCertificate(soap, &soap_tmp___name2__GetCertificate, "-name2:GetCertificate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetCertificateResponse)
		return soap_closesock(soap);
	ns5__GetCertificateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetCertificateResponse->soap_get(soap, "ns5:GetCertificateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::GetAllCertificates(const char *endpoint, const char *soap_action, _ns5__GetAllCertificates *ns5__GetAllCertificates, _ns5__GetAllCertificatesResponse *ns5__GetAllCertificatesResponse)
{	struct soap *soap = this->soap;
	struct __name2__GetAllCertificates soap_tmp___name2__GetAllCertificates;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificates";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__GetAllCertificates.ns5__GetAllCertificates = ns5__GetAllCertificates;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__GetAllCertificates(soap, &soap_tmp___name2__GetAllCertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__GetAllCertificates(soap, &soap_tmp___name2__GetAllCertificates, "-name2:GetAllCertificates", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__GetAllCertificates(soap, &soap_tmp___name2__GetAllCertificates, "-name2:GetAllCertificates", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetAllCertificatesResponse)
		return soap_closesock(soap);
	ns5__GetAllCertificatesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetAllCertificatesResponse->soap_get(soap, "ns5:GetAllCertificatesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::DeleteCertificate(const char *endpoint, const char *soap_action, _ns5__DeleteCertificate *ns5__DeleteCertificate, _ns5__DeleteCertificateResponse *ns5__DeleteCertificateResponse)
{	struct soap *soap = this->soap;
	struct __name2__DeleteCertificate soap_tmp___name2__DeleteCertificate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__DeleteCertificate.ns5__DeleteCertificate = ns5__DeleteCertificate;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__DeleteCertificate(soap, &soap_tmp___name2__DeleteCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__DeleteCertificate(soap, &soap_tmp___name2__DeleteCertificate, "-name2:DeleteCertificate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__DeleteCertificate(soap, &soap_tmp___name2__DeleteCertificate, "-name2:DeleteCertificate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__DeleteCertificateResponse)
		return soap_closesock(soap);
	ns5__DeleteCertificateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__DeleteCertificateResponse->soap_get(soap, "ns5:DeleteCertificateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::CreateCertificationPath(const char *endpoint, const char *soap_action, _ns5__CreateCertificationPath *ns5__CreateCertificationPath, _ns5__CreateCertificationPathResponse *ns5__CreateCertificationPathResponse)
{	struct soap *soap = this->soap;
	struct __name2__CreateCertificationPath soap_tmp___name2__CreateCertificationPath;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateCertificationPath";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__CreateCertificationPath.ns5__CreateCertificationPath = ns5__CreateCertificationPath;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__CreateCertificationPath(soap, &soap_tmp___name2__CreateCertificationPath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__CreateCertificationPath(soap, &soap_tmp___name2__CreateCertificationPath, "-name2:CreateCertificationPath", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__CreateCertificationPath(soap, &soap_tmp___name2__CreateCertificationPath, "-name2:CreateCertificationPath", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CreateCertificationPathResponse)
		return soap_closesock(soap);
	ns5__CreateCertificationPathResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CreateCertificationPathResponse->soap_get(soap, "ns5:CreateCertificationPathResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::GetCertificationPath(const char *endpoint, const char *soap_action, _ns5__GetCertificationPath *ns5__GetCertificationPath, _ns5__GetCertificationPathResponse *ns5__GetCertificationPathResponse)
{	struct soap *soap = this->soap;
	struct __name2__GetCertificationPath soap_tmp___name2__GetCertificationPath;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificationPath";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__GetCertificationPath.ns5__GetCertificationPath = ns5__GetCertificationPath;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__GetCertificationPath(soap, &soap_tmp___name2__GetCertificationPath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__GetCertificationPath(soap, &soap_tmp___name2__GetCertificationPath, "-name2:GetCertificationPath", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__GetCertificationPath(soap, &soap_tmp___name2__GetCertificationPath, "-name2:GetCertificationPath", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetCertificationPathResponse)
		return soap_closesock(soap);
	ns5__GetCertificationPathResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetCertificationPathResponse->soap_get(soap, "ns5:GetCertificationPathResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::GetAllCertificationPaths(const char *endpoint, const char *soap_action, _ns5__GetAllCertificationPaths *ns5__GetAllCertificationPaths, _ns5__GetAllCertificationPathsResponse *ns5__GetAllCertificationPathsResponse)
{	struct soap *soap = this->soap;
	struct __name2__GetAllCertificationPaths soap_tmp___name2__GetAllCertificationPaths;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificationPaths";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__GetAllCertificationPaths.ns5__GetAllCertificationPaths = ns5__GetAllCertificationPaths;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__GetAllCertificationPaths(soap, &soap_tmp___name2__GetAllCertificationPaths);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__GetAllCertificationPaths(soap, &soap_tmp___name2__GetAllCertificationPaths, "-name2:GetAllCertificationPaths", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__GetAllCertificationPaths(soap, &soap_tmp___name2__GetAllCertificationPaths, "-name2:GetAllCertificationPaths", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetAllCertificationPathsResponse)
		return soap_closesock(soap);
	ns5__GetAllCertificationPathsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetAllCertificationPathsResponse->soap_get(soap, "ns5:GetAllCertificationPathsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::DeleteCertificationPath(const char *endpoint, const char *soap_action, _ns5__DeleteCertificationPath *ns5__DeleteCertificationPath, _ns5__DeleteCertificationPathResponse *ns5__DeleteCertificationPathResponse)
{	struct soap *soap = this->soap;
	struct __name2__DeleteCertificationPath soap_tmp___name2__DeleteCertificationPath;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificationPath";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__DeleteCertificationPath.ns5__DeleteCertificationPath = ns5__DeleteCertificationPath;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__DeleteCertificationPath(soap, &soap_tmp___name2__DeleteCertificationPath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__DeleteCertificationPath(soap, &soap_tmp___name2__DeleteCertificationPath, "-name2:DeleteCertificationPath", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__DeleteCertificationPath(soap, &soap_tmp___name2__DeleteCertificationPath, "-name2:DeleteCertificationPath", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__DeleteCertificationPathResponse)
		return soap_closesock(soap);
	ns5__DeleteCertificationPathResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__DeleteCertificationPathResponse->soap_get(soap, "ns5:DeleteCertificationPathResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::UploadPassphrase(const char *endpoint, const char *soap_action, _ns5__UploadPassphrase *ns5__UploadPassphrase, _ns5__UploadPassphraseResponse *ns5__UploadPassphraseResponse)
{	struct soap *soap = this->soap;
	struct __name2__UploadPassphrase soap_tmp___name2__UploadPassphrase;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadPassphrase";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__UploadPassphrase.ns5__UploadPassphrase = ns5__UploadPassphrase;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__UploadPassphrase(soap, &soap_tmp___name2__UploadPassphrase);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__UploadPassphrase(soap, &soap_tmp___name2__UploadPassphrase, "-name2:UploadPassphrase", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__UploadPassphrase(soap, &soap_tmp___name2__UploadPassphrase, "-name2:UploadPassphrase", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__UploadPassphraseResponse)
		return soap_closesock(soap);
	ns5__UploadPassphraseResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__UploadPassphraseResponse->soap_get(soap, "ns5:UploadPassphraseResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::GetAllPassphrases(const char *endpoint, const char *soap_action, _ns5__GetAllPassphrases *ns5__GetAllPassphrases, _ns5__GetAllPassphrasesResponse *ns5__GetAllPassphrasesResponse)
{	struct soap *soap = this->soap;
	struct __name2__GetAllPassphrases soap_tmp___name2__GetAllPassphrases;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllPassphrases";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__GetAllPassphrases.ns5__GetAllPassphrases = ns5__GetAllPassphrases;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__GetAllPassphrases(soap, &soap_tmp___name2__GetAllPassphrases);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__GetAllPassphrases(soap, &soap_tmp___name2__GetAllPassphrases, "-name2:GetAllPassphrases", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__GetAllPassphrases(soap, &soap_tmp___name2__GetAllPassphrases, "-name2:GetAllPassphrases", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetAllPassphrasesResponse)
		return soap_closesock(soap);
	ns5__GetAllPassphrasesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetAllPassphrasesResponse->soap_get(soap, "ns5:GetAllPassphrasesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::DeletePassphrase(const char *endpoint, const char *soap_action, _ns5__DeletePassphrase *ns5__DeletePassphrase, _ns5__DeletePassphraseResponse *ns5__DeletePassphraseResponse)
{	struct soap *soap = this->soap;
	struct __name2__DeletePassphrase soap_tmp___name2__DeletePassphrase;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeletePassphrase";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__DeletePassphrase.ns5__DeletePassphrase = ns5__DeletePassphrase;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__DeletePassphrase(soap, &soap_tmp___name2__DeletePassphrase);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__DeletePassphrase(soap, &soap_tmp___name2__DeletePassphrase, "-name2:DeletePassphrase", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__DeletePassphrase(soap, &soap_tmp___name2__DeletePassphrase, "-name2:DeletePassphrase", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__DeletePassphraseResponse)
		return soap_closesock(soap);
	ns5__DeletePassphraseResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__DeletePassphraseResponse->soap_get(soap, "ns5:DeletePassphraseResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::UploadCRL(const char *endpoint, const char *soap_action, _ns5__UploadCRL *ns5__UploadCRL, _ns5__UploadCRLResponse *ns5__UploadCRLResponse)
{	struct soap *soap = this->soap;
	struct __name2__UploadCRL soap_tmp___name2__UploadCRL;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCRL";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__UploadCRL.ns5__UploadCRL = ns5__UploadCRL;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__UploadCRL(soap, &soap_tmp___name2__UploadCRL);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__UploadCRL(soap, &soap_tmp___name2__UploadCRL, "-name2:UploadCRL", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__UploadCRL(soap, &soap_tmp___name2__UploadCRL, "-name2:UploadCRL", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__UploadCRLResponse)
		return soap_closesock(soap);
	ns5__UploadCRLResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__UploadCRLResponse->soap_get(soap, "ns5:UploadCRLResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::GetCRL(const char *endpoint, const char *soap_action, _ns5__GetCRL *ns5__GetCRL, _ns5__GetCRLResponse *ns5__GetCRLResponse)
{	struct soap *soap = this->soap;
	struct __name2__GetCRL soap_tmp___name2__GetCRL;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCRL";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__GetCRL.ns5__GetCRL = ns5__GetCRL;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__GetCRL(soap, &soap_tmp___name2__GetCRL);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__GetCRL(soap, &soap_tmp___name2__GetCRL, "-name2:GetCRL", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__GetCRL(soap, &soap_tmp___name2__GetCRL, "-name2:GetCRL", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetCRLResponse)
		return soap_closesock(soap);
	ns5__GetCRLResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetCRLResponse->soap_get(soap, "ns5:GetCRLResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::GetAllCRLs(const char *endpoint, const char *soap_action, _ns5__GetAllCRLs *ns5__GetAllCRLs, _ns5__GetAllCRLsResponse *ns5__GetAllCRLsResponse)
{	struct soap *soap = this->soap;
	struct __name2__GetAllCRLs soap_tmp___name2__GetAllCRLs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCRLs";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__GetAllCRLs.ns5__GetAllCRLs = ns5__GetAllCRLs;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__GetAllCRLs(soap, &soap_tmp___name2__GetAllCRLs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__GetAllCRLs(soap, &soap_tmp___name2__GetAllCRLs, "-name2:GetAllCRLs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__GetAllCRLs(soap, &soap_tmp___name2__GetAllCRLs, "-name2:GetAllCRLs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetAllCRLsResponse)
		return soap_closesock(soap);
	ns5__GetAllCRLsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetAllCRLsResponse->soap_get(soap, "ns5:GetAllCRLsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::DeleteCRL(const char *endpoint, const char *soap_action, _ns5__DeleteCRL *ns5__DeleteCRL, _ns5__DeleteCRLResponse *ns5__DeleteCRLResponse)
{	struct soap *soap = this->soap;
	struct __name2__DeleteCRL soap_tmp___name2__DeleteCRL;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCRL";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__DeleteCRL.ns5__DeleteCRL = ns5__DeleteCRL;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__DeleteCRL(soap, &soap_tmp___name2__DeleteCRL);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__DeleteCRL(soap, &soap_tmp___name2__DeleteCRL, "-name2:DeleteCRL", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__DeleteCRL(soap, &soap_tmp___name2__DeleteCRL, "-name2:DeleteCRL", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__DeleteCRLResponse)
		return soap_closesock(soap);
	ns5__DeleteCRLResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__DeleteCRLResponse->soap_get(soap, "ns5:DeleteCRLResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::CreateCertPathValidationPolicy(const char *endpoint, const char *soap_action, _ns5__CreateCertPathValidationPolicy *ns5__CreateCertPathValidationPolicy, _ns5__CreateCertPathValidationPolicyResponse *ns5__CreateCertPathValidationPolicyResponse)
{	struct soap *soap = this->soap;
	struct __name2__CreateCertPathValidationPolicy soap_tmp___name2__CreateCertPathValidationPolicy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateCertPathValidationPolicy";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__CreateCertPathValidationPolicy.ns5__CreateCertPathValidationPolicy = ns5__CreateCertPathValidationPolicy;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__CreateCertPathValidationPolicy(soap, &soap_tmp___name2__CreateCertPathValidationPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__CreateCertPathValidationPolicy(soap, &soap_tmp___name2__CreateCertPathValidationPolicy, "-name2:CreateCertPathValidationPolicy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__CreateCertPathValidationPolicy(soap, &soap_tmp___name2__CreateCertPathValidationPolicy, "-name2:CreateCertPathValidationPolicy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CreateCertPathValidationPolicyResponse)
		return soap_closesock(soap);
	ns5__CreateCertPathValidationPolicyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CreateCertPathValidationPolicyResponse->soap_get(soap, "ns5:CreateCertPathValidationPolicyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::GetCertPathValidationPolicy(const char *endpoint, const char *soap_action, _ns5__GetCertPathValidationPolicy *ns5__GetCertPathValidationPolicy, _ns5__GetCertPathValidationPolicyResponse *ns5__GetCertPathValidationPolicyResponse)
{	struct soap *soap = this->soap;
	struct __name2__GetCertPathValidationPolicy soap_tmp___name2__GetCertPathValidationPolicy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertPathValidationPolicy";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__GetCertPathValidationPolicy.ns5__GetCertPathValidationPolicy = ns5__GetCertPathValidationPolicy;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__GetCertPathValidationPolicy(soap, &soap_tmp___name2__GetCertPathValidationPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__GetCertPathValidationPolicy(soap, &soap_tmp___name2__GetCertPathValidationPolicy, "-name2:GetCertPathValidationPolicy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__GetCertPathValidationPolicy(soap, &soap_tmp___name2__GetCertPathValidationPolicy, "-name2:GetCertPathValidationPolicy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetCertPathValidationPolicyResponse)
		return soap_closesock(soap);
	ns5__GetCertPathValidationPolicyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetCertPathValidationPolicyResponse->soap_get(soap, "ns5:GetCertPathValidationPolicyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::GetAllCertPathValidationPolicies(const char *endpoint, const char *soap_action, _ns5__GetAllCertPathValidationPolicies *ns5__GetAllCertPathValidationPolicies, _ns5__GetAllCertPathValidationPoliciesResponse *ns5__GetAllCertPathValidationPoliciesResponse)
{	struct soap *soap = this->soap;
	struct __name2__GetAllCertPathValidationPolicies soap_tmp___name2__GetAllCertPathValidationPolicies;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertPathValidationPolicies";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__GetAllCertPathValidationPolicies.ns5__GetAllCertPathValidationPolicies = ns5__GetAllCertPathValidationPolicies;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__GetAllCertPathValidationPolicies(soap, &soap_tmp___name2__GetAllCertPathValidationPolicies);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__GetAllCertPathValidationPolicies(soap, &soap_tmp___name2__GetAllCertPathValidationPolicies, "-name2:GetAllCertPathValidationPolicies", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__GetAllCertPathValidationPolicies(soap, &soap_tmp___name2__GetAllCertPathValidationPolicies, "-name2:GetAllCertPathValidationPolicies", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetAllCertPathValidationPoliciesResponse)
		return soap_closesock(soap);
	ns5__GetAllCertPathValidationPoliciesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetAllCertPathValidationPoliciesResponse->soap_get(soap, "ns5:GetAllCertPathValidationPoliciesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int KeystoreBindingProxy::DeleteCertPathValidationPolicy(const char *endpoint, const char *soap_action, _ns5__DeleteCertPathValidationPolicy *ns5__DeleteCertPathValidationPolicy, _ns5__DeleteCertPathValidationPolicyResponse *ns5__DeleteCertPathValidationPolicyResponse)
{	struct soap *soap = this->soap;
	struct __name2__DeleteCertPathValidationPolicy soap_tmp___name2__DeleteCertPathValidationPolicy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertPathValidationPolicy";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___name2__DeleteCertPathValidationPolicy.ns5__DeleteCertPathValidationPolicy = ns5__DeleteCertPathValidationPolicy;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___name2__DeleteCertPathValidationPolicy(soap, &soap_tmp___name2__DeleteCertPathValidationPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___name2__DeleteCertPathValidationPolicy(soap, &soap_tmp___name2__DeleteCertPathValidationPolicy, "-name2:DeleteCertPathValidationPolicy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___name2__DeleteCertPathValidationPolicy(soap, &soap_tmp___name2__DeleteCertPathValidationPolicy, "-name2:DeleteCertPathValidationPolicy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__DeleteCertPathValidationPolicyResponse)
		return soap_closesock(soap);
	ns5__DeleteCertPathValidationPolicyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__DeleteCertPathValidationPolicyResponse->soap_get(soap, "ns5:DeleteCertPathValidationPolicyResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
