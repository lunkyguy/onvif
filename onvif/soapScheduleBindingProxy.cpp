/* soapScheduleBindingProxy.cpp
   Generated by gSOAP 2.8.17r from onvif.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapScheduleBindingProxy.h"

ScheduleBindingProxy::ScheduleBindingProxy()
{	this->soap = soap_new();
	this->own = true;
	ScheduleBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

ScheduleBindingProxy::ScheduleBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->own = false;
	ScheduleBindingProxy_init(_soap->imode, _soap->omode);
}

ScheduleBindingProxy::ScheduleBindingProxy(const char *url)
{	this->soap = soap_new();
	this->own = true;
	ScheduleBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

ScheduleBindingProxy::ScheduleBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	ScheduleBindingProxy_init(iomode, iomode);
}

ScheduleBindingProxy::ScheduleBindingProxy(const char *url, soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	ScheduleBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

ScheduleBindingProxy::ScheduleBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->own = true;
	ScheduleBindingProxy_init(imode, omode);
}

ScheduleBindingProxy::~ScheduleBindingProxy()
{	if (this->own)
		soap_free(this->soap);
}

void ScheduleBindingProxy::ScheduleBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
	{"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
	{"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
	{"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
	{"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
	{"wsc", "http://schemas.xmlsoap.org/ws/2005/02/sc", NULL, NULL},
	{"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
	{"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
	{"ns2", "http://www.onvif.org/ver10/pacs", NULL, NULL},
	{"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
	{"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
	{"name", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
	{"name10", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
	{"name11", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
	{"name12", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
	{"name13", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
	{"name14", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
	{"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"name2", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
	{"name3", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
	{"name4", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
	{"ns5", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
	{"name5", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
	{"name6", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
	{"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
	{"name7", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
	{"name8", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
	{"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
	{"name9", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
	{"ns1", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
	{"ns10", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
	{"ns11", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
	{"ns12", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
	{"ns3", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
	{"ns4", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
	{"ns6", "http://www.onvif.org/ver10/authenticationbehavior/wsdl", NULL, NULL},
	{"ns7", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
	{"ns8", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
	{"ns9", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
	{"tad", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
	{"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
	{"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
	{"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
	{"tmd", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
	{"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
	{"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
	{"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
	{"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
	{"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
	{"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void ScheduleBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void ScheduleBindingProxy::reset()
{	destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	ScheduleBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void ScheduleBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void ScheduleBindingProxy::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsse__Security = wsse__Security;
}

const SOAP_ENV__Header *ScheduleBindingProxy::soap_header()
{	return this->soap->header;
}

const SOAP_ENV__Fault *ScheduleBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *ScheduleBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *ScheduleBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int ScheduleBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int ScheduleBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void ScheduleBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void ScheduleBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *ScheduleBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int ScheduleBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _ns11__GetServiceCapabilities *ns11__GetServiceCapabilities, _ns11__GetServiceCapabilitiesResponse *ns11__GetServiceCapabilitiesResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetServiceCapabilities soap_tmp___ns11__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetServiceCapabilities";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns11__GetServiceCapabilities.ns11__GetServiceCapabilities = ns11__GetServiceCapabilities;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetServiceCapabilities(soap, &soap_tmp___ns11__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetServiceCapabilities(soap, &soap_tmp___ns11__GetServiceCapabilities, "-ns11:GetServiceCapabilities", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetServiceCapabilities(soap, &soap_tmp___ns11__GetServiceCapabilities, "-ns11:GetServiceCapabilities", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns11__GetServiceCapabilitiesResponse)
		return soap_closesock(soap);
	ns11__GetServiceCapabilitiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetServiceCapabilitiesResponse->soap_get(soap, "ns11:GetServiceCapabilitiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetScheduleState(const char *endpoint, const char *soap_action, _ns11__GetScheduleState *ns11__GetScheduleState, _ns11__GetScheduleStateResponse *ns11__GetScheduleStateResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetScheduleState soap_tmp___ns11__GetScheduleState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleState";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns11__GetScheduleState.ns11__GetScheduleState = ns11__GetScheduleState;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetScheduleState(soap, &soap_tmp___ns11__GetScheduleState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetScheduleState(soap, &soap_tmp___ns11__GetScheduleState, "-ns11:GetScheduleState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetScheduleState(soap, &soap_tmp___ns11__GetScheduleState, "-ns11:GetScheduleState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns11__GetScheduleStateResponse)
		return soap_closesock(soap);
	ns11__GetScheduleStateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetScheduleStateResponse->soap_get(soap, "ns11:GetScheduleStateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetScheduleInfo(const char *endpoint, const char *soap_action, _ns11__GetScheduleInfo *ns11__GetScheduleInfo, _ns11__GetScheduleInfoResponse *ns11__GetScheduleInfoResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetScheduleInfo soap_tmp___ns11__GetScheduleInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns11__GetScheduleInfo.ns11__GetScheduleInfo = ns11__GetScheduleInfo;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetScheduleInfo(soap, &soap_tmp___ns11__GetScheduleInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetScheduleInfo(soap, &soap_tmp___ns11__GetScheduleInfo, "-ns11:GetScheduleInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetScheduleInfo(soap, &soap_tmp___ns11__GetScheduleInfo, "-ns11:GetScheduleInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns11__GetScheduleInfoResponse)
		return soap_closesock(soap);
	ns11__GetScheduleInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetScheduleInfoResponse->soap_get(soap, "ns11:GetScheduleInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetScheduleInfoList(const char *endpoint, const char *soap_action, _ns11__GetScheduleInfoList *ns11__GetScheduleInfoList, _ns11__GetScheduleInfoListResponse *ns11__GetScheduleInfoListResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetScheduleInfoList soap_tmp___ns11__GetScheduleInfoList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfoList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns11__GetScheduleInfoList.ns11__GetScheduleInfoList = ns11__GetScheduleInfoList;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetScheduleInfoList(soap, &soap_tmp___ns11__GetScheduleInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetScheduleInfoList(soap, &soap_tmp___ns11__GetScheduleInfoList, "-ns11:GetScheduleInfoList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetScheduleInfoList(soap, &soap_tmp___ns11__GetScheduleInfoList, "-ns11:GetScheduleInfoList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns11__GetScheduleInfoListResponse)
		return soap_closesock(soap);
	ns11__GetScheduleInfoListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetScheduleInfoListResponse->soap_get(soap, "ns11:GetScheduleInfoListResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSchedules(const char *endpoint, const char *soap_action, _ns11__GetSchedules *ns11__GetSchedules, _ns11__GetSchedulesResponse *ns11__GetSchedulesResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetSchedules soap_tmp___ns11__GetSchedules;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSchedules";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns11__GetSchedules.ns11__GetSchedules = ns11__GetSchedules;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetSchedules(soap, &soap_tmp___ns11__GetSchedules);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetSchedules(soap, &soap_tmp___ns11__GetSchedules, "-ns11:GetSchedules", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetSchedules(soap, &soap_tmp___ns11__GetSchedules, "-ns11:GetSchedules", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns11__GetSchedulesResponse)
		return soap_closesock(soap);
	ns11__GetSchedulesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetSchedulesResponse->soap_get(soap, "ns11:GetSchedulesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetScheduleList(const char *endpoint, const char *soap_action, _ns11__GetScheduleList *ns11__GetScheduleList, _ns11__GetScheduleListResponse *ns11__GetScheduleListResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetScheduleList soap_tmp___ns11__GetScheduleList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns11__GetScheduleList.ns11__GetScheduleList = ns11__GetScheduleList;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetScheduleList(soap, &soap_tmp___ns11__GetScheduleList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetScheduleList(soap, &soap_tmp___ns11__GetScheduleList, "-ns11:GetScheduleList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetScheduleList(soap, &soap_tmp___ns11__GetScheduleList, "-ns11:GetScheduleList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns11__GetScheduleListResponse)
		return soap_closesock(soap);
	ns11__GetScheduleListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetScheduleListResponse->soap_get(soap, "ns11:GetScheduleListResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::CreateSchedule(const char *endpoint, const char *soap_action, _ns11__CreateSchedule *ns11__CreateSchedule, _ns11__CreateScheduleResponse *ns11__CreateScheduleResponse)
{	struct soap *soap = this->soap;
	struct __ns11__CreateSchedule soap_tmp___ns11__CreateSchedule;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/CreateSchedule";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns11__CreateSchedule.ns11__CreateSchedule = ns11__CreateSchedule;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns11__CreateSchedule(soap, &soap_tmp___ns11__CreateSchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__CreateSchedule(soap, &soap_tmp___ns11__CreateSchedule, "-ns11:CreateSchedule", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__CreateSchedule(soap, &soap_tmp___ns11__CreateSchedule, "-ns11:CreateSchedule", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns11__CreateScheduleResponse)
		return soap_closesock(soap);
	ns11__CreateScheduleResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__CreateScheduleResponse->soap_get(soap, "ns11:CreateScheduleResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::SetSchedule(const char *endpoint, const char *soap_action, _ns11__SetSchedule *ns11__SetSchedule, _ns11__SetScheduleResponse *ns11__SetScheduleResponse)
{	struct soap *soap = this->soap;
	struct __ns11__SetSchedule soap_tmp___ns11__SetSchedule;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/SetSchedule";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns11__SetSchedule.ns11__SetSchedule = ns11__SetSchedule;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns11__SetSchedule(soap, &soap_tmp___ns11__SetSchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__SetSchedule(soap, &soap_tmp___ns11__SetSchedule, "-ns11:SetSchedule", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__SetSchedule(soap, &soap_tmp___ns11__SetSchedule, "-ns11:SetSchedule", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns11__SetScheduleResponse)
		return soap_closesock(soap);
	ns11__SetScheduleResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__SetScheduleResponse->soap_get(soap, "ns11:SetScheduleResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::ModifySchedule(const char *endpoint, const char *soap_action, _ns11__ModifySchedule *ns11__ModifySchedule, _ns11__ModifyScheduleResponse *ns11__ModifyScheduleResponse)
{	struct soap *soap = this->soap;
	struct __ns11__ModifySchedule soap_tmp___ns11__ModifySchedule;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/ModifySchedule";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns11__ModifySchedule.ns11__ModifySchedule = ns11__ModifySchedule;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns11__ModifySchedule(soap, &soap_tmp___ns11__ModifySchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__ModifySchedule(soap, &soap_tmp___ns11__ModifySchedule, "-ns11:ModifySchedule", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__ModifySchedule(soap, &soap_tmp___ns11__ModifySchedule, "-ns11:ModifySchedule", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns11__ModifyScheduleResponse)
		return soap_closesock(soap);
	ns11__ModifyScheduleResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__ModifyScheduleResponse->soap_get(soap, "ns11:ModifyScheduleResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::DeleteSchedule(const char *endpoint, const char *soap_action, _ns11__DeleteSchedule *ns11__DeleteSchedule, _ns11__DeleteScheduleResponse *ns11__DeleteScheduleResponse)
{	struct soap *soap = this->soap;
	struct __ns11__DeleteSchedule soap_tmp___ns11__DeleteSchedule;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/DeleteSchedule";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns11__DeleteSchedule.ns11__DeleteSchedule = ns11__DeleteSchedule;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns11__DeleteSchedule(soap, &soap_tmp___ns11__DeleteSchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__DeleteSchedule(soap, &soap_tmp___ns11__DeleteSchedule, "-ns11:DeleteSchedule", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__DeleteSchedule(soap, &soap_tmp___ns11__DeleteSchedule, "-ns11:DeleteSchedule", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns11__DeleteScheduleResponse)
		return soap_closesock(soap);
	ns11__DeleteScheduleResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__DeleteScheduleResponse->soap_get(soap, "ns11:DeleteScheduleResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSpecialDayGroupInfo(const char *endpoint, const char *soap_action, _ns11__GetSpecialDayGroupInfo *ns11__GetSpecialDayGroupInfo, _ns11__GetSpecialDayGroupInfoResponse *ns11__GetSpecialDayGroupInfoResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetSpecialDayGroupInfo soap_tmp___ns11__GetSpecialDayGroupInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfo";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns11__GetSpecialDayGroupInfo.ns11__GetSpecialDayGroupInfo = ns11__GetSpecialDayGroupInfo;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetSpecialDayGroupInfo(soap, &soap_tmp___ns11__GetSpecialDayGroupInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetSpecialDayGroupInfo(soap, &soap_tmp___ns11__GetSpecialDayGroupInfo, "-ns11:GetSpecialDayGroupInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetSpecialDayGroupInfo(soap, &soap_tmp___ns11__GetSpecialDayGroupInfo, "-ns11:GetSpecialDayGroupInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns11__GetSpecialDayGroupInfoResponse)
		return soap_closesock(soap);
	ns11__GetSpecialDayGroupInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetSpecialDayGroupInfoResponse->soap_get(soap, "ns11:GetSpecialDayGroupInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSpecialDayGroupInfoList(const char *endpoint, const char *soap_action, _ns11__GetSpecialDayGroupInfoList *ns11__GetSpecialDayGroupInfoList, _ns11__GetSpecialDayGroupInfoListResponse *ns11__GetSpecialDayGroupInfoListResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetSpecialDayGroupInfoList soap_tmp___ns11__GetSpecialDayGroupInfoList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfoList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns11__GetSpecialDayGroupInfoList.ns11__GetSpecialDayGroupInfoList = ns11__GetSpecialDayGroupInfoList;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetSpecialDayGroupInfoList(soap, &soap_tmp___ns11__GetSpecialDayGroupInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetSpecialDayGroupInfoList(soap, &soap_tmp___ns11__GetSpecialDayGroupInfoList, "-ns11:GetSpecialDayGroupInfoList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetSpecialDayGroupInfoList(soap, &soap_tmp___ns11__GetSpecialDayGroupInfoList, "-ns11:GetSpecialDayGroupInfoList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns11__GetSpecialDayGroupInfoListResponse)
		return soap_closesock(soap);
	ns11__GetSpecialDayGroupInfoListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetSpecialDayGroupInfoListResponse->soap_get(soap, "ns11:GetSpecialDayGroupInfoListResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSpecialDayGroups(const char *endpoint, const char *soap_action, _ns11__GetSpecialDayGroups *ns11__GetSpecialDayGroups, _ns11__GetSpecialDayGroupsResponse *ns11__GetSpecialDayGroupsResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetSpecialDayGroups soap_tmp___ns11__GetSpecialDayGroups;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroups";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns11__GetSpecialDayGroups.ns11__GetSpecialDayGroups = ns11__GetSpecialDayGroups;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetSpecialDayGroups(soap, &soap_tmp___ns11__GetSpecialDayGroups);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetSpecialDayGroups(soap, &soap_tmp___ns11__GetSpecialDayGroups, "-ns11:GetSpecialDayGroups", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetSpecialDayGroups(soap, &soap_tmp___ns11__GetSpecialDayGroups, "-ns11:GetSpecialDayGroups", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns11__GetSpecialDayGroupsResponse)
		return soap_closesock(soap);
	ns11__GetSpecialDayGroupsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetSpecialDayGroupsResponse->soap_get(soap, "ns11:GetSpecialDayGroupsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSpecialDayGroupList(const char *endpoint, const char *soap_action, _ns11__GetSpecialDayGroupList *ns11__GetSpecialDayGroupList, _ns11__GetSpecialDayGroupListResponse *ns11__GetSpecialDayGroupListResponse)
{	struct soap *soap = this->soap;
	struct __ns11__GetSpecialDayGroupList soap_tmp___ns11__GetSpecialDayGroupList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns11__GetSpecialDayGroupList.ns11__GetSpecialDayGroupList = ns11__GetSpecialDayGroupList;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetSpecialDayGroupList(soap, &soap_tmp___ns11__GetSpecialDayGroupList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetSpecialDayGroupList(soap, &soap_tmp___ns11__GetSpecialDayGroupList, "-ns11:GetSpecialDayGroupList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetSpecialDayGroupList(soap, &soap_tmp___ns11__GetSpecialDayGroupList, "-ns11:GetSpecialDayGroupList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns11__GetSpecialDayGroupListResponse)
		return soap_closesock(soap);
	ns11__GetSpecialDayGroupListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetSpecialDayGroupListResponse->soap_get(soap, "ns11:GetSpecialDayGroupListResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::CreateSpecialDayGroup(const char *endpoint, const char *soap_action, _ns11__CreateSpecialDayGroup *ns11__CreateSpecialDayGroup, _ns11__CreateSpecialDayGroupResponse *ns11__CreateSpecialDayGroupResponse)
{	struct soap *soap = this->soap;
	struct __ns11__CreateSpecialDayGroup soap_tmp___ns11__CreateSpecialDayGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/CreateSpecialDayGroup";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns11__CreateSpecialDayGroup.ns11__CreateSpecialDayGroup = ns11__CreateSpecialDayGroup;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns11__CreateSpecialDayGroup(soap, &soap_tmp___ns11__CreateSpecialDayGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__CreateSpecialDayGroup(soap, &soap_tmp___ns11__CreateSpecialDayGroup, "-ns11:CreateSpecialDayGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__CreateSpecialDayGroup(soap, &soap_tmp___ns11__CreateSpecialDayGroup, "-ns11:CreateSpecialDayGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns11__CreateSpecialDayGroupResponse)
		return soap_closesock(soap);
	ns11__CreateSpecialDayGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__CreateSpecialDayGroupResponse->soap_get(soap, "ns11:CreateSpecialDayGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::SetSpecialDayGroup(const char *endpoint, const char *soap_action, _ns11__SetSpecialDayGroup *ns11__SetSpecialDayGroup, _ns11__SetSpecialDayGroupResponse *ns11__SetSpecialDayGroupResponse)
{	struct soap *soap = this->soap;
	struct __ns11__SetSpecialDayGroup soap_tmp___ns11__SetSpecialDayGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/SetSpecialDayGroup";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns11__SetSpecialDayGroup.ns11__SetSpecialDayGroup = ns11__SetSpecialDayGroup;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns11__SetSpecialDayGroup(soap, &soap_tmp___ns11__SetSpecialDayGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__SetSpecialDayGroup(soap, &soap_tmp___ns11__SetSpecialDayGroup, "-ns11:SetSpecialDayGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__SetSpecialDayGroup(soap, &soap_tmp___ns11__SetSpecialDayGroup, "-ns11:SetSpecialDayGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns11__SetSpecialDayGroupResponse)
		return soap_closesock(soap);
	ns11__SetSpecialDayGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__SetSpecialDayGroupResponse->soap_get(soap, "ns11:SetSpecialDayGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::ModifySpecialDayGroup(const char *endpoint, const char *soap_action, _ns11__ModifySpecialDayGroup *ns11__ModifySpecialDayGroup, _ns11__ModifySpecialDayGroupResponse *ns11__ModifySpecialDayGroupResponse)
{	struct soap *soap = this->soap;
	struct __ns11__ModifySpecialDayGroup soap_tmp___ns11__ModifySpecialDayGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/ModifySpecialDayGroup";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns11__ModifySpecialDayGroup.ns11__ModifySpecialDayGroup = ns11__ModifySpecialDayGroup;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns11__ModifySpecialDayGroup(soap, &soap_tmp___ns11__ModifySpecialDayGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__ModifySpecialDayGroup(soap, &soap_tmp___ns11__ModifySpecialDayGroup, "-ns11:ModifySpecialDayGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__ModifySpecialDayGroup(soap, &soap_tmp___ns11__ModifySpecialDayGroup, "-ns11:ModifySpecialDayGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns11__ModifySpecialDayGroupResponse)
		return soap_closesock(soap);
	ns11__ModifySpecialDayGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__ModifySpecialDayGroupResponse->soap_get(soap, "ns11:ModifySpecialDayGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::DeleteSpecialDayGroup(const char *endpoint, const char *soap_action, _ns11__DeleteSpecialDayGroup *ns11__DeleteSpecialDayGroup, _ns11__DeleteSpecialDayGroupResponse *ns11__DeleteSpecialDayGroupResponse)
{	struct soap *soap = this->soap;
	struct __ns11__DeleteSpecialDayGroup soap_tmp___ns11__DeleteSpecialDayGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/DeleteSpecialDayGroup";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns11__DeleteSpecialDayGroup.ns11__DeleteSpecialDayGroup = ns11__DeleteSpecialDayGroup;
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns11__DeleteSpecialDayGroup(soap, &soap_tmp___ns11__DeleteSpecialDayGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__DeleteSpecialDayGroup(soap, &soap_tmp___ns11__DeleteSpecialDayGroup, "-ns11:DeleteSpecialDayGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__DeleteSpecialDayGroup(soap, &soap_tmp___ns11__DeleteSpecialDayGroup, "-ns11:DeleteSpecialDayGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns11__DeleteSpecialDayGroupResponse)
		return soap_closesock(soap);
	ns11__DeleteSpecialDayGroupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__DeleteSpecialDayGroupResponse->soap_get(soap, "ns11:DeleteSpecialDayGroupResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
