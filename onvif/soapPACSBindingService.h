/* soapPACSBindingService.h
   Generated by gSOAP 2.8.17r from onvif.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapPACSBindingService_H
#define soapPACSBindingService_H
#include "soapH.h"
class SOAP_CMAC PACSBindingService
{ public:
	struct soap *soap;
	bool own;
	/// Constructor
	PACSBindingService();
	/// Constructor to use/share an engine state
	PACSBindingService(struct soap*);
	/// Constructor with engine input+output mode control
	PACSBindingService(soap_mode iomode);
	/// Constructor with engine input and output mode control
	PACSBindingService(soap_mode imode, soap_mode omode);
	/// Destructor, also frees all deserialized data
	virtual ~PACSBindingService();
	/// Delete all deserialized data (with soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to defaults
	virtual	void reset();
	/// Initializer used by constructor
	virtual	void PACSBindingService_init(soap_mode imode, soap_mode omode);
	/// Create a copy
	virtual	PACSBindingService *copy() SOAP_PURE_VIRTUAL;
	/// Close connection (normally automatic)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Return sender-related fault to sender
	virtual	int soap_senderfault(const char *string, const char *detailXML);
	/// Return sender-related fault with SOAP 1.2 subcode to sender
	virtual	int soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML);
	/// Return receiver-related fault to sender
	virtual	int soap_receiverfault(const char *string, const char *detailXML);
	/// Return receiver-related fault with SOAP 1.2 subcode to sender
	virtual	int soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML);
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Put SOAP Header in message
	virtual	void soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security);
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Run simple single-thread iterative service on port until a connection error occurs (returns error code or SOAP_OK), use this->bind_flag = SO_REUSEADDR to rebind for a rerun
	virtual	int run(int port);
	/// Bind service to port (returns master socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET bind(const char *host, int port, int backlog);
	/// Accept next request (returns socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET accept();
#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
	/// Then accept SSL handshake, when SSL is used
	virtual	int ssl_accept();
#endif
	/// Serve this request (returns error code or SOAP_OK)
	virtual	int serve();
	/// Used by serve() to dispatch a request (returns error code or SOAP_OK)
	virtual	int dispatch();

	///
	/// Service operations (you should define these):
	/// Note: compile with -DWITH_PURE_VIRTUAL for pure virtual methods
	///

	/// Web service operation 'GetServiceCapabilities' (returns error code or SOAP_OK)
	virtual	int GetServiceCapabilities(_ns1__GetServiceCapabilities *ns1__GetServiceCapabilities, _ns1__GetServiceCapabilitiesResponse *ns1__GetServiceCapabilitiesResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAccessPointInfoList' (returns error code or SOAP_OK)
	virtual	int GetAccessPointInfoList(_ns1__GetAccessPointInfoList *ns1__GetAccessPointInfoList, _ns1__GetAccessPointInfoListResponse *ns1__GetAccessPointInfoListResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAccessPointInfo' (returns error code or SOAP_OK)
	virtual	int GetAccessPointInfo(_ns1__GetAccessPointInfo *ns1__GetAccessPointInfo, _ns1__GetAccessPointInfoResponse *ns1__GetAccessPointInfoResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAccessPointList' (returns error code or SOAP_OK)
	virtual	int GetAccessPointList(_ns1__GetAccessPointList *ns1__GetAccessPointList, _ns1__GetAccessPointListResponse *ns1__GetAccessPointListResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAccessPoints' (returns error code or SOAP_OK)
	virtual	int GetAccessPoints(_ns1__GetAccessPoints *ns1__GetAccessPoints, _ns1__GetAccessPointsResponse *ns1__GetAccessPointsResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'CreateAccessPoint' (returns error code or SOAP_OK)
	virtual	int CreateAccessPoint(_ns1__CreateAccessPoint *ns1__CreateAccessPoint, _ns1__CreateAccessPointResponse *ns1__CreateAccessPointResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'SetAccessPoint' (returns error code or SOAP_OK)
	virtual	int SetAccessPoint(_ns1__SetAccessPoint *ns1__SetAccessPoint, _ns1__SetAccessPointResponse *ns1__SetAccessPointResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'ModifyAccessPoint' (returns error code or SOAP_OK)
	virtual	int ModifyAccessPoint(_ns1__ModifyAccessPoint *ns1__ModifyAccessPoint, _ns1__ModifyAccessPointResponse *ns1__ModifyAccessPointResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'DeleteAccessPoint' (returns error code or SOAP_OK)
	virtual	int DeleteAccessPoint(_ns1__DeleteAccessPoint *ns1__DeleteAccessPoint, _ns1__DeleteAccessPointResponse *ns1__DeleteAccessPointResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'SetAccessPointAuthenticationProfile' (returns error code or SOAP_OK)
	virtual	int SetAccessPointAuthenticationProfile(_ns1__SetAccessPointAuthenticationProfile *ns1__SetAccessPointAuthenticationProfile, _ns1__SetAccessPointAuthenticationProfileResponse *ns1__SetAccessPointAuthenticationProfileResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'DeleteAccessPointAuthenticationProfile' (returns error code or SOAP_OK)
	virtual	int DeleteAccessPointAuthenticationProfile(_ns1__DeleteAccessPointAuthenticationProfile *ns1__DeleteAccessPointAuthenticationProfile, _ns1__DeleteAccessPointAuthenticationProfileResponse *ns1__DeleteAccessPointAuthenticationProfileResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAreaInfoList' (returns error code or SOAP_OK)
	virtual	int GetAreaInfoList(_ns1__GetAreaInfoList *ns1__GetAreaInfoList, _ns1__GetAreaInfoListResponse *ns1__GetAreaInfoListResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAreaInfo' (returns error code or SOAP_OK)
	virtual	int GetAreaInfo(_ns1__GetAreaInfo *ns1__GetAreaInfo, _ns1__GetAreaInfoResponse *ns1__GetAreaInfoResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAreaList' (returns error code or SOAP_OK)
	virtual	int GetAreaList(_ns1__GetAreaList *ns1__GetAreaList, _ns1__GetAreaListResponse *ns1__GetAreaListResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAreas' (returns error code or SOAP_OK)
	virtual	int GetAreas(_ns1__GetAreas *ns1__GetAreas, _ns1__GetAreasResponse *ns1__GetAreasResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'CreateArea' (returns error code or SOAP_OK)
	virtual	int CreateArea(_ns1__CreateArea *ns1__CreateArea, _ns1__CreateAreaResponse *ns1__CreateAreaResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'SetArea' (returns error code or SOAP_OK)
	virtual	int SetArea(_ns1__SetArea *ns1__SetArea, _ns1__SetAreaResponse *ns1__SetAreaResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'ModifyArea' (returns error code or SOAP_OK)
	virtual	int ModifyArea(_ns1__ModifyArea *ns1__ModifyArea, _ns1__ModifyAreaResponse *ns1__ModifyAreaResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'DeleteArea' (returns error code or SOAP_OK)
	virtual	int DeleteArea(_ns1__DeleteArea *ns1__DeleteArea, _ns1__DeleteAreaResponse *ns1__DeleteAreaResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'GetAccessPointState' (returns error code or SOAP_OK)
	virtual	int GetAccessPointState(_ns1__GetAccessPointState *ns1__GetAccessPointState, _ns1__GetAccessPointStateResponse *ns1__GetAccessPointStateResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'EnableAccessPoint' (returns error code or SOAP_OK)
	virtual	int EnableAccessPoint(_ns1__EnableAccessPoint *ns1__EnableAccessPoint, _ns1__EnableAccessPointResponse *ns1__EnableAccessPointResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'DisableAccessPoint' (returns error code or SOAP_OK)
	virtual	int DisableAccessPoint(_ns1__DisableAccessPoint *ns1__DisableAccessPoint, _ns1__DisableAccessPointResponse *ns1__DisableAccessPointResponse) SOAP_PURE_VIRTUAL;

	/// Web service operation 'ExternalAuthorization' (returns error code or SOAP_OK)
	virtual	int ExternalAuthorization(_ns1__ExternalAuthorization *ns1__ExternalAuthorization, _ns1__ExternalAuthorizationResponse *ns1__ExternalAuthorizationResponse) SOAP_PURE_VIRTUAL;
};
#endif
